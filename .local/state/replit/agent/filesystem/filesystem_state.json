{"file_contents":{"client/src/components/examples/RFQSection.tsx":{"content":"import RFQSection from '../RFQSection';\n\nexport default function RFQSectionExample() {\n  return <RFQSection />;\n}\n","size_bytes":114},"client/src/pages/SupplierDashboard.tsx":{"content":"import Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Eye, \n  MessageSquare, \n  TrendingUp, \n  Package,\n  Plus,\n  FileText\n} from \"lucide-react\";\n\nexport default function SupplierDashboard() {\n  //todo: remove mock functionality\n  const stats = [\n    { label: \"Product Views\", value: \"12.5K\", icon: Eye, change: \"+15%\", color: \"text-gray-600\" },\n    { label: \"Inquiries Received\", value: \"48\", icon: MessageSquare, change: \"+8%\", color: \"text-green-600\" },\n    { label: \"Response Rate\", value: \"95%\", icon: TrendingUp, change: \"+2%\", color: \"text-primary\" },\n    { label: \"Active Products\", value: \"124\", icon: Package, change: \"+5\", color: \"text-amber-600\" },\n  ];\n\n  const recentInquiries = [\n    { id: 1, buyer: \"ABC Trading Co.\", product: \"Wireless Headphones\", quantity: \"5,000 units\", status: \"Pending\", time: \"2h ago\" },\n    { id: 2, buyer: \"Global Imports Ltd\", product: \"Bluetooth Speakers\", quantity: \"2,000 units\", status: \"Replied\", time: \"5h ago\" },\n    { id: 3, buyer: \"Tech Solutions Inc\", product: \"Smart Watches\", quantity: \"1,000 units\", status: \"Quoted\", time: \"1d ago\" },\n  ];\n\n  const rfqMatches = [\n    { id: 1, title: \"Looking for Wireless Earbuds - 10K units\", category: \"Electronics\", location: \"USA\", timeLeft: \"2 days\" },\n    { id: 2, title: \"Need Bluetooth Speakers for Retail\", category: \"Electronics\", location: \"UK\", timeLeft: \"5 days\" },\n  ];\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"flex justify-between items-center mb-8\">\n            <div>\n              <h1 className=\"text-3xl font-bold mb-2\">Supplier Dashboard</h1>\n              <p className=\"text-muted-foreground\">Manage your products and track performance</p>\n            </div>\n            <Button size=\"lg\" data-testid=\"button-add-product\">\n              <Plus className=\"w-4 h-4 mr-2\" />\n              Add Product\n            </Button>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n            {stats.map((stat, index) => {\n              const Icon = stat.icon;\n              return (\n                <Card key={index} data-testid={`card-stat-${index}`}>\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <div className={`w-10 h-10 rounded-full bg-muted flex items-center justify-center ${stat.color}`}>\n                        <Icon className=\"w-5 h-5\" />\n                      </div>\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        {stat.change}\n                      </Badge>\n                    </div>\n                    <p className=\"text-sm text-muted-foreground mb-1\">{stat.label}</p>\n                    <p className=\"text-2xl font-bold\" data-testid={`text-stat-value-${index}`}>{stat.value}</p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n\n          <Tabs defaultValue=\"inquiries\" className=\"space-y-6\">\n            <TabsList>\n              <TabsTrigger value=\"inquiries\" data-testid=\"tab-inquiries\">Recent Inquiries</TabsTrigger>\n              <TabsTrigger value=\"rfq\" data-testid=\"tab-rfq\">Matching RFQs</TabsTrigger>\n              <TabsTrigger value=\"products\" data-testid=\"tab-products\">My Products</TabsTrigger>\n              <TabsTrigger value=\"analytics\" data-testid=\"tab-analytics\">Analytics</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"inquiries\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Recent Inquiries</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {recentInquiries.map((inquiry) => (\n                      <div key={inquiry.id} className=\"flex items-center justify-between p-4 border rounded-lg hover:bg-muted/50 transition-colors\" data-testid={`inquiry-${inquiry.id}`}>\n                        <div className=\"flex-1\">\n                          <h4 className=\"font-medium mb-1\">{inquiry.buyer}</h4>\n                          <p className=\"text-sm text-muted-foreground mb-1\">{inquiry.product} • {inquiry.quantity}</p>\n                          <p className=\"text-xs text-muted-foreground\">{inquiry.time}</p>\n                        </div>\n                        <div className=\"flex items-center gap-4\">\n                          <Badge variant={inquiry.status === \"Replied\" ? \"default\" : inquiry.status === \"Quoted\" ? \"secondary\" : \"outline\"}>\n                            {inquiry.status}\n                          </Badge>\n                          <Button variant=\"outline\" size=\"sm\" data-testid={`button-view-inquiry-${inquiry.id}`}>View</Button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  <Button className=\"w-full mt-4\" variant=\"outline\" data-testid=\"button-view-all-inquiries\">View All Inquiries</Button>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"rfq\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Matching RFQs</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {rfqMatches.map((rfq) => (\n                      <div key={rfq.id} className=\"p-4 border rounded-lg hover:bg-muted/50 transition-colors\" data-testid={`rfq-${rfq.id}`}>\n                        <div className=\"flex justify-between items-start mb-3\">\n                          <h4 className=\"font-medium\">{rfq.title}</h4>\n                          <Badge variant=\"outline\">{rfq.category}</Badge>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"text-sm text-muted-foreground\">\n                            {rfq.location} • {rfq.timeLeft} remaining\n                          </div>\n                          <Button size=\"sm\" data-testid={`button-send-quote-${rfq.id}`}>Send Quotation</Button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  <Button className=\"w-full mt-4\" variant=\"outline\" data-testid=\"button-browse-rfqs\">Browse All RFQs</Button>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"products\">\n              <Card>\n                <CardHeader>\n                  <div className=\"flex justify-between items-center\">\n                    <CardTitle>Product Management</CardTitle>\n                    <Button data-testid=\"button-bulk-upload\">\n                      <FileText className=\"w-4 h-4 mr-2\" />\n                      Bulk Upload\n                    </Button>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-center py-12\">\n                    <Package className=\"w-16 h-16 mx-auto text-muted-foreground mb-4\" />\n                    <h3 className=\"font-semibold mb-2\">Manage Your Products</h3>\n                    <p className=\"text-muted-foreground mb-4\">Add, edit, or remove products from your catalog</p>\n                    <Button data-testid=\"button-add-first-product\">\n                      <Plus className=\"w-4 h-4 mr-2\" />\n                      Add Your First Product\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"analytics\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Performance Analytics</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-center py-12\">\n                    <TrendingUp className=\"w-16 h-16 mx-auto text-muted-foreground mb-4\" />\n                    <h3 className=\"font-semibold mb-2\">Track Your Performance</h3>\n                    <p className=\"text-muted-foreground\">View detailed analytics and insights about your store</p>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":8744},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/pages/Favorites.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Card } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Heart, Search, ShoppingCart, MessageSquare, Building2, Star, Trash2 } from \"lucide-react\";\n\nexport default function Favorites() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const favoriteProducts = [\n    {\n      id: 1,\n      name: \"Industrial Metal Parts\",\n      supplier: \"Shanghai Manufacturing Co.\",\n      price: \"$2.50 - $4.00\",\n      moq: \"100 pieces\",\n      rating: 4.8,\n      image: \"/placeholder.svg\",\n      verified: true\n    },\n    {\n      id: 2,\n      name: \"Electronic Components\",\n      supplier: \"Shenzhen Electronics Ltd.\",\n      price: \"$0.89 - $1.50\",\n      moq: \"500 pieces\",\n      rating: 4.9,\n      image: \"/placeholder.svg\",\n      verified: true\n    },\n  ];\n\n  const favoriteSuppliers = [\n    {\n      id: 1,\n      name: \"Shanghai Manufacturing Co.\",\n      products: 1250,\n      responseRate: \"98%\",\n      location: \"Shanghai, China\",\n      verified: true,\n      logo: \"/placeholder.svg\"\n    },\n    {\n      id: 2,\n      name: \"Guangzhou Trading Ltd.\",\n      products: 856,\n      responseRate: \"95%\",\n      location: \"Guangzhou, China\",\n      verified: true,\n      logo: \"/placeholder.svg\"\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1 bg-gray-50 dark:bg-gray-900\">\n        <div className=\"gradient-blue text-white py-12\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <h1 className=\"text-4xl font-bold mb-2\">My Favorites</h1>\n            <p className=\"text-gray-200\">Products and suppliers you've saved</p>\n          </div>\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"mb-6\">\n            <div className=\"relative max-w-md\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n              <Input\n                type=\"search\"\n                placeholder=\"Search favorites...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"pl-10\"\n                data-testid=\"input-search-favorites\"\n              />\n            </div>\n          </div>\n\n          <Tabs defaultValue=\"products\" className=\"space-y-6\">\n            <TabsList className=\"bg-white dark:bg-gray-800\">\n              <TabsTrigger value=\"products\" data-testid=\"tab-products\">\n                <Heart className=\"h-4 w-4 mr-2\" />\n                Products ({favoriteProducts.length})\n              </TabsTrigger>\n              <TabsTrigger value=\"suppliers\" data-testid=\"tab-suppliers\">\n                <Building2 className=\"h-4 w-4 mr-2\" />\n                Suppliers ({favoriteSuppliers.length})\n              </TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"products\" className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {favoriteProducts.map((product) => (\n                <Card key={product.id} className=\"overflow-hidden hover:shadow-lg transition-shadow glass-card\">\n                  <div className=\"relative\">\n                    <img\n                      src={product.image}\n                      alt={product.name}\n                      className=\"w-full h-48 object-cover\"\n                    />\n                    <Button\n                      size=\"icon\"\n                      variant=\"ghost\"\n                      className=\"absolute top-2 right-2 bg-white/80 hover:bg-white\"\n                    >\n                      <Heart className=\"h-5 w-5 fill-red-500 text-red-500\" />\n                    </Button>\n                  </div>\n                  \n                  <div className=\"p-4\">\n                    <Link href={`/product/${product.id}`}>\n                      <h3 className=\"font-semibold text-lg mb-2 hover:text-primary transition-colors\">\n                        {product.name}\n                      </h3>\n                    </Link>\n                    \n                    <div className=\"flex items-center gap-2 mb-3\">\n                      <Link href={`/supplier/${product.id}`} className=\"text-gray-600 dark:text-gray-400 hover:text-primary text-sm\">\n                        {product.supplier}\n                      </Link>\n                      {product.verified && (\n                        <Badge variant=\"secondary\" className=\"text-xs\">Verified</Badge>\n                      )}\n                    </div>\n\n                    <div className=\"flex items-center gap-1 mb-3\">\n                      <Star className=\"h-4 w-4 fill-yellow-400 text-yellow-400\" />\n                      <span className=\"font-medium\">{product.rating}</span>\n                    </div>\n\n                    <div className=\"space-y-2 mb-4\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-600 dark:text-gray-400\">Price:</span>\n                        <span className=\"font-semibold\">{product.price}/piece</span>\n                      </div>\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-600 dark:text-gray-400\">MOQ:</span>\n                        <span className=\"font-semibold\">{product.moq}</span>\n                      </div>\n                    </div>\n\n                    <div className=\"flex gap-2\">\n                      <Button className=\"flex-1 gradient-blue text-white\" size=\"sm\">\n                        <ShoppingCart className=\"h-4 w-4 mr-1\" />\n                        Add to Cart\n                      </Button>\n                      <Button variant=\"outline\" size=\"sm\">\n                        <MessageSquare className=\"h-4 w-4\" />\n                      </Button>\n                      <Button variant=\"outline\" size=\"sm\">\n                        <Trash2 className=\"h-4 w-4 text-red-500\" />\n                      </Button>\n                    </div>\n                  </div>\n                </Card>\n              ))}\n            </TabsContent>\n\n            <TabsContent value=\"suppliers\" className=\"space-y-4\">\n              {favoriteSuppliers.map((supplier) => (\n                <Card key={supplier.id} className=\"p-6 hover:shadow-lg transition-shadow glass-card\">\n                  <div className=\"flex items-start gap-6\">\n                    <img\n                      src={supplier.logo}\n                      alt={supplier.name}\n                      className=\"w-20 h-20 rounded-lg object-cover\"\n                    />\n                    \n                    <div className=\"flex-1\">\n                      <div className=\"flex items-start justify-between mb-3\">\n                        <div>\n                          <Link href={`/supplier/${supplier.id}`}>\n                            <h3 className=\"text-xl font-semibold hover:text-primary transition-colors\">\n                              {supplier.name}\n                            </h3>\n                          </Link>\n                          <p className=\"text-gray-600 dark:text-gray-400\">{supplier.location}</p>\n                        </div>\n                        {supplier.verified && (\n                          <Badge className=\"bg-gray-500 text-white\">Verified Supplier</Badge>\n                        )}\n                      </div>\n\n                      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Products</p>\n                          <p className=\"font-semibold\">{supplier.products}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Response Rate</p>\n                          <p className=\"font-semibold\">{supplier.responseRate}</p>\n                        </div>\n                        <div className=\"flex gap-2\">\n                          <Link href={`/supplier/${supplier.id}`}>\n                            <Button variant=\"outline\" size=\"sm\">\n                              <Building2 className=\"h-4 w-4 mr-2\" />\n                              View Store\n                            </Button>\n                          </Link>\n                          <Button variant=\"outline\" size=\"sm\">\n                            <MessageSquare className=\"h-4 w-4 mr-2\" />\n                            Contact\n                          </Button>\n                          <Button variant=\"outline\" size=\"sm\">\n                            <Trash2 className=\"h-4 w-4 text-red-500\" />\n                          </Button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </Card>\n              ))}\n            </TabsContent>\n          </Tabs>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":9229},"client/src/pages/RFQCreate.tsx":{"content":"import { useState } from \"react\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Upload, FileText } from \"lucide-react\";\n\nexport default function RFQCreate() {\n  const [files, setFiles] = useState<File[]>([]);\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-8\">\n          <div className=\"mb-6 sm:mb-8\">\n            <h1 className=\"text-2xl sm:text-3xl font-bold mb-2\">Post a Request for Quotation</h1>\n            <p className=\"text-sm sm:text-base text-muted-foreground\">Get quotes from verified suppliers for your bulk order requirements</p>\n          </div>\n\n          <Card>\n            <CardHeader className=\"px-4 sm:px-6\">\n              <CardTitle className=\"text-lg sm:text-xl\">RFQ Details</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4 sm:space-y-6 px-4 sm:px-6\">\n              <div>\n                <Label htmlFor=\"title\" className=\"text-sm sm:text-base\">RFQ Title *</Label>\n                <Input\n                  id=\"title\"\n                  placeholder=\"e.g., Looking for High-Quality Wireless Earbuds\"\n                  className=\"mt-2 text-sm sm:text-base\"\n                  data-testid=\"input-rfq-title\"\n                />\n              </div>\n\n              <div>\n                <Label htmlFor=\"category\" className=\"text-sm sm:text-base\">Product Category *</Label>\n                <Select>\n                  <SelectTrigger className=\"mt-2 text-sm sm:text-base\" data-testid=\"select-category\">\n                    <SelectValue placeholder=\"Select a category\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"electronics\">Electronics</SelectItem>\n                    <SelectItem value=\"fashion\">Fashion & Apparel</SelectItem>\n                    <SelectItem value=\"machinery\">Machinery</SelectItem>\n                    <SelectItem value=\"automotive\">Automotive</SelectItem>\n                    <SelectItem value=\"construction\">Construction</SelectItem>\n                    <SelectItem value=\"packaging\">Packaging</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div>\n                <Label htmlFor=\"description\" className=\"text-sm sm:text-base\">Detailed Requirements *</Label>\n                <Textarea\n                  id=\"description\"\n                  placeholder=\"Describe your product requirements in detail: specifications, quality standards, packaging needs, etc.\"\n                  rows={5}\n                  className=\"mt-2 text-sm sm:text-base\"\n                  data-testid=\"textarea-requirements\"\n                />\n                <p className=\"text-xs sm:text-sm text-muted-foreground mt-1\">\n                  Be as specific as possible to get accurate quotations\n                </p>\n              </div>\n\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 sm:gap-6\">\n                <div>\n                  <Label htmlFor=\"quantity\" className=\"text-sm sm:text-base\">Quantity Needed *</Label>\n                  <Input\n                    id=\"quantity\"\n                    type=\"number\"\n                    placeholder=\"e.g., 5000\"\n                    className=\"mt-2 text-sm sm:text-base\"\n                    data-testid=\"input-quantity\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"unit\" className=\"text-sm sm:text-base\">Unit</Label>\n                  <Select>\n                    <SelectTrigger className=\"mt-2 text-sm sm:text-base\" data-testid=\"select-unit\">\n                      <SelectValue placeholder=\"Select unit\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"pieces\">Pieces</SelectItem>\n                      <SelectItem value=\"units\">Units</SelectItem>\n                      <SelectItem value=\"sets\">Sets</SelectItem>\n                      <SelectItem value=\"boxes\">Boxes</SelectItem>\n                      <SelectItem value=\"kg\">Kilograms</SelectItem>\n                      <SelectItem value=\"meters\">Meters</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"target-price\" className=\"text-sm sm:text-base\">Target Price (Optional)</Label>\n                <Input\n                  id=\"target-price\"\n                  placeholder=\"e.g., $15-20 per unit\"\n                  className=\"mt-2 text-sm sm:text-base\"\n                  data-testid=\"input-target-price\"\n                />\n                <p className=\"text-xs sm:text-sm text-muted-foreground mt-1\">\n                  Providing a budget helps suppliers give accurate quotes\n                </p>\n              </div>\n\n              <div>\n                <Label className=\"text-sm sm:text-base\">Upload Images/Documents (Optional)</Label>\n                <div className=\"mt-2 border-2 border-dashed rounded-lg p-6 sm:p-8 text-center hover:bg-muted/50 transition-colors cursor-pointer\">\n                  <Upload className=\"w-10 h-10 sm:w-12 sm:h-12 text-muted-foreground mx-auto mb-3 sm:mb-4\" />\n                  <p className=\"text-xs sm:text-sm text-muted-foreground mb-2\">\n                    Click to upload or drag and drop\n                  </p>\n                  <p className=\"text-[10px] sm:text-xs text-muted-foreground\">\n                    Supports: JPG, PNG, PDF (Max 10MB each)\n                  </p>\n                  <Input\n                    type=\"file\"\n                    multiple\n                    className=\"hidden\"\n                    onChange={(e) => {\n                      if (e.target.files) {\n                        setFiles(Array.from(e.target.files));\n                      }\n                    }}\n                    data-testid=\"input-file-upload\"\n                  />\n                </div>\n                {files.length > 0 && (\n                  <div className=\"mt-3 space-y-2\">\n                    {files.map((file, index) => (\n                      <div key={index} className=\"flex items-center gap-2 text-xs sm:text-sm\">\n                        <FileText className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                        <span className=\"truncate\">{file.name}</span>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 sm:gap-6\">\n                <div>\n                  <Label htmlFor=\"delivery-location\" className=\"text-sm sm:text-base\">Delivery Location *</Label>\n                  <Input\n                    id=\"delivery-location\"\n                    placeholder=\"City, Country\"\n                    className=\"mt-2 text-sm sm:text-base\"\n                    data-testid=\"input-location\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"delivery-date\" className=\"text-sm sm:text-base\">Expected Delivery Date</Label>\n                  <Input\n                    id=\"delivery-date\"\n                    type=\"date\"\n                    className=\"mt-2 text-sm sm:text-base\"\n                    data-testid=\"input-delivery-date\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"additional\" className=\"text-sm sm:text-base\">Additional Requirements</Label>\n                <Textarea\n                  id=\"additional\"\n                  placeholder=\"Certifications needed, special packaging, delivery terms, etc.\"\n                  rows={3}\n                  className=\"mt-2 text-sm sm:text-base\"\n                  data-testid=\"textarea-additional\"\n                />\n              </div>\n\n              <div className=\"border-t pt-4 sm:pt-6\">\n                <h3 className=\"font-semibold mb-3 sm:mb-4 text-base sm:text-lg\">Your Contact Information</h3>\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                  <div>\n                    <Label htmlFor=\"contact-name\" className=\"text-sm sm:text-base\">Full Name *</Label>\n                    <Input\n                      id=\"contact-name\"\n                      placeholder=\"John Doe\"\n                      className=\"mt-2 text-sm sm:text-base\"\n                      data-testid=\"input-contact-name\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"contact-email\" className=\"text-sm sm:text-base\">Email *</Label>\n                    <Input\n                      id=\"contact-email\"\n                      type=\"email\"\n                      placeholder=\"john@company.com\"\n                      className=\"mt-2 text-sm sm:text-base\"\n                      data-testid=\"input-contact-email\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"contact-phone\" className=\"text-sm sm:text-base\">Phone Number</Label>\n                    <Input\n                      id=\"contact-phone\"\n                      placeholder=\"+1 234 567 8900\"\n                      className=\"mt-2 text-sm sm:text-base\"\n                      data-testid=\"input-contact-phone\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"company\" className=\"text-sm sm:text-base\">Company Name</Label>\n                    <Input\n                      id=\"company\"\n                      placeholder=\"Your Company Ltd.\"\n                      className=\"mt-2 text-sm sm:text-base\"\n                      data-testid=\"input-company\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 pt-4 sm:pt-6 border-t\">\n                <Button size=\"lg\" className=\"flex-1 text-sm sm:text-base\" data-testid=\"button-post-rfq\">\n                  Post RFQ\n                </Button>\n                <Button size=\"lg\" variant=\"outline\" className=\"flex-1 text-sm sm:text-base\" data-testid=\"button-save-draft\">\n                  Save as Draft\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":10781},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \".5625rem\", /* 9px */\n        md: \".375rem\", /* 6px */\n        sm: \".1875rem\", /* 3px */\n      },\n      colors: {\n        background: \"hsl(var(--background) / <alpha-value>)\",\n        foreground: \"hsl(var(--foreground) / <alpha-value>)\",\n        border: \"hsl(var(--border) / <alpha-value>)\",\n        input: \"hsl(var(--input) / <alpha-value>)\",\n        success: {\n          DEFAULT: \"142 76% 36%\",\n          foreground: \"0 0% 100%\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card) / <alpha-value>)\",\n          foreground: \"hsl(var(--card-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--card-border) / <alpha-value>)\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover) / <alpha-value>)\",\n          foreground: \"hsl(var(--popover-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--popover-border) / <alpha-value>)\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--primary-foreground) / <alpha-value>)\",\n          border: \"var(--primary-border)\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary) / <alpha-value>)\",\n          foreground: \"hsl(var(--secondary-foreground) / <alpha-value>)\",\n          border: \"var(--secondary-border)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted) / <alpha-value>)\",\n          foreground: \"hsl(var(--muted-foreground) / <alpha-value>)\",\n          border: \"var(--muted-border)\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--accent-foreground) / <alpha-value>)\",\n          border: \"var(--accent-border)\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive) / <alpha-value>)\",\n          foreground: \"hsl(var(--destructive-foreground) / <alpha-value>)\",\n          border: \"var(--destructive-border)\",\n        },\n        ring: \"hsl(var(--ring) / <alpha-value>)\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1) / <alpha-value>)\",\n          \"2\": \"hsl(var(--chart-2) / <alpha-value>)\",\n          \"3\": \"hsl(var(--chart-3) / <alpha-value>)\",\n          \"4\": \"hsl(var(--chart-4) / <alpha-value>)\",\n          \"5\": \"hsl(var(--chart-5) / <alpha-value>)\",\n        },\n        sidebar: {\n          ring: \"hsl(var(--sidebar-ring) / <alpha-value>)\",\n          DEFAULT: \"hsl(var(--sidebar) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--sidebar-border) / <alpha-value>)\",\n        },\n        \"sidebar-primary\": {\n          DEFAULT: \"hsl(var(--sidebar-primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-primary-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-primary-border)\",\n        },\n        \"sidebar-accent\": {\n          DEFAULT: \"hsl(var(--sidebar-accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-accent-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-accent-border)\"\n        },\n        status: {\n          online: \"rgb(34 197 94)\",\n          away: \"rgb(245 158 11)\",\n          busy: \"rgb(239 68 68)\",\n          offline: \"rgb(156 163 175)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4101},"client/src/pages/BuyerProtection.tsx":{"content":"import Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  Shield, \n  CheckCircle, \n  Lock, \n  FileText, \n  CreditCard,\n  Package,\n  Award,\n  AlertCircle\n} from \"lucide-react\";\n\nexport default function BuyerProtection() {\n  const protectionFeatures = [\n    {\n      icon: Shield,\n      title: \"Trade Assurance\",\n      description: \"Your payment is protected until you confirm receipt of your order\",\n      benefits: [\n        \"100% product quality protection\",\n        \"100% on-time shipment protection\",\n        \"Refund policy for quality issues\",\n      ]\n    },\n    {\n      icon: Lock,\n      title: \"Secure Payments\",\n      description: \"Multiple secure payment options with encryption\",\n      benefits: [\n        \"SSL encrypted transactions\",\n        \"Verified payment gateways\",\n        \"Fraud protection systems\",\n      ]\n    },\n    {\n      icon: FileText,\n      title: \"Verified Suppliers\",\n      description: \"All suppliers go through strict verification\",\n      benefits: [\n        \"Business license verification\",\n        \"Factory inspection reports\",\n        \"Quality certifications checked\",\n      ]\n    },\n    {\n      icon: CreditCard,\n      title: \"Escrow Service\",\n      description: \"Funds held securely until delivery confirmation\",\n      benefits: [\n        \"Payment released after inspection\",\n        \"Dispute resolution support\",\n        \"Money-back guarantee\",\n      ]\n    },\n  ];\n\n  const howItWorks = [\n    {\n      step: 1,\n      title: \"Place Your Order\",\n      description: \"Select products and submit your order with Trade Assurance protection\"\n    },\n    {\n      step: 2,\n      title: \"Payment Protection\",\n      description: \"Your payment is held securely in escrow until shipment is confirmed\"\n    },\n    {\n      step: 3,\n      title: \"Quality Inspection\",\n      description: \"Inspect your products according to the agreed specifications\"\n    },\n    {\n      step: 4,\n      title: \"Confirm Receipt\",\n      description: \"Release payment to supplier once you're satisfied with the order\"\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <div className=\"bg-gradient-to-r from-success/10 to-success/5 py-16\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n            <Shield className=\"w-16 h-16 text-success mx-auto mb-6\" />\n            <h1 className=\"text-4xl font-bold mb-4\">Buyer Protection Program</h1>\n            <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\">\n              Trade with confidence. Our comprehensive buyer protection ensures your orders are safe, secure, and delivered as promised.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-16\">\n            {protectionFeatures.map((feature, index) => {\n              const Icon = feature.icon;\n              return (\n                <Card key={index} className=\"hover:shadow-lg transition-shadow\" data-testid={`feature-${index}`}>\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-start gap-4\">\n                      <div className=\"w-12 h-12 rounded-full bg-success/10 flex items-center justify-center shrink-0\">\n                        <Icon className=\"w-6 h-6 text-success\" />\n                      </div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-xl font-semibold mb-2\">{feature.title}</h3>\n                        <p className=\"text-muted-foreground mb-4\">{feature.description}</p>\n                        <ul className=\"space-y-2\">\n                          {feature.benefits.map((benefit, idx) => (\n                            <li key={idx} className=\"flex items-start gap-2 text-sm\">\n                              <CheckCircle className=\"w-4 h-4 text-success mt-0.5 shrink-0\" />\n                              <span>{benefit}</span>\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n\n          <div className=\"mb-16\">\n            <h2 className=\"text-3xl font-bold text-center mb-12\">How Trade Assurance Works</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n              {howItWorks.map((item) => (\n                <div key={item.step} className=\"text-center\" data-testid={`step-${item.step}`}>\n                  <div className=\"w-16 h-16 rounded-full bg-primary/10 flex items-center justify-center text-2xl font-bold text-primary mx-auto mb-4\">\n                    {item.step}\n                  </div>\n                  <h3 className=\"font-semibold text-lg mb-2\">{item.title}</h3>\n                  <p className=\"text-muted-foreground text-sm\">{item.description}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-16\">\n            <Card className=\"bg-primary/5\">\n              <CardContent className=\"p-6 text-center\">\n                <Package className=\"w-12 h-12 text-primary mx-auto mb-4\" />\n                <h3 className=\"font-semibold text-lg mb-2\">Quality Guarantee</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Products must match description and quality standards\n                </p>\n              </CardContent>\n            </Card>\n            <Card className=\"bg-primary/5\">\n              <CardContent className=\"p-6 text-center\">\n                <Award className=\"w-12 h-12 text-primary mx-auto mb-4\" />\n                <h3 className=\"font-semibold text-lg mb-2\">On-Time Delivery</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Shipment protection ensures delivery within agreed timeframe\n                </p>\n              </CardContent>\n            </Card>\n            <Card className=\"bg-primary/5\">\n              <CardContent className=\"p-6 text-center\">\n                <AlertCircle className=\"w-12 h-12 text-primary mx-auto mb-4\" />\n                <h3 className=\"font-semibold text-lg mb-2\">Dispute Resolution</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Professional mediation team to resolve any issues\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          <Card className=\"bg-muted\">\n            <CardContent className=\"p-8\">\n              <h2 className=\"text-2xl font-bold mb-4\">Refund Policy</h2>\n              <div className=\"space-y-4 mb-6\">\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Full Refund Available When:</h3>\n                  <ul className=\"space-y-2 text-muted-foreground\">\n                    <li className=\"flex items-start gap-2\">\n                      <CheckCircle className=\"w-5 h-5 text-success mt-0.5 shrink-0\" />\n                      <span>Product quality does not match the agreed specifications</span>\n                    </li>\n                    <li className=\"flex items-start gap-2\">\n                      <CheckCircle className=\"w-5 h-5 text-success mt-0.5 shrink-0\" />\n                      <span>Shipment is significantly delayed beyond the agreed delivery date</span>\n                    </li>\n                    <li className=\"flex items-start gap-2\">\n                      <CheckCircle className=\"w-5 h-5 text-success mt-0.5 shrink-0\" />\n                      <span>Products are not as described in the order agreement</span>\n                    </li>\n                    <li className=\"flex items-start gap-2\">\n                      <CheckCircle className=\"w-5 h-5 text-success mt-0.5 shrink-0\" />\n                      <span>Supplier fails to ship the order</span>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <Button size=\"lg\" data-testid=\"button-learn-more\">Learn More About Refunds</Button>\n            </CardContent>\n          </Card>\n\n          <div className=\"mt-16 text-center\">\n            <h2 className=\"text-3xl font-bold mb-4\">Ready to Start Trading Safely?</h2>\n            <p className=\"text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              Join thousands of businesses who trust our buyer protection program for secure international trade\n            </p>\n            <div className=\"flex gap-4 justify-center\">\n              <Button size=\"lg\" data-testid=\"button-start-sourcing\">Start Sourcing</Button>\n              <Button size=\"lg\" variant=\"outline\" data-testid=\"button-contact-support\">Contact Support</Button>\n            </div>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":8985},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"design_guidelines.md":{"content":"# B2B Marketplace Design Guidelines\n\n## Design Approach: Reference-Based (Alibaba.com Inspired)\n\n**Rationale**: B2B marketplace requiring professional trust signals, information density, and efficient transaction flows. Alibaba.com serves as primary design reference for proven B2B UX patterns.\n\n**Core Principles**:\n- Professional trustworthiness over creative flair\n- Information clarity and hierarchy\n- Action-oriented layouts with clear CTAs\n- Verification and credibility indicators throughout\n- Efficient multi-step workflows\n\n---\n\n## Color Palette\n\n### Light Mode (Primary)\n- **Primary Brand**: 251 89% 48% (vibrant orange-red, trust and energy)\n- **Primary Hover**: 251 89% 42%\n- **Secondary**: 220 13% 20% (dark slate for text)\n- **Accent**: 142 76% 36% (green for verification badges, success states)\n- **Background**: 0 0% 100% (pure white)\n- **Surface**: 220 13% 97% (light gray for cards)\n- **Border**: 220 13% 85%\n- **Muted Text**: 220 9% 46%\n\n### Dark Mode\n- **Primary**: 251 89% 58%\n- **Background**: 222 47% 11%\n- **Surface**: 217 33% 17%\n- **Border**: 217 33% 25%\n- **Text**: 210 20% 98%\n\n---\n\n## Typography\n\n**Font Families**:\n- Primary: 'Inter', system-ui, sans-serif (clean, professional)\n- Data/Numbers: 'DM Sans', sans-serif (clarity for pricing)\n\n**Scale**:\n- Hero Headline: text-5xl md:text-6xl font-bold (48px-60px)\n- Section Headline: text-3xl md:text-4xl font-bold (30px-36px)\n- Page Title: text-2xl md:text-3xl font-semibold (24px-30px)\n- Card Title: text-lg font-semibold (18px)\n- Body: text-base (16px)\n- Small/Meta: text-sm (14px)\n- Micro: text-xs (12px)\n\n**Weights**: 400 (regular), 500 (medium), 600 (semibold), 700 (bold)\n\n---\n\n## Layout System\n\n**Container Strategy**:\n- Max-width: max-w-7xl (1280px) for main content\n- Product grids: max-w-screen-2xl (1536px)\n- Padding: px-4 md:px-6 lg:px-8\n\n**Spacing Units** (Tailwind):\n- Micro spacing: 2, 3, 4 (8px, 12px, 16px)\n- Component spacing: 6, 8 (24px, 32px)\n- Section spacing: 12, 16, 20 (48px, 64px, 80px)\n- Large gaps: 24, 32 (96px, 128px)\n\n**Grid Systems**:\n- Category cards: grid-cols-2 md:grid-cols-4 lg:grid-cols-6\n- Product cards: grid-cols-1 md:grid-cols-2 lg:grid-cols-4\n- Feature sections: grid-cols-1 md:grid-cols-2 lg:grid-cols-3\n- Gap: gap-4 md:gap-6\n\n---\n\n## Component Library\n\n### Navigation Header\n- Dual-level: Top utility bar (language, currency, sign in) + Main nav\n- Sticky on scroll with subtle shadow\n- Search bar: Prominent with three-field design (keyword, category, button)\n- Height: h-16 utility bar + h-20 main nav\n- Background: white with border-b\n\n### Product Cards (B2B Specific)\n- Image: aspect-square, hover zoom effect\n- Badge overlay: \"Verified Supplier\", \"Trade Assurance\" (top-right)\n- Price display: Prominent with \"/piece\" unit, MOQ below\n- Supplier meta: Flag icon + name + response rate\n- Dual CTAs: \"Contact Supplier\" (outline) + \"Request Quote\" (primary)\n- Border: border with hover:shadow-lg transition\n\n### Buttons\n- Primary: bg-primary text-white, rounded-md, px-6 py-3\n- Secondary/Outline: border-2 border-primary text-primary\n- Ghost: text-primary hover:bg-primary/10\n- Icon buttons: p-2 rounded-full for utility actions\n- Sizes: sm (py-2 px-4), default (py-3 px-6), lg (py-4 px-8)\n\n### Input Fields\n- Height: h-12 for text inputs\n- Border: border-2 focus:border-primary\n- Rounded: rounded-md\n- Labels: text-sm font-medium mb-2\n- Helper text: text-xs text-muted-foreground\n\n### Badges & Tags\n- Verification: bg-accent/10 text-accent border border-accent/20\n- Status: Colored backgrounds with matching text\n- Size: px-3 py-1 text-xs font-medium rounded-full\n- Icons: Include checkmark/shield icons for trust signals\n\n### Data Tables\n- Striped rows: even:bg-gray-50\n- Borders: border-b on rows\n- Headers: bg-gray-100 font-semibold sticky top-0\n- Mobile: Stack to cards on small screens\n\n### Supplier Profile Headers\n- Cover banner: aspect-[4/1], gradient overlay\n- Logo: -mt-16 relative, border-4 border-white, rounded-lg\n- Stats bar: grid-cols-5, border-y, py-4\n- Action buttons: Absolute top-right on banner\n\n### RFQ Cards\n- Compact design with clear hierarchy\n- Time remaining: Prominent countdown badge\n- Quotation count: Social proof indicator\n- Price target: If specified, highlighted\n- CTA: Full-width \"Send Quotation\" button\n\n---\n\n## Images\n\n### Hero Section\n- **Full-width banner image**: Professional B2B imagery (warehouse, shipping containers, business handshake, global trade visualization)\n- Overlay: Dark gradient (from black/60% to black/20%) for text readability\n- Height: min-h-[500px] md:min-h-[600px]\n\n### Product Images\n- **Aspect ratio**: Square (1:1) for consistency in grids\n- Hover state: Subtle zoom (scale-105)\n- Placeholder: Use https://placehold.co/400x400 with product category text\n\n### Supplier/Factory Images\n- **Factory tour galleries**: Grid layout with lightbox functionality\n- **Certification images**: Display as thumbnails, clickable for full-size view\n- **Banner images**: aspect-[4/1] for company profile headers\n\n### Category Icons\n- Use Lucide React icon library\n- Size: w-12 h-12 for featured categories\n- Color: text-primary with bg-primary/10 background circle\n\n### Trust & Verification\n- Badge icons throughout (shield, checkmark, star)\n- Consistent sizing: w-5 h-5 inline with text\n\n---\n\n## Page-Specific Guidelines\n\n### Homepage\n- Hero with three-field search, full-bleed background image\n- Stats counter section: 4-column grid, large numbers\n- Categories: 6-8 featured with icons, card-based layout\n- Supplier spotlight: Carousel with 3-4 visible cards\n- RFQ ticker: Horizontal auto-scroll of recent requests\n\n### Product Listing\n- Left sidebar filters: sticky, w-64, collapsible mobile\n- Product grid: 4 columns desktop, 2 tablet, 1 mobile\n- Sort bar: Flex justify-between with view toggles (grid/list)\n\n### Product Detail\n- Two-column: 60% gallery + 40% purchase panel (sticky)\n- Tabs navigation: Sticky below images\n- Related products: Horizontal scroll on mobile\n\n### Dashboards\n- Sidebar navigation: w-64, icons + labels\n- Main content: Metrics cards + data tables\n- Card metrics: Icon + number + label + trend indicator\n\n---\n\n## Animation & Interaction\n\n**Minimal, purposeful animations**:\n- Hover states: scale-105 for images, shadow-lg for cards\n- Transitions: transition-all duration-200\n- Loading states: Subtle pulse animations\n- No page transitions or complex scroll animations\n- Focus: Clear focus rings (ring-2 ring-primary)\n\n---\n\n## Accessibility & Responsive\n\n- Mobile-first approach: All layouts stack gracefully\n- Touch targets: Minimum 44px height for buttons\n- Color contrast: WCAG AA compliant (4.5:1 text, 3:1 UI)\n- Focus indicators: Always visible, never disabled\n- Breakpoints: sm:640px, md:768px, lg:1024px, xl:1280px, 2xl:1536px","size_bytes":6733},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"client/src/pages/MyOrders.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Card } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Package, Search, Eye, MessageSquare, Download, Truck } from \"lucide-react\";\n\nexport default function MyOrders() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const orders = [\n    {\n      id: \"ORD-2024-001\",\n      productName: \"Industrial Metal Parts\",\n      supplier: \"Shanghai Manufacturing Co.\",\n      quantity: 5000,\n      totalPrice: \"$12,500\",\n      status: \"In Production\",\n      orderDate: \"2024-01-15\",\n      expectedDelivery: \"2024-02-20\",\n      image: \"/placeholder.svg\"\n    },\n    {\n      id: \"ORD-2024-002\",\n      productName: \"Electronic Components\",\n      supplier: \"Shenzhen Electronics Ltd.\",\n      quantity: 10000,\n      totalPrice: \"$8,900\",\n      status: \"Shipped\",\n      orderDate: \"2024-01-10\",\n      expectedDelivery: \"2024-02-05\",\n      image: \"/placeholder.svg\"\n    },\n  ];\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"Completed\": return \"bg-green-500\";\n      case \"Shipped\": return \"bg-gray-500\";\n      case \"In Production\": return \"bg-yellow-500\";\n      case \"Pending\": return \"bg-gray-500\";\n      default: return \"bg-gray-500\";\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1 bg-gray-50 dark:bg-gray-900\">\n        <div className=\"gradient-blue text-white py-12\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <h1 className=\"text-4xl font-bold mb-2\">My Orders</h1>\n            <p className=\"text-gray-200\">Track and manage your purchase orders</p>\n          </div>\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"mb-6\">\n            <div className=\"relative max-w-md\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n              <Input\n                type=\"search\"\n                placeholder=\"Search orders...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"pl-10\"\n                data-testid=\"input-search-orders\"\n              />\n            </div>\n          </div>\n\n          <Tabs defaultValue=\"all\" className=\"space-y-6\">\n            <TabsList className=\"bg-white dark:bg-gray-800\">\n              <TabsTrigger value=\"all\" data-testid=\"tab-all-orders\">All Orders</TabsTrigger>\n              <TabsTrigger value=\"pending\" data-testid=\"tab-pending\">Pending</TabsTrigger>\n              <TabsTrigger value=\"in-production\" data-testid=\"tab-in-production\">In Production</TabsTrigger>\n              <TabsTrigger value=\"shipped\" data-testid=\"tab-shipped\">Shipped</TabsTrigger>\n              <TabsTrigger value=\"completed\" data-testid=\"tab-completed\">Completed</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"all\" className=\"space-y-4\">\n              {orders.map((order) => (\n                <Card key={order.id} className=\"p-6 hover:shadow-lg transition-shadow glass-card\">\n                  <div className=\"flex flex-col lg:flex-row gap-6\">\n                    <img\n                      src={order.image}\n                      alt={order.productName}\n                      className=\"w-32 h-32 object-cover rounded-lg\"\n                    />\n                    \n                    <div className=\"flex-1\">\n                      <div className=\"flex flex-col lg:flex-row lg:items-center justify-between mb-4\">\n                        <div>\n                          <h3 className=\"text-xl font-semibold mb-1\">{order.productName}</h3>\n                          <p className=\"text-gray-600 dark:text-gray-400\">Order ID: {order.id}</p>\n                        </div>\n                        <Badge className={`${getStatusColor(order.status)} text-white w-fit`}>\n                          {order.status}\n                        </Badge>\n                      </div>\n\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-4\">\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Supplier</p>\n                          <p className=\"font-medium\">{order.supplier}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Quantity</p>\n                          <p className=\"font-medium\">{order.quantity.toLocaleString()} pcs</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Price</p>\n                          <p className=\"font-medium text-lg\">{order.totalPrice}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Expected Delivery</p>\n                          <p className=\"font-medium\">{order.expectedDelivery}</p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex flex-wrap gap-2\">\n                        <Button variant=\"outline\" size=\"sm\" data-testid=\"button-view-details\">\n                          <Eye className=\"h-4 w-4 mr-2\" />\n                          View Details\n                        </Button>\n                        <Button variant=\"outline\" size=\"sm\" data-testid=\"button-track-shipment\">\n                          <Truck className=\"h-4 w-4 mr-2\" />\n                          Track Shipment\n                        </Button>\n                        <Button variant=\"outline\" size=\"sm\" data-testid=\"button-contact-supplier\">\n                          <MessageSquare className=\"h-4 w-4 mr-2\" />\n                          Contact Supplier\n                        </Button>\n                        <Button variant=\"outline\" size=\"sm\" data-testid=\"button-download-invoice\">\n                          <Download className=\"h-4 w-4 mr-2\" />\n                          Download Invoice\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </Card>\n              ))}\n            </TabsContent>\n          </Tabs>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":6638},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/examples/StatsSection.tsx":{"content":"import StatsSection from '../StatsSection';\n\nexport default function StatsSectionExample() {\n  return <StatsSection />;\n}\n","size_bytes":122},"client/src/pages/MyRFQs.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Card } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { FileText, Search, Eye, MessageSquare, CheckCircle, XCircle, Clock } from \"lucide-react\";\n\nexport default function MyRFQs() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const rfqs = [\n    {\n      id: \"RFQ-2024-001\",\n      title: \"Custom Metal Brackets - 10,000 units\",\n      category: \"Hardware & Machinery\",\n      quantity: 10000,\n      targetPrice: \"$2.50/piece\",\n      quotationsReceived: 12,\n      status: \"Active\",\n      createdDate: \"2024-01-20\",\n      expiryDate: \"2024-02-20\",\n      description: \"Need custom metal brackets for industrial equipment\"\n    },\n    {\n      id: \"RFQ-2024-002\",\n      title: \"LED Display Modules\",\n      category: \"Electronics\",\n      quantity: 5000,\n      targetPrice: \"$15.00/piece\",\n      quotationsReceived: 8,\n      status: \"Under Review\",\n      createdDate: \"2024-01-18\",\n      expiryDate: \"2024-02-18\",\n      description: \"High-quality LED display modules for outdoor signage\"\n    },\n  ];\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case \"Active\": return <Clock className=\"h-4 w-4\" />;\n      case \"Under Review\": return <Eye className=\"h-4 w-4\" />;\n      case \"Closed\": return <CheckCircle className=\"h-4 w-4\" />;\n      case \"Expired\": return <XCircle className=\"h-4 w-4\" />;\n      default: return <FileText className=\"h-4 w-4\" />;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"Active\": return \"bg-green-500\";\n      case \"Under Review\": return \"bg-gray-500\";\n      case \"Closed\": return \"bg-gray-500\";\n      case \"Expired\": return \"bg-red-500\";\n      default: return \"bg-gray-500\";\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1 bg-gray-50 dark:bg-gray-900\">\n        <div className=\"gradient-blue text-white py-12\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center gap-4\">\n              <div>\n                <h1 className=\"text-4xl font-bold mb-2\">My RFQs</h1>\n                <p className=\"text-gray-200\">Manage your requests for quotations</p>\n              </div>\n              <Link href=\"/rfq/create\">\n                <Button size=\"lg\" className=\"bg-white text-gray-800 hover:bg-gray-100 no-default-hover-elevate\" data-testid=\"button-post-new-rfq\">\n                  <FileText className=\"h-5 w-5 mr-2\" />\n                  Post New RFQ\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"mb-6\">\n            <div className=\"relative max-w-md\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n              <Input\n                type=\"search\"\n                placeholder=\"Search RFQs...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"pl-10\"\n                data-testid=\"input-search-rfqs\"\n              />\n            </div>\n          </div>\n\n          <Tabs defaultValue=\"all\" className=\"space-y-6\">\n            <TabsList className=\"bg-white dark:bg-gray-800\">\n              <TabsTrigger value=\"all\" data-testid=\"tab-all-rfqs\">All RFQs</TabsTrigger>\n              <TabsTrigger value=\"active\" data-testid=\"tab-active\">Active</TabsTrigger>\n              <TabsTrigger value=\"review\" data-testid=\"tab-review\">Under Review</TabsTrigger>\n              <TabsTrigger value=\"closed\" data-testid=\"tab-closed\">Closed</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"all\" className=\"space-y-4\">\n              {rfqs.map((rfq) => (\n                <Card key={rfq.id} className=\"p-6 hover:shadow-lg transition-shadow glass-card\">\n                  <div className=\"flex flex-col lg:flex-row gap-6\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex flex-col lg:flex-row lg:items-center justify-between mb-4\">\n                        <div>\n                          <h3 className=\"text-xl font-semibold mb-1\">{rfq.title}</h3>\n                          <p className=\"text-gray-600 dark:text-gray-400\">RFQ ID: {rfq.id}</p>\n                        </div>\n                        <Badge className={`${getStatusColor(rfq.status)} text-white w-fit flex items-center gap-1`}>\n                          {getStatusIcon(rfq.status)}\n                          {rfq.status}\n                        </Badge>\n                      </div>\n\n                      <p className=\"text-gray-700 dark:text-gray-300 mb-4\">{rfq.description}</p>\n\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-4\">\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Category</p>\n                          <p className=\"font-medium\">{rfq.category}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Quantity</p>\n                          <p className=\"font-medium\">{rfq.quantity.toLocaleString()} units</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Target Price</p>\n                          <p className=\"font-medium\">{rfq.targetPrice}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Quotations</p>\n                          <p className=\"font-medium text-lg text-gray-600\">{rfq.quotationsReceived}</p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                          Expires: {rfq.expiryDate}\n                        </div>\n                        <div className=\"flex flex-wrap gap-2\">\n                          <Link href={`/rfq/${rfq.id}`}>\n                            <Button variant=\"outline\" size=\"sm\" data-testid=\"button-view-quotations\">\n                              <Eye className=\"h-4 w-4 mr-2\" />\n                              View Quotations ({rfq.quotationsReceived})\n                            </Button>\n                          </Link>\n                          <Button variant=\"outline\" size=\"sm\" data-testid=\"button-messages\">\n                            <MessageSquare className=\"h-4 w-4 mr-2\" />\n                            Messages\n                          </Button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </Card>\n              ))}\n            </TabsContent>\n          </Tabs>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":7382},"client/src/pages/Categories.tsx":{"content":"import { useEffect } from \"react\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport PageHeader from \"@/components/PageHeader\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport { useLoading } from \"@/contexts/LoadingContext\";\nimport { \n  Laptop, \n  Shirt, \n  Wrench, \n  Car, \n  Home as HomeIcon, \n  Lightbulb,\n  Package,\n  Hammer,\n  Pill,\n  Utensils,\n  Baby,\n  Dumbbell,\n  Briefcase,\n  Palette,\n  Zap,\n  Factory,\n  ArrowRight\n} from \"lucide-react\";\n\nexport default function Categories() {\n  const { setLoading } = useLoading();\n\n  useEffect(() => {\n    setLoading(true, \"Loading Categories...\");\n    \n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 800);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  const categories = [\n    {\n      id: \"electronics\",\n      name: \"Electronics & Electrical\",\n      icon: Laptop,\n      subcategories: [\"Consumer Electronics\", \"Electronic Components\", \"Electrical Equipment\", \"LED & Lighting\"],\n      productCount: \"2.5M+\",\n      color: \"from-gray-500 to-gray-600\"\n    },\n    {\n      id: \"apparel\",\n      name: \"Apparel & Fashion\",\n      icon: Shirt,\n      subcategories: [\"Men's Clothing\", \"Women's Clothing\", \"Kids & Baby Clothing\", \"Accessories\"],\n      productCount: \"1.8M+\",\n      color: \"from-pink-500 to-rose-500\"\n    },\n    {\n      id: \"machinery\",\n      name: \"Machinery\",\n      icon: Wrench,\n      subcategories: [\"Industrial Machinery\", \"Construction Machinery\", \"Agricultural Machinery\", \"Food Processing\"],\n      productCount: \"950K+\",\n      color: \"from-yellow-500 to-yellow-600\"\n    },\n    {\n      id: \"automotive\",\n      name: \"Automotive & Transportation\",\n      icon: Car,\n      subcategories: [\"Auto Parts\", \"Motorcycles\", \"Bicycles\", \"Vehicle Accessories\"],\n      productCount: \"780K+\",\n      color: \"from-red-500 to-red-600\"\n    },\n    {\n      id: \"home\",\n      name: \"Home & Garden\",\n      icon: HomeIcon,\n      subcategories: [\"Home Decor\", \"Furniture\", \"Kitchenware\", \"Garden Supplies\"],\n      productCount: \"1.2M+\",\n      color: \"from-green-500 to-emerald-500\"\n    },\n    {\n      id: \"lighting\",\n      name: \"Lights & Lighting\",\n      icon: Lightbulb,\n      subcategories: [\"LED Lights\", \"Outdoor Lighting\", \"Commercial Lighting\", \"Smart Lighting\"],\n      productCount: \"450K+\",\n      color: \"from-yellow-500 to-yellow-600\"\n    },\n    {\n      id: \"packaging\",\n      name: \"Packaging & Printing\",\n      icon: Package,\n      subcategories: [\"Packaging Materials\", \"Paper Products\", \"Printing Services\", \"Labels & Tags\"],\n      productCount: \"620K+\",\n      color: \"from-purple-500 to-fuchsia-500\"\n    },\n    {\n      id: \"construction\",\n      name: \"Construction & Real Estate\",\n      icon: Hammer,\n      subcategories: [\"Building Materials\", \"Hardware\", \"Real Estate\", \"Flooring & Tiles\"],\n      productCount: \"890K+\",\n      color: \"from-red-500 to-red-600\"\n    },\n    {\n      id: \"health\",\n      name: \"Health & Medical\",\n      icon: Pill,\n      subcategories: [\"Medical Equipment\", \"Healthcare Supplies\", \"Pharmaceuticals\", \"Personal Care\"],\n      productCount: \"340K+\",\n      color: \"from-teal-500 to-teal-600\"\n    },\n    {\n      id: \"food\",\n      name: \"Food & Beverage\",\n      icon: Utensils,\n      subcategories: [\"Food Products\", \"Beverages\", \"Food Ingredients\", \"Snacks\"],\n      productCount: \"560K+\",\n      color: \"from-rose-500 to-pink-500\"\n    },\n    {\n      id: \"baby\",\n      name: \"Toys & Baby Products\",\n      icon: Baby,\n      subcategories: [\"Baby Care\", \"Toys & Games\", \"Baby Clothing\", \"Nursery Furniture\"],\n      productCount: \"480K+\",\n      color: \"from-gray-500 to-gray-600\"\n    },\n    {\n      id: \"sports\",\n      name: \"Sports & Entertainment\",\n      icon: Dumbbell,\n      subcategories: [\"Sports Equipment\", \"Outdoor Recreation\", \"Fitness\", \"Entertainment\"],\n      productCount: \"410K+\",\n      color: \"from-indigo-500 to-purple-500\"\n    },\n    {\n      id: \"office\",\n      name: \"Office & School Supplies\",\n      icon: Briefcase,\n      subcategories: [\"Office Equipment\", \"Stationery\", \"School Supplies\", \"Writing Instruments\"],\n      productCount: \"320K+\",\n      color: \"from-slate-500 to-gray-500\"\n    },\n    {\n      id: \"beauty\",\n      name: \"Beauty & Personal Care\",\n      icon: Palette,\n      subcategories: [\"Cosmetics\", \"Skincare\", \"Hair Care\", \"Personal Hygiene\"],\n      productCount: \"680K+\",\n      color: \"from-fuchsia-500 to-pink-500\"\n    },\n    {\n      id: \"energy\",\n      name: \"Energy & Minerals\",\n      icon: Zap,\n      subcategories: [\"Solar Energy\", \"Batteries\", \"Generators\", \"Minerals & Metallurgy\"],\n      productCount: \"290K+\",\n      color: \"from-lime-500 to-green-500\"\n    },\n    {\n      id: \"industrial\",\n      name: \"Industrial Supplies\",\n      icon: Factory,\n      subcategories: [\"Tools\", \"Safety Equipment\", \"Industrial Parts\", \"Measurement Tools\"],\n      productCount: \"750K+\",\n      color: \"from-gray-500 to-slate-500\"\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-gray-50 dark:bg-gray-900\">\n      <Header />\n      <main className=\"flex-1\">\n        <PageHeader\n          title=\"All Categories\"\n          subtitle=\"Explore millions of products across all industries\"\n          variant=\"gradient\"\n        />\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n            {categories.map((category) => {\n              const Icon = category.icon;\n              return (\n                <Link key={category.id} href={`/category/${category.id}`} data-testid={`link-category-${category.id}`}>\n                  <Card className=\"h-full transition-all duration-300 hover-elevate active-elevate-2 cursor-pointer border-border overflow-hidden group\">\n                    <CardContent className=\"p-6\">\n                      <div className={`w-14 h-14 rounded-xl bg-gradient-to-br ${category.color} flex items-center justify-center mb-4 shadow-lg group-hover:scale-110 transition-transform duration-300`}>\n                        <Icon className=\"w-7 h-7 text-white\" />\n                      </div>\n                      <h3 className=\"font-semibold text-lg mb-2 text-foreground group-hover:text-primary transition-colors\" data-testid={`text-name-${category.id}`}>{category.name}</h3>\n                      <Badge variant=\"secondary\" className=\"mb-4 font-medium\" data-testid={`text-count-${category.id}`}>{category.productCount} Products</Badge>\n                      <ul className=\"space-y-1.5\">\n                        {category.subcategories.slice(0, 3).map((sub, idx) => (\n                          <li key={idx} className=\"text-sm text-muted-foreground flex items-center gap-1 group-hover:text-foreground transition-colors\" data-testid={`text-subcategory-${category.id}-${idx}`}>\n                            <ArrowRight className=\"w-3 h-3 flex-shrink-0\" />\n                            {sub}\n                          </li>\n                        ))}\n                      </ul>\n                    </CardContent>\n                  </Card>\n                </Link>\n              );\n            })}\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":7282},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"replit.md":{"content":"# Global Trade Hub - B2B Marketplace Platform\n\n## Overview\n\nGlobal Trade Hub is a comprehensive B2B (Business-to-Business) marketplace platform that connects suppliers and manufacturers with business buyers for bulk wholesale orders. Inspired by Alibaba.com's proven UX patterns, the platform focuses on professional trustworthiness, information density, and efficient transaction flows.\n\nThe application enables:\n- Product browsing and search with B2B-specific filters\n- Request for Quotation (RFQ) system for bulk orders\n- Supplier verification and profile management\n- Buyer-supplier communication and negotiation\n- Trade assurance and buyer protection features\n- Tiered pricing based on order quantities\n\n## Recent Changes\n\n### October 11, 2025 - Comprehensive Admin Panel Implementation\n- **Complete Admin Panel**: Built full-featured admin interface with Shadcn sidebar navigation at `/admin` route\n- **Product Management**: Full CRUD operations for products with search functionality and modal-based forms\n- **Bulk CSV Upload**: Implemented bulk product upload system supporting CSV/Excel files with:\n  - Multiple images per product (comma-separated URLs)\n  - Row-level validation with granular error reporting\n  - CSV format guide with downloadable template\n  - Support for all product fields including pricing, inventory, dimensions, and metadata\n- **Entity Management**: Created admin pages for Categories, Orders, Customers, and Suppliers with full CRUD\n- **Analytics Dashboard**: Overview page displaying total products, orders, customers, suppliers, and revenue\n- **Data Validation**: All API endpoints use Zod schema validation with `.partial()` for PATCH operations\n- **Type-Safe Storage**: In-memory storage implementation ready for easy database migration\n- **Comprehensive Schema**: Designed complete data models for all B2B ecommerce entities in `shared/schema.ts`\n\n### October 9, 2025 - UI/UX Enhancement Update\n- **Comprehensive UI Redesign**: Updated all major pages (Categories, Products, FindSuppliers, ReadyToShip, CategoryProducts) with modern, consistent design language\n- **Enhanced Header**: Redesigned search bar with larger input, integrated category dropdown, visual separators, and improved focus states\n- **Gradient Headers**: Implemented blue gradient page headers across all pages for visual consistency\n- **Color-Coded Categories**: Added gradient-colored icons for each category with unique color schemes\n- **Glass-Card Effects**: Modern card designs with hover effects and proper elevation states\n- **Improved Filters**: Enhanced filter sidebars with better organization and clear visual hierarchy\n- **Accessibility**: Added comprehensive data-testid attributes to all interactive elements for testing and automation\n- **Responsive Design**: All pages optimized for mobile, tablet, and desktop viewing\n- **Design Consistency**: Unified design system with consistent spacing, colors, and typography\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n\n**Framework**: React with TypeScript using Vite as the build tool\n\n**Routing**: Wouter for lightweight client-side routing\n\n**UI Component System**: \n- Shadcn/ui components (Radix UI primitives) for accessible, customizable UI elements\n- Tailwind CSS for styling with custom design tokens\n- Design system based on \"New York\" style variant\n- Custom color palette with primary brand color (vibrant orange-red HSL: 251 89% 48%)\n\n**State Management**: \n- React Query (@tanstack/react-query) for server state management\n- React hooks for local component state\n- Custom query client with credential-based authentication\n\n**Form Handling**:\n- React Hook Form for form state management\n- Hookform resolvers for validation\n- Zod for schema validation (integrated with Drizzle)\n\n**Key Design Patterns**:\n- Component composition with reusable UI primitives\n- Page-level components in `/pages` directory\n- Shared components in `/components` directory\n- Professional B2B design language (trust signals, verification badges, information hierarchy)\n\n### Backend Architecture\n\n**Runtime**: Node.js with Express.js framework\n\n**Language**: TypeScript with ESM modules\n\n**API Structure**:\n- RESTful API endpoints (prefix: `/api`)\n- Routes defined in `server/routes.ts`\n- Middleware for request logging and error handling\n- Session-based authentication ready (connect-pg-simple for session store)\n\n**Data Layer**:\n- Storage abstraction pattern via IStorage interface\n- Current implementation: In-memory storage (MemStorage class)\n- Designed for easy migration to database-backed storage\n- CRUD operations for users and business entities\n\n**Development Setup**:\n- Vite development server with HMR\n- Custom middleware mode for SSR capability\n- Runtime error overlay for debugging\n- Replit-specific dev tooling integration\n\n### Database Schema\n\n**ORM**: Drizzle ORM with PostgreSQL dialect\n\n**Current Schema** (shared/schema.ts):\n- `users` table with UUID primary keys, username, and password fields\n- `products` table with comprehensive ecommerce fields:\n  - Product identification: SKU, GTIN, external ID, slug\n  - Descriptions: name, short description, full description\n  - Pricing: regular price, sale price, tax configuration\n  - Inventory: stock management, backorders, low stock alerts\n  - Media: multiple images (array), tags (array)\n  - Physical properties: weight, dimensions (length, width, height)\n  - Visibility and publishing controls\n- `categories` table with name, slug, description, icon, and parent relationship\n- `customers` table with company info, contact details, and verification status\n- `suppliers` table with business details, verification, and ratings\n- `orders` table with customer relationships, status tracking, and totals\n- Schema validation through Drizzle-Zod integration for all entities\n\n**Migration Strategy**:\n- Drizzle Kit for schema migrations (output: `./migrations` directory)\n- Push-based deployment via `db:push` script\n- Database URL configuration via environment variables\n- Current implementation uses in-memory storage (MemStorage) for rapid development\n- Storage interface designed for seamless migration to PostgreSQL when ready\n\n### Authentication & Authorization\n\n**Authentication Pattern**:\n- Dual-role system: Buyer and Supplier accounts\n- Session-based authentication using express-session\n- PostgreSQL session store (connect-pg-simple)\n- Credential-based requests throughout frontend\n\n**Authorization Considerations**:\n- Role-based access control for buyer vs. supplier features\n- Verification status affecting supplier visibility\n- Trade assurance and business verification workflows\n\n## External Dependencies\n\n### Database & ORM\n- **PostgreSQL**: Primary database (via @neondatabase/serverless for Neon DB integration)\n- **Drizzle ORM**: Type-safe database queries and schema management\n- **Drizzle Kit**: Schema migrations and database push operations\n\n### UI Component Libraries\n- **Radix UI**: Comprehensive set of accessible, unstyled component primitives (@radix-ui/react-*)\n- **Tailwind CSS**: Utility-first CSS framework with custom configuration\n- **Lucide React**: Icon library for consistent iconography\n- **React Icons**: Additional icons (specifically for social media logos)\n- **Embla Carousel**: Carousel/slider functionality\n- **cmdk**: Command palette component\n\n### Form & Validation\n- **React Hook Form**: Form state management and validation\n- **Zod**: Schema validation library\n- **@hookform/resolvers**: Integrates Zod with React Hook Form\n\n### State & Data Fetching\n- **TanStack Query (React Query)**: Server state management, caching, and synchronization\n- **date-fns**: Date manipulation and formatting\n\n### Development Tools\n- **Vite**: Build tool and development server\n- **esbuild**: JavaScript bundler for production builds\n- **TypeScript**: Type checking and compilation\n- **PostCSS**: CSS processing with Tailwind\n- **@replit/vite-plugin-***: Replit-specific development plugins (cartographer, dev-banner, runtime-error-modal)\n\n### Utilities\n- **class-variance-authority**: Component variant management\n- **clsx** & **tailwind-merge**: Class name composition utilities\n- **nanoid**: Unique ID generation\n\n### Planned Integrations (based on requirements documents)\n- File upload service (Uploadthing or Cloudinary) for product images and documents\n- Real-time communication (Socket.io or Pusher) for messaging system\n- Email service (Resend or SendGrid) for notifications and RFQ alerts\n- Payment gateway integration for trade assurance and transactions","size_bytes":8586},"client/src/pages/ContactSupplier.tsx":{"content":"import { useState } from \"react\";\nimport { useRoute } from \"wouter\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Card } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { Building2, MapPin, Phone, Mail, Globe, Send, CheckCircle } from \"lucide-react\";\n\nexport default function ContactSupplier() {\n  const [, params] = useRoute(\"/contact-supplier/:id\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    company: \"\",\n    message: \"\",\n    quantity: \"\",\n    targetPrice: \"\"\n  });\n\n  const supplier = {\n    id: params?.id || \"1\",\n    name: \"Shanghai Manufacturing Co., Ltd.\",\n    verified: true,\n    responseRate: \"98%\",\n    responseTime: \"< 2 hours\",\n    location: \"Shanghai, China\",\n    phone: \"+86 21 1234 5678\",\n    email: \"contact@shanghai-mfg.com\",\n    website: \"www.shanghai-mfg.com\",\n    logo: \"/placeholder.svg\",\n    yearsInBusiness: 15,\n    mainProducts: \"Industrial Parts, Metal Components, Hardware\",\n    employees: \"500-1000\"\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(\"Contact form submitted:\", formData);\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1 bg-gray-50 dark:bg-gray-900\">\n        <div className=\"gradient-blue text-white py-12\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <h1 className=\"text-4xl font-bold mb-2\">Contact Supplier</h1>\n            <p className=\"text-gray-200\">Get in touch with verified suppliers</p>\n          </div>\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            <div className=\"lg:col-span-1\">\n              <Card className=\"p-6 glass-card sticky top-24\">\n                <div className=\"text-center mb-6\">\n                  <img\n                    src={supplier.logo}\n                    alt={supplier.name}\n                    className=\"w-24 h-24 mx-auto rounded-lg mb-4\"\n                  />\n                  <h2 className=\"text-xl font-bold mb-2\">{supplier.name}</h2>\n                  {supplier.verified && (\n                    <Badge className=\"bg-gray-500 text-white mb-4\">\n                      <CheckCircle className=\"h-3 w-3 mr-1\" />\n                      Verified Supplier\n                    </Badge>\n                  )}\n                </div>\n\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-start gap-3\">\n                    <MapPin className=\"h-5 w-5 text-gray-400 mt-0.5\" />\n                    <div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Location</p>\n                      <p className=\"font-medium\">{supplier.location}</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-start gap-3\">\n                    <Phone className=\"h-5 w-5 text-gray-400 mt-0.5\" />\n                    <div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Phone</p>\n                      <p className=\"font-medium\">{supplier.phone}</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-start gap-3\">\n                    <Mail className=\"h-5 w-5 text-gray-400 mt-0.5\" />\n                    <div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Email</p>\n                      <p className=\"font-medium\">{supplier.email}</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-start gap-3\">\n                    <Globe className=\"h-5 w-5 text-gray-400 mt-0.5\" />\n                    <div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Website</p>\n                      <p className=\"font-medium text-gray-600 dark:text-gray-400\">{supplier.website}</p>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"mt-6 pt-6 border-t border-gray-200 dark:border-gray-700 space-y-3\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">Response Rate</span>\n                    <span className=\"font-semibold text-green-600\">{supplier.responseRate}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">Response Time</span>\n                    <span className=\"font-semibold\">{supplier.responseTime}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">Years in Business</span>\n                    <span className=\"font-semibold\">{supplier.yearsInBusiness} years</span>\n                  </div>\n                </div>\n              </Card>\n            </div>\n\n            <div className=\"lg:col-span-2\">\n              <Card className=\"p-6 glass-card\">\n                <h2 className=\"text-2xl font-bold mb-6\">Send Inquiry</h2>\n                \n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"name\">Your Name *</Label>\n                      <Input\n                        id=\"name\"\n                        value={formData.name}\n                        onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                        required\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"email\">Email Address *</Label>\n                      <Input\n                        id=\"email\"\n                        type=\"email\"\n                        value={formData.email}\n                        onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"phone\">Phone Number</Label>\n                      <Input\n                        id=\"phone\"\n                        value={formData.phone}\n                        onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"company\">Company Name</Label>\n                      <Input\n                        id=\"company\"\n                        value={formData.company}\n                        onChange={(e) => setFormData({ ...formData, company: e.target.value })}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"quantity\">Quantity Needed</Label>\n                      <Input\n                        id=\"quantity\"\n                        placeholder=\"e.g., 1000 pieces\"\n                        value={formData.quantity}\n                        onChange={(e) => setFormData({ ...formData, quantity: e.target.value })}\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"targetPrice\">Target Price (Optional)</Label>\n                      <Input\n                        id=\"targetPrice\"\n                        placeholder=\"e.g., $5.00 per piece\"\n                        value={formData.targetPrice}\n                        onChange={(e) => setFormData({ ...formData, targetPrice: e.target.value })}\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"message\">Your Message *</Label>\n                    <Textarea\n                      id=\"message\"\n                      rows={6}\n                      placeholder=\"Please provide details about your requirements...\"\n                      value={formData.message}\n                      onChange={(e) => setFormData({ ...formData, message: e.target.value })}\n                      required\n                    />\n                  </div>\n\n                  <Button type=\"submit\" size=\"lg\" className=\"w-full gradient-blue text-white\" data-testid=\"button-send-inquiry\">\n                    <Send className=\"h-5 w-5 mr-2\" />\n                    Send Inquiry\n                  </Button>\n                </form>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":9041},"client/src/pages/GetVerified.tsx":{"content":"import { useState } from \"react\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { CheckCircle, Upload, ShieldCheck, Award, Building2, FileText } from \"lucide-react\";\n\nexport default function GetVerified() {\n  const [formData, setFormData] = useState({\n    companyName: \"\",\n    businessType: \"\",\n    registrationNumber: \"\",\n    yearEstablished: \"\",\n    country: \"\",\n    address: \"\",\n    contactPerson: \"\",\n    email: \"\",\n    phone: \"\",\n    website: \"\",\n    annualRevenue: \"\",\n    employees: \"\",\n    mainProducts: \"\",\n    certifications: \"\"\n  });\n\n  const benefits = [\n    {\n      icon: <ShieldCheck className=\"h-8 w-8\" />,\n      title: \"Trust Badge\",\n      description: \"Display verified badge on your profile and products\"\n    },\n    {\n      icon: <Award className=\"h-8 w-8\" />,\n      title: \"Higher Rankings\",\n      description: \"Appear higher in search results and get more visibility\"\n    },\n    {\n      icon: <Building2 className=\"h-8 w-8\" />,\n      title: \"More Inquiries\",\n      description: \"Get up to 3x more buyer inquiries with verified status\"\n    }\n  ];\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(\"Verification form submitted:\", formData);\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1 bg-gray-50 dark:bg-gray-900\">\n        <div className=\"gradient-blue text-white py-16\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n            <CheckCircle className=\"h-16 w-16 mx-auto mb-4\" />\n            <h1 className=\"text-4xl md:text-5xl font-bold mb-4\">Get Verified</h1>\n            <p className=\"text-xl text-gray-200 max-w-2xl mx-auto\">\n              Boost your credibility and attract more buyers with our supplier verification program\n            </p>\n          </div>\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 mb-12\">\n            {benefits.map((benefit, index) => (\n              <Card key={index} className=\"p-6 text-center glass-card hover:shadow-lg transition-shadow\">\n                <div className=\"gradient-blue text-white w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  {benefit.icon}\n                </div>\n                <h3 className=\"text-lg font-semibold mb-2\">{benefit.title}</h3>\n                <p className=\"text-gray-600 dark:text-gray-400\">{benefit.description}</p>\n              </Card>\n            ))}\n          </div>\n\n          <Card className=\"max-w-4xl mx-auto p-8 glass-card\">\n            <h2 className=\"text-2xl font-bold mb-6\">Verification Application</h2>\n            \n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <Label htmlFor=\"companyName\">Company Name *</Label>\n                  <Input\n                    id=\"companyName\"\n                    value={formData.companyName}\n                    onChange={(e) => setFormData({ ...formData, companyName: e.target.value })}\n                    required\n                    data-testid=\"input-company-name\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"businessType\">Business Type *</Label>\n                  <Select\n                    value={formData.businessType}\n                    onValueChange={(value) => setFormData({ ...formData, businessType: value })}\n                  >\n                    <SelectTrigger data-testid=\"select-business-type\">\n                      <SelectValue placeholder=\"Select type\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"manufacturer\">Manufacturer</SelectItem>\n                      <SelectItem value=\"trading\">Trading Company</SelectItem>\n                      <SelectItem value=\"wholesaler\">Wholesaler</SelectItem>\n                      <SelectItem value=\"distributor\">Distributor</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <Label htmlFor=\"registrationNumber\">Business Registration Number *</Label>\n                  <Input\n                    id=\"registrationNumber\"\n                    value={formData.registrationNumber}\n                    onChange={(e) => setFormData({ ...formData, registrationNumber: e.target.value })}\n                    required\n                    data-testid=\"input-registration-number\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"yearEstablished\">Year Established *</Label>\n                  <Input\n                    id=\"yearEstablished\"\n                    type=\"number\"\n                    value={formData.yearEstablished}\n                    onChange={(e) => setFormData({ ...formData, yearEstablished: e.target.value })}\n                    required\n                    data-testid=\"input-year-established\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <Label htmlFor=\"country\">Country *</Label>\n                  <Input\n                    id=\"country\"\n                    value={formData.country}\n                    onChange={(e) => setFormData({ ...formData, country: e.target.value })}\n                    required\n                    data-testid=\"input-country\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"employees\">Number of Employees *</Label>\n                  <Select\n                    value={formData.employees}\n                    onValueChange={(value) => setFormData({ ...formData, employees: value })}\n                  >\n                    <SelectTrigger data-testid=\"select-employees\">\n                      <SelectValue placeholder=\"Select range\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"1-50\">1-50</SelectItem>\n                      <SelectItem value=\"51-200\">51-200</SelectItem>\n                      <SelectItem value=\"201-500\">201-500</SelectItem>\n                      <SelectItem value=\"501-1000\">501-1000</SelectItem>\n                      <SelectItem value=\"1000+\">1000+</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"address\">Business Address *</Label>\n                <Textarea\n                  id=\"address\"\n                  rows={3}\n                  value={formData.address}\n                  onChange={(e) => setFormData({ ...formData, address: e.target.value })}\n                  required\n                  data-testid=\"textarea-address\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div>\n                  <Label htmlFor=\"contactPerson\">Contact Person *</Label>\n                  <Input\n                    id=\"contactPerson\"\n                    value={formData.contactPerson}\n                    onChange={(e) => setFormData({ ...formData, contactPerson: e.target.value })}\n                    required\n                    data-testid=\"input-contact-person\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"email\">Email *</Label>\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    value={formData.email}\n                    onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                    required\n                    data-testid=\"input-email\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"phone\">Phone *</Label>\n                  <Input\n                    id=\"phone\"\n                    value={formData.phone}\n                    onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n                    required\n                    data-testid=\"input-phone\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"mainProducts\">Main Products *</Label>\n                <Textarea\n                  id=\"mainProducts\"\n                  rows={3}\n                  placeholder=\"Describe your main products and services\"\n                  value={formData.mainProducts}\n                  onChange={(e) => setFormData({ ...formData, mainProducts: e.target.value })}\n                  required\n                  data-testid=\"textarea-main-products\"\n                />\n              </div>\n\n              <div>\n                <Label htmlFor=\"certifications\">Certifications (Optional)</Label>\n                <Textarea\n                  id=\"certifications\"\n                  rows={2}\n                  placeholder=\"List any certifications (ISO, CE, FDA, etc.)\"\n                  value={formData.certifications}\n                  onChange={(e) => setFormData({ ...formData, certifications: e.target.value })}\n                  data-testid=\"textarea-certifications\"\n                />\n              </div>\n\n              <div className=\"space-y-4\">\n                <h3 className=\"font-semibold\">Required Documents</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"border-2 border-dashed rounded-lg p-6 text-center\">\n                    <Upload className=\"h-8 w-8 mx-auto mb-2 text-gray-400\" />\n                    <p className=\"text-sm font-medium mb-1\">Business License</p>\n                    <Button variant=\"outline\" size=\"sm\" data-testid=\"button-upload-license\">Upload File</Button>\n                  </div>\n                  <div className=\"border-2 border-dashed rounded-lg p-6 text-center\">\n                    <Upload className=\"h-8 w-8 mx-auto mb-2 text-gray-400\" />\n                    <p className=\"text-sm font-medium mb-1\">Company Registration</p>\n                    <Button variant=\"outline\" size=\"sm\" data-testid=\"button-upload-registration\">Upload File</Button>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex gap-4\">\n                <Button type=\"submit\" size=\"lg\" className=\"flex-1 gradient-blue text-white\" data-testid=\"button-submit-verification\">\n                  <FileText className=\"h-5 w-5 mr-2\" />\n                  Submit Application\n                </Button>\n              </div>\n            </form>\n          </Card>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":11253},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/pages/SupplierProfile.tsx":{"content":"import { useState } from \"react\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport ProductCard from \"@/components/ProductCard\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { \n  MapPin, \n  Star, \n  ShieldCheck,\n  Heart,\n  MessageSquare,\n  Building2,\n  Users,\n  TrendingUp,\n  Award,\n  Phone,\n  Mail,\n  Globe\n} from \"lucide-react\";\n\nexport default function SupplierProfile() {\n  const [activeTab, setActiveTab] = useState(\"products\");\n\n  //todo: remove mock functionality\n  const supplierProducts = [\n    {\n      id: \"p1\",\n      image: \"https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=400&h=400&fit=crop\",\n      name: \"Premium Wireless Headphones\",\n      priceRange: \"$25.00-$35.00 /piece\",\n      moq: \"100 pieces\",\n      supplierName: \"Global Electronics Mfg\",\n      supplierCountry: \"China\",\n      responseRate: \"98%\",\n      verified: true,\n      tradeAssurance: true,\n    },\n    {\n      id: \"p2\",\n      image: \"https://images.unsplash.com/photo-1484704849700-f032a568e944?w=400&h=400&fit=crop\",\n      name: \"Bluetooth Speaker Portable\",\n      priceRange: \"$18.00-$28.00 /piece\",\n      moq: \"200 pieces\",\n      supplierName: \"Global Electronics Mfg\",\n      supplierCountry: \"China\",\n      responseRate: \"98%\",\n      verified: true,\n    },\n  ];\n\n  const reviews = [\n    { id: 1, rating: 5, buyer: \"John D.\", country: \"USA\", comment: \"Excellent quality products and great communication. Highly recommended!\", date: \"2 weeks ago\" },\n    { id: 2, rating: 5, buyer: \"Sarah M.\", country: \"UK\", comment: \"Fast delivery and products exactly as described. Will order again.\", date: \"1 month ago\" },\n    { id: 3, rating: 4, buyer: \"Michael K.\", country: \"Germany\", comment: \"Good quality overall. Minor packaging issues but supplier resolved quickly.\", date: \"2 months ago\" },\n  ];\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <div className=\"relative h-48 sm:h-64 bg-gradient-to-r from-primary/20 to-primary/10\">\n          <div className=\"absolute inset-0 bg-cover bg-center opacity-30\" \n            style={{ backgroundImage: 'url(https://images.unsplash.com/photo-1486406146926-c627a92ad1ab?w=1200&auto=format&fit=crop)' }} \n          />\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"relative -mt-16 sm:-mt-20 mb-6 sm:mb-8\">\n            <Card>\n              <CardContent className=\"p-4 sm:p-6\">\n                <div className=\"flex flex-col md:flex-row gap-4 sm:gap-6\">\n                  <div className=\"w-24 h-24 sm:w-32 sm:h-32 bg-white border-4 border-background rounded-lg flex items-center justify-center overflow-hidden mx-auto md:mx-0\">\n                    <img src=\"https://images.unsplash.com/photo-1560179707-f14e90ef3623?w=200&h=200&fit=crop\" alt=\"Company Logo\" className=\"w-full h-full object-cover\" />\n                  </div>\n                  \n                  <div className=\"flex-1\">\n                    <div className=\"flex flex-col gap-4 mb-4\">\n                      <div>\n                        <h1 className=\"text-xl sm:text-2xl lg:text-3xl font-bold mb-2 text-center md:text-left\">Global Electronics Manufacturing Co.</h1>\n                        <div className=\"flex flex-wrap gap-2 mb-3 justify-center md:justify-start\">\n                          <Badge className=\"bg-success text-white text-xs\">\n                            <ShieldCheck className=\"w-3 h-3 mr-1\" />\n                            Verified Supplier\n                          </Badge>\n                          <Badge className=\"bg-amber-500 text-white text-xs\">\n                            <Star className=\"w-3 h-3 mr-1\" />\n                            Gold Member\n                          </Badge>\n                          <Badge className=\"bg-primary text-xs\">Trade Assurance</Badge>\n                        </div>\n                        <div className=\"flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-4 text-xs sm:text-sm text-muted-foreground justify-center md:justify-start\">\n                          <div className=\"flex items-center gap-1 justify-center md:justify-start\">\n                            <MapPin className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                            <span>Shenzhen, China</span>\n                          </div>\n                          <div className=\"flex items-center gap-1 justify-center md:justify-start\">\n                            <Building2 className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                            <span>Manufacturer</span>\n                          </div>\n                          <div className=\"flex items-center gap-1 justify-center md:justify-start\">\n                            <TrendingUp className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                            <span>12 Years</span>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"flex flex-col sm:flex-row gap-2 justify-center md:justify-start\">\n                        <Button size=\"lg\" className=\"h-10 sm:h-12 text-xs sm:text-sm\" data-testid=\"button-contact-supplier\">\n                          <MessageSquare className=\"w-3 h-3 sm:w-4 sm:h-4 mr-2\" />\n                          Contact Supplier\n                        </Button>\n                        <Button size=\"lg\" variant=\"outline\" className=\"h-10 sm:h-12\" data-testid=\"button-add-favorite\">\n                          <Heart className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                        </Button>\n                      </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 gap-3 sm:gap-4 pt-4 border-t\">\n                      <div className=\"text-center\">\n                        <div className=\"text-lg sm:text-2xl font-bold text-primary\" data-testid=\"text-stat-products\">450+</div>\n                        <div className=\"text-xs sm:text-sm text-muted-foreground\">Products</div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"text-lg sm:text-2xl font-bold text-primary\" data-testid=\"text-stat-transactions\">2,500+</div>\n                        <div className=\"text-xs sm:text-sm text-muted-foreground\">Transactions</div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"text-lg sm:text-2xl font-bold text-primary\" data-testid=\"text-stat-response\">95%</div>\n                        <div className=\"text-xs sm:text-sm text-muted-foreground\">Response Rate</div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"text-lg sm:text-2xl font-bold text-primary\" data-testid=\"text-stat-time\">&lt;2h</div>\n                        <div className=\"text-xs sm:text-sm text-muted-foreground\">Response Time</div>\n                      </div>\n                      <div className=\"text-center col-span-2 sm:col-span-1\">\n                        <div className=\"flex items-center justify-center gap-1\">\n                          <span className=\"text-lg sm:text-2xl font-bold text-primary\" data-testid=\"text-stat-rating\">4.8</span>\n                          <Star className=\"w-4 h-4 sm:w-5 sm:h-5 fill-amber-400 text-amber-400\" />\n                        </div>\n                        <div className=\"text-xs sm:text-sm text-muted-foreground\">Rating</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          <Tabs value={activeTab} onValueChange={setActiveTab} className=\"mb-8 sm:mb-12\">\n            <TabsList className=\"w-full grid grid-cols-4 lg:grid-cols-8 text-xs sm:text-sm\">\n              <TabsTrigger value=\"products\" className=\"text-xs sm:text-sm\" data-testid=\"tab-products\">Products</TabsTrigger>\n              <TabsTrigger value=\"about\" className=\"text-xs sm:text-sm\" data-testid=\"tab-about\">About</TabsTrigger>\n              <TabsTrigger value=\"capabilities\" className=\"text-xs sm:text-sm\" data-testid=\"tab-capabilities\">Capabilities</TabsTrigger>\n              <TabsTrigger value=\"certifications\" className=\"text-xs sm:text-sm\" data-testid=\"tab-certifications\">Certificates</TabsTrigger>\n              <TabsTrigger value=\"factory\" className=\"text-xs sm:text-sm\" data-testid=\"tab-factory\">Factory</TabsTrigger>\n              <TabsTrigger value=\"trade\" className=\"text-xs sm:text-sm\" data-testid=\"tab-trade\">Trade Data</TabsTrigger>\n              <TabsTrigger value=\"contact\" className=\"text-xs sm:text-sm\" data-testid=\"tab-contact\">Contact</TabsTrigger>\n              <TabsTrigger value=\"reviews\" className=\"text-xs sm:text-sm\" data-testid=\"tab-reviews\">Reviews</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"products\" className=\"mt-4 sm:mt-6\">\n              <div className=\"mb-4 sm:mb-6 flex gap-4\">\n                <Input placeholder=\"Search products...\" className=\"max-w-md text-sm sm:text-base\" data-testid=\"input-search-products\" />\n              </div>\n              <div className=\"grid grid-cols-2 sm:grid-cols-2 lg:grid-cols-4 gap-3 sm:gap-6\">\n                {supplierProducts.map((product) => (\n                  <ProductCard key={product.id} {...product} />\n                ))}\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"about\" className=\"mt-4 sm:mt-6\">\n              <Card>\n                <CardContent className=\"p-4 sm:p-6 space-y-4 sm:space-y-6\">\n                  <div>\n                    <h3 className=\"text-base sm:text-lg font-semibold mb-2 sm:mb-3\">Company Overview</h3>\n                    <p className=\"text-xs sm:text-sm text-muted-foreground\">\n                      Global Electronics Manufacturing Co. is a leading manufacturer and exporter of consumer electronics with over 12 years of experience. \n                      We specialize in audio products, smart devices, and mobile accessories. Our factory spans 50,000 square meters with state-of-the-art \n                      production facilities and employs over 500 skilled workers.\n                    </p>\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6\">\n                    <div>\n                      <h4 className=\"font-semibold mb-2 text-sm sm:text-base\">Business Information</h4>\n                      <div className=\"space-y-2 text-xs sm:text-sm\">\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Business Type:</span>\n                          <span className=\"font-medium\">Manufacturer</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Year Established:</span>\n                          <span className=\"font-medium\">2012</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Total Employees:</span>\n                          <span className=\"font-medium\">500-1000</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Factory Size:</span>\n                          <span className=\"font-medium\">50,000 m²</span>\n                        </div>\n                      </div>\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold mb-2 text-sm sm:text-base\">Main Products</h4>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {[\"Headphones\", \"Speakers\", \"Earbuds\", \"Smart Watches\", \"Chargers\", \"Cables\"].map((product) => (\n                          <Badge key={product} variant=\"outline\" className=\"text-xs\">{product}</Badge>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"capabilities\" className=\"mt-4 sm:mt-6\">\n              <Card>\n                <CardContent className=\"p-4 sm:p-6 space-y-4 sm:space-y-6\">\n                  <div>\n                    <h3 className=\"text-base sm:text-lg font-semibold mb-2 sm:mb-3\">Production Capacity</h3>\n                    <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-3 sm:gap-4\">\n                      <div className=\"p-3 sm:p-4 bg-muted rounded-lg\">\n                        <div className=\"text-xl sm:text-2xl font-bold text-primary mb-1\">100K+</div>\n                        <div className=\"text-xs sm:text-sm text-muted-foreground\">Units per Month</div>\n                      </div>\n                      <div className=\"p-3 sm:p-4 bg-muted rounded-lg\">\n                        <div className=\"text-xl sm:text-2xl font-bold text-primary mb-1\">15-30</div>\n                        <div className=\"text-xs sm:text-sm text-muted-foreground\">Days Lead Time</div>\n                      </div>\n                      <div className=\"p-3 sm:p-4 bg-muted rounded-lg\">\n                        <div className=\"text-xl sm:text-2xl font-bold text-primary mb-1\">50+</div>\n                        <div className=\"text-xs sm:text-sm text-muted-foreground\">R&D Engineers</div>\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                    <h3 className=\"text-base sm:text-lg font-semibold mb-2 sm:mb-3\">Services</h3>\n                    <div className=\"grid grid-cols-1 gap-3 sm:gap-4\">\n                      <div className=\"flex items-start gap-3\">\n                        <Award className=\"w-4 h-4 sm:w-5 sm:h-5 text-primary mt-1\" />\n                        <div>\n                          <h4 className=\"font-medium mb-1 text-sm sm:text-base\">OEM/ODM Services</h4>\n                          <p className=\"text-xs sm:text-sm text-muted-foreground\">Custom design and manufacturing solutions</p>\n                        </div>\n                      </div>\n                      <div className=\"flex items-start gap-3\">\n                        <Award className=\"w-4 h-4 sm:w-5 sm:h-5 text-primary mt-1\" />\n                        <div>\n                          <h4 className=\"font-medium mb-1 text-sm sm:text-base\">Quality Control</h4>\n                          <p className=\"text-xs sm:text-sm text-muted-foreground\">Strict QC process with multiple checkpoints</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"certifications\" className=\"mt-4 sm:mt-6\">\n              <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-3 sm:gap-4\">\n                {[\"ISO 9001\", \"CE\", \"RoHS\", \"FCC\", \"BSCI\", \"ISO 14001\"].map((cert) => (\n                  <Card key={cert} className=\"hover:shadow-lg transition-shadow cursor-pointer\">\n                    <CardContent className=\"p-4 sm:p-6 text-center\">\n                      <Award className=\"w-8 h-8 sm:w-12 sm:h-12 text-primary mx-auto mb-2 sm:mb-3\" />\n                      <h4 className=\"font-semibold text-sm sm:text-base\">{cert}</h4>\n                      <p className=\"text-xs sm:text-sm text-muted-foreground mt-1\">Certified</p>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"factory\" className=\"mt-4 sm:mt-6\">\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 sm:gap-4\">\n                {[1, 2, 3, 4, 5, 6].map((i) => (\n                  <div key={i} className=\"aspect-video bg-muted rounded-lg overflow-hidden\">\n                    <img \n                      src={`https://images.unsplash.com/photo-1581094794329-c8112a89af12?w=600&h=400&fit=crop&sig=${i}`}\n                      alt={`Factory ${i}`}\n                      className=\"w-full h-full object-cover\"\n                    />\n                  </div>\n                ))}\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"trade\" className=\"mt-4 sm:mt-6\">\n              <Card>\n                <CardContent className=\"p-4 sm:p-6 space-y-4 sm:space-y-6\">\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6\">\n                    <div>\n                      <h3 className=\"text-base sm:text-lg font-semibold mb-2 sm:mb-3\">Export Markets</h3>\n                      <div className=\"space-y-2\">\n                        {[\n                          { region: \"North America\", percentage: 40 },\n                          { region: \"Europe\", percentage: 35 },\n                          { region: \"Asia\", percentage: 15 },\n                          { region: \"Others\", percentage: 10 },\n                        ].map((market) => (\n                          <div key={market.region}>\n                            <div className=\"flex justify-between text-xs sm:text-sm mb-1\">\n                              <span>{market.region}</span>\n                              <span className=\"font-medium\">{market.percentage}%</span>\n                            </div>\n                            <div className=\"h-2 bg-muted rounded-full overflow-hidden\">\n                              <div className=\"h-full bg-primary\" style={{ width: `${market.percentage}%` }} />\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                    <div>\n                      <h3 className=\"text-base sm:text-lg font-semibold mb-2 sm:mb-3\">Trade Statistics</h3>\n                      <div className=\"space-y-2 sm:space-y-3 text-xs sm:text-sm\">\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Annual Revenue:</span>\n                          <span className=\"font-medium\">$10-25 Million</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Export Percentage:</span>\n                          <span className=\"font-medium\">80%</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Production Capacity:</span>\n                          <span className=\"font-medium\">100K units/month</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"contact\" className=\"mt-4 sm:mt-6\">\n              <Card>\n                <CardContent className=\"p-4 sm:p-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6\">\n                    <div className=\"space-y-3 sm:space-y-4\">\n                      <h3 className=\"text-base sm:text-lg font-semibold mb-3 sm:mb-4\">Contact Information</h3>\n                      <div className=\"flex items-center gap-3\">\n                        <Phone className=\"w-4 h-4 sm:w-5 sm:h-5 text-muted-foreground\" />\n                        <div>\n                          <div className=\"text-xs sm:text-sm text-muted-foreground\">Phone</div>\n                          <div className=\"font-medium text-sm sm:text-base\">+86 755 1234 5678</div>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center gap-3\">\n                        <Mail className=\"w-4 h-4 sm:w-5 sm:h-5 text-muted-foreground\" />\n                        <div>\n                          <div className=\"text-xs sm:text-sm text-muted-foreground\">Email</div>\n                          <div className=\"font-medium text-sm sm:text-base break-all\">sales@globalelectronics.com</div>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center gap-3\">\n                        <Globe className=\"w-4 h-4 sm:w-5 sm:h-5 text-muted-foreground\" />\n                        <div>\n                          <div className=\"text-xs sm:text-sm text-muted-foreground\">Website</div>\n                          <div className=\"font-medium text-sm sm:text-base\">www.globalelectronics.com</div>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center gap-3\">\n                        <MapPin className=\"w-4 h-4 sm:w-5 sm:h-5 text-muted-foreground\" />\n                        <div>\n                          <div className=\"text-xs sm:text-sm text-muted-foreground\">Address</div>\n                          <div className=\"font-medium text-sm sm:text-base\">Building A, Tech Park, Shenzhen, China</div>\n                        </div>\n                      </div>\n                    </div>\n                    <div>\n                      <h3 className=\"text-base sm:text-lg font-semibold mb-3 sm:mb-4\">Contact Person</h3>\n                      <Card className=\"bg-muted\">\n                        <CardContent className=\"p-4\">\n                          <div className=\"flex items-center gap-3 mb-3\">\n                            <div className=\"w-10 h-10 sm:w-12 sm:h-12 rounded-full bg-primary/10 flex items-center justify-center\">\n                              <Users className=\"w-5 h-5 sm:w-6 sm:h-6 text-primary\" />\n                            </div>\n                            <div>\n                              <div className=\"font-semibold text-sm sm:text-base\">David Chen</div>\n                              <div className=\"text-xs sm:text-sm text-muted-foreground\">Sales Manager</div>\n                            </div>\n                          </div>\n                          <Button className=\"w-full text-xs sm:text-sm\" data-testid=\"button-contact-person\">\n                            <MessageSquare className=\"w-3 h-3 sm:w-4 sm:h-4 mr-2\" />\n                            Send Message\n                          </Button>\n                        </CardContent>\n                      </Card>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"reviews\" className=\"mt-4 sm:mt-6\">\n              <div className=\"space-y-3 sm:space-y-4\">\n                <div className=\"flex flex-col sm:flex-row items-start sm:items-center gap-4 sm:gap-8 mb-4 sm:mb-6\">\n                  <div className=\"text-center mx-auto sm:mx-0\">\n                    <div className=\"text-4xl sm:text-5xl font-bold text-primary mb-2\">4.8</div>\n                    <div className=\"flex items-center gap-1 mb-1 justify-center\">\n                      {[...Array(5)].map((_, i) => (\n                        <Star key={i} className=\"w-4 h-4 sm:w-5 sm:h-5 fill-amber-400 text-amber-400\" />\n                      ))}\n                    </div>\n                    <div className=\"text-xs sm:text-sm text-muted-foreground\">Based on 234 reviews</div>\n                  </div>\n                  <div className=\"flex-1 w-full space-y-2\">\n                    {[5, 4, 3, 2, 1].map((rating) => (\n                      <div key={rating} className=\"flex items-center gap-2 sm:gap-3\">\n                        <span className=\"text-xs sm:text-sm w-10 sm:w-12\">{rating} star</span>\n                        <div className=\"flex-1 h-2 bg-muted rounded-full overflow-hidden\">\n                          <div \n                            className=\"h-full bg-amber-400\" \n                            style={{ width: rating === 5 ? '80%' : rating === 4 ? '15%' : '5%' }} \n                          />\n                        </div>\n                        <span className=\"text-xs sm:text-sm text-muted-foreground w-8 sm:w-12 text-right\">\n                          {rating === 5 ? '187' : rating === 4 ? '35' : '12'}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {reviews.map((review) => (\n                  <Card key={review.id}>\n                    <CardContent className=\"p-4 sm:p-6\">\n                      <div className=\"flex flex-col sm:flex-row items-start justify-between mb-3 gap-3 sm:gap-0\">\n                        <div className=\"flex items-center gap-3\">\n                          <div className=\"w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-primary/10 flex items-center justify-center\">\n                            <span className=\"font-semibold text-primary text-sm sm:text-base\">{review.buyer[0]}</span>\n                          </div>\n                          <div>\n                            <div className=\"font-semibold text-sm sm:text-base\">{review.buyer}</div>\n                            <div className=\"text-xs sm:text-sm text-muted-foreground\">{review.country} • {review.date}</div>\n                          </div>\n                        </div>\n                        <div className=\"flex ml-11 sm:ml-0\">\n                          {[...Array(review.rating)].map((_, i) => (\n                            <Star key={i} className=\"w-3 h-3 sm:w-4 sm:h-4 fill-amber-400 text-amber-400\" />\n                          ))}\n                        </div>\n                      </div>\n                      <p className=\"text-xs sm:text-sm text-muted-foreground\">{review.comment}</p>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":26047},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/pages/Contact.tsx":{"content":"import Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { \n  Mail, \n  Phone, \n  MapPin, \n  Clock,\n  MessageSquare,\n  Send\n} from \"lucide-react\";\n\nexport default function Contact() {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <div className=\"bg-gradient-to-r from-primary/10 to-primary/5 py-12 mb-8\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n            <h1 className=\"text-4xl font-bold mb-4\">Contact Us</h1>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Have questions? We're here to help. Reach out to our team and we'll get back to you as soon as possible.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-16\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 mb-12\">\n            <Card>\n              <CardContent className=\"p-6 text-center\">\n                <div className=\"w-12 h-12 rounded-full bg-primary/10 flex items-center justify-center mx-auto mb-4\">\n                  <Mail className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-semibold text-lg mb-2\">Email Us</h3>\n                <p className=\"text-muted-foreground text-sm mb-3\">Send us an email anytime</p>\n                <a href=\"mailto:support@b2bmarketplace.com\" className=\"text-primary hover:underline\">\n                  support@b2bmarketplace.com\n                </a>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6 text-center\">\n                <div className=\"w-12 h-12 rounded-full bg-primary/10 flex items-center justify-center mx-auto mb-4\">\n                  <Phone className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-semibold text-lg mb-2\">Call Us</h3>\n                <p className=\"text-muted-foreground text-sm mb-3\">Mon-Fri from 8am to 6pm</p>\n                <a href=\"tel:+1234567890\" className=\"text-primary hover:underline\">\n                  +1 (234) 567-8900\n                </a>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6 text-center\">\n                <div className=\"w-12 h-12 rounded-full bg-primary/10 flex items-center justify-center mx-auto mb-4\">\n                  <MessageSquare className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-semibold text-lg mb-2\">Live Chat</h3>\n                <p className=\"text-muted-foreground text-sm mb-3\">Chat with our support team</p>\n                <Button variant=\"outline\" size=\"sm\" data-testid=\"button-start-chat\">Start Chat</Button>\n              </CardContent>\n            </Card>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Send Us a Message</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <form className=\"space-y-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"first-name\">First Name *</Label>\n                      <Input id=\"first-name\" placeholder=\"John\" className=\"mt-2\" data-testid=\"input-first-name\" />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"last-name\">Last Name *</Label>\n                      <Input id=\"last-name\" placeholder=\"Doe\" className=\"mt-2\" data-testid=\"input-last-name\" />\n                    </div>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"email\">Email *</Label>\n                    <Input id=\"email\" type=\"email\" placeholder=\"john@company.com\" className=\"mt-2\" data-testid=\"input-email\" />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"company\">Company Name</Label>\n                    <Input id=\"company\" placeholder=\"Your Company Ltd.\" className=\"mt-2\" data-testid=\"input-company\" />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"subject\">Subject *</Label>\n                    <Input id=\"subject\" placeholder=\"How can we help?\" className=\"mt-2\" data-testid=\"input-subject\" />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"message\">Message *</Label>\n                    <Textarea \n                      id=\"message\" \n                      placeholder=\"Tell us more about your inquiry...\"\n                      rows={6}\n                      className=\"mt-2\"\n                      data-testid=\"textarea-message\"\n                    />\n                  </div>\n\n                  <Button className=\"w-full\" size=\"lg\" data-testid=\"button-submit\">\n                    <Send className=\"w-4 h-4 mr-2\" />\n                    Send Message\n                  </Button>\n                </form>\n              </CardContent>\n            </Card>\n\n            <div className=\"space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Office Locations</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-6\">\n                  <div>\n                    <h4 className=\"font-semibold mb-2 flex items-center gap-2\">\n                      <MapPin className=\"w-4 h-4 text-primary\" />\n                      Headquarters\n                    </h4>\n                    <p className=\"text-muted-foreground text-sm\">\n                      123 Business Avenue<br />\n                      New York, NY 10001<br />\n                      United States\n                    </p>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold mb-2 flex items-center gap-2\">\n                      <MapPin className=\"w-4 h-4 text-primary\" />\n                      Asia Pacific Office\n                    </h4>\n                    <p className=\"text-muted-foreground text-sm\">\n                      456 Trade Center Road<br />\n                      Hong Kong<br />\n                      China\n                    </p>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold mb-2 flex items-center gap-2\">\n                      <MapPin className=\"w-4 h-4 text-primary\" />\n                      Europe Office\n                    </h4>\n                    <p className=\"text-muted-foreground text-sm\">\n                      789 Commerce Street<br />\n                      London EC1A 1BB<br />\n                      United Kingdom\n                    </p>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle>Business Hours</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center gap-3\">\n                      <Clock className=\"w-5 h-5 text-primary\" />\n                      <div>\n                        <p className=\"font-medium\">Monday - Friday</p>\n                        <p className=\"text-sm text-muted-foreground\">8:00 AM - 6:00 PM (EST)</p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-3\">\n                      <Clock className=\"w-5 h-5 text-primary\" />\n                      <div>\n                        <p className=\"font-medium\">Saturday</p>\n                        <p className=\"text-sm text-muted-foreground\">9:00 AM - 2:00 PM (EST)</p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-3\">\n                      <Clock className=\"w-5 h-5 text-muted-foreground\" />\n                      <div>\n                        <p className=\"font-medium\">Sunday</p>\n                        <p className=\"text-sm text-muted-foreground\">Closed</p>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":8574},"client/src/pages/ReadyToShip.tsx":{"content":"import { useState } from \"react\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport PageHeader from \"@/components/PageHeader\";\nimport ProductCard from \"@/components/ProductCard\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Search, Truck, Clock, Shield, Package, TrendingUp } from \"lucide-react\";\n\nexport default function ReadyToShip() {\n  const [sortBy, setSortBy] = useState(\"best-match\");\n\n  const products = [\n    {\n      id: \"rts1\",\n      image: \"https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=400&h=400&fit=crop\",\n      name: \"Premium Wireless Headphones\",\n      priceRange: \"$25.00-$35.00 /piece\",\n      moq: \"50 pieces\",\n      supplierName: \"AudioTech Pro\",\n      supplierCountry: \"China\",\n      responseRate: \"98%\",\n      verified: true,\n      tradeAssurance: true,\n      readyToShip: true,\n      shippingTime: \"3-7 days\"\n    },\n    {\n      id: \"rts2\",\n      image: \"https://images.unsplash.com/photo-1523275335684-37898b6baf30?w=400&h=400&fit=crop\",\n      name: \"Classic Analog Wristwatch\",\n      priceRange: \"$12.00-$18.00 /piece\",\n      moq: \"100 pieces\",\n      supplierName: \"TimeKeeper Co.\",\n      supplierCountry: \"Hong Kong\",\n      responseRate: \"95%\",\n      verified: true,\n      readyToShip: true,\n      shippingTime: \"5-10 days\"\n    },\n    {\n      id: \"rts3\",\n      image: \"https://images.unsplash.com/photo-1572635196237-14b3f281503f?w=400&h=400&fit=crop\",\n      name: \"Designer Sunglasses UV Protection\",\n      priceRange: \"$8.00-$12.00 /piece\",\n      moq: \"200 pieces\",\n      supplierName: \"Vision Plus\",\n      supplierCountry: \"China\",\n      responseRate: \"92%\",\n      verified: true,\n      readyToShip: true,\n      shippingTime: \"4-8 days\"\n    },\n    {\n      id: \"rts4\",\n      image: \"https://images.unsplash.com/photo-1491553895911-0055eca6402d?w=400&h=400&fit=crop\",\n      name: \"Casual Sneakers Comfortable\",\n      priceRange: \"$15.00-$22.00 /piece\",\n      moq: \"100 pieces\",\n      supplierName: \"Global Footwear\",\n      supplierCountry: \"Vietnam\",\n      responseRate: \"96%\",\n      verified: true,\n      readyToShip: true,\n      shippingTime: \"6-12 days\"\n    },\n    {\n      id: \"rts5\",\n      image: \"https://images.unsplash.com/photo-1585386959984-a4155224a1ad?w=400&h=400&fit=crop\",\n      name: \"Stainless Steel Water Bottle\",\n      priceRange: \"$5.00-$8.00 /piece\",\n      moq: \"500 pieces\",\n      supplierName: \"EcoWare Industries\",\n      supplierCountry: \"China\",\n      responseRate: \"99%\",\n      verified: true,\n      tradeAssurance: true,\n      readyToShip: true,\n      shippingTime: \"3-5 days\"\n    },\n    {\n      id: \"rts6\",\n      image: \"https://images.unsplash.com/photo-1484704849700-f032a568e944?w=400&h=400&fit=crop\",\n      name: \"Portable Bluetooth Speaker\",\n      priceRange: \"$18.00-$28.00 /piece\",\n      moq: \"100 pieces\",\n      supplierName: \"Sound Systems Ltd\",\n      supplierCountry: \"China\",\n      responseRate: \"97%\",\n      verified: true,\n      readyToShip: true,\n      shippingTime: \"4-9 days\"\n    },\n  ];\n\n  const features = [\n    {\n      icon: Clock,\n      title: \"Quick Delivery\",\n      description: \"Ships in 3-15 days\",\n      color: \"from-gray-500 to-gray-600\"\n    },\n    {\n      icon: Package,\n      title: \"Lower MOQ\",\n      description: \"Smaller minimum orders\",\n      color: \"from-purple-500 to-pink-500\"\n    },\n    {\n      icon: Shield,\n      title: \"Trade Assurance\",\n      description: \"Secure transactions\",\n      color: \"from-green-500 to-emerald-500\"\n    },\n    {\n      icon: TrendingUp,\n      title: \"In-Stock Items\",\n      description: \"Ready for immediate dispatch\",\n      color: \"from-red-500 to-red-600\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-gray-50 dark:bg-gray-900\">\n      <Header />\n      <main className=\"flex-1\">\n        <PageHeader\n          title=\"Ready to Ship\"\n          subtitle=\"Fast delivery on in-stock products with lower MOQ\"\n          variant=\"gradient\"\n        />\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          {/* Feature Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8\">\n            {features.map((feature, index) => {\n              const Icon = feature.icon;\n              const featureId = feature.title.toLowerCase().replace(/\\s+/g, '-');\n              return (\n                <Card key={index} className=\"overflow-hidden hover-elevate transition-all duration-300\" data-testid={`card-feature-${featureId}`}>\n                  <CardContent className=\"p-6\">\n                    <div className={`w-12 h-12 rounded-xl bg-gradient-to-br ${feature.color} flex items-center justify-center mb-4 shadow-lg`}>\n                      <Icon className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <h3 className=\"font-semibold text-base mb-1\" data-testid={`text-feature-title-${featureId}`}>{feature.title}</h3>\n                    <p className=\"text-sm text-muted-foreground\" data-testid={`text-feature-desc-${featureId}`}>{feature.description}</p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n\n          {/* Search and Sort */}\n          <Card className=\"mb-6\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex flex-col md:flex-row gap-4\">\n                <div className=\"flex-1 relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n                  <Input\n                    placeholder=\"Search ready to ship products...\"\n                    className=\"pl-10\"\n                    data-testid=\"input-search\"\n                  />\n                </div>\n                <Select value={sortBy} onValueChange={setSortBy}>\n                  <SelectTrigger className=\"w-full md:w-64\" data-testid=\"select-sort\">\n                    <SelectValue placeholder=\"Sort by\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"best-match\">Best Match</SelectItem>\n                    <SelectItem value=\"price-low\">Price: Low to High</SelectItem>\n                    <SelectItem value=\"price-high\">Price: High to Low</SelectItem>\n                    <SelectItem value=\"moq-low\">MOQ: Low to High</SelectItem>\n                    <SelectItem value=\"shipping-fast\">Fastest Shipping</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Category Badges */}\n          <div className=\"mb-6\">\n            <div className=\"flex flex-wrap gap-2\">\n              <Badge variant=\"outline\" className=\"cursor-pointer hover-elevate px-4 py-1.5\" data-testid=\"badge-category-electronics\">Electronics</Badge>\n              <Badge variant=\"outline\" className=\"cursor-pointer hover-elevate px-4 py-1.5\" data-testid=\"badge-category-fashion\">Fashion</Badge>\n              <Badge variant=\"outline\" className=\"cursor-pointer hover-elevate px-4 py-1.5\" data-testid=\"badge-category-home\">Home & Garden</Badge>\n              <Badge variant=\"outline\" className=\"cursor-pointer hover-elevate px-4 py-1.5\" data-testid=\"badge-category-sports\">Sports</Badge>\n              <Badge variant=\"outline\" className=\"cursor-pointer hover-elevate px-4 py-1.5\" data-testid=\"badge-category-beauty\">Beauty</Badge>\n            </div>\n          </div>\n\n          {/* Results Count */}\n          <div className=\"mb-6\">\n            <p className=\"text-sm text-muted-foreground\">\n              <span className=\"font-semibold text-foreground\">{products.length.toLocaleString()}</span> products ready to ship\n            </p>\n          </div>\n\n          {/* Products Grid */}\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-5\">\n            {products.map((product) => (\n              <div key={product.id} className=\"relative\">\n                <Badge className=\"absolute top-2 left-2 z-10 bg-green-500 hover:bg-green-600 gap-1.5 shadow-md\">\n                  <Truck className=\"w-3 h-3\" />\n                  {product.shippingTime}\n                </Badge>\n                <ProductCard {...product} />\n              </div>\n            ))}\n          </div>\n\n          {/* Load More */}\n          <div className=\"mt-12 text-center\">\n            <Button size=\"lg\" variant=\"outline\" data-testid=\"button-load-more\">\n              Load More Products\n            </Button>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":8806},"client/src/pages/Login.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Mail, Lock, Eye, EyeOff } from \"lucide-react\";\nimport { SiGoogle, SiFacebook, SiLinkedin } from \"react-icons/si\";\n\nexport default function Login() {\n  const [showPassword, setShowPassword] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(\"Login attempt with:\", { email, password });\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1 flex items-center justify-center py-8 sm:py-12 px-4 sm:px-6\">\n        <div className=\"w-full max-w-md\">\n          <Card>\n            <CardHeader className=\"space-y-2 text-center px-4 sm:px-6\">\n              <CardTitle className=\"text-2xl sm:text-3xl font-bold\">Welcome Back</CardTitle>\n              <CardDescription className=\"text-sm sm:text-base\">\n                Sign in to your account to continue\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"px-4 sm:px-6\">\n              <form onSubmit={handleSubmit} className=\"space-y-3 sm:space-y-4\">\n                <div>\n                  <Label htmlFor=\"email\">Email Address</Label>\n                  <div className=\"relative mt-2\">\n                    <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"you@company.com\"\n                      className=\"pl-10\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      required\n                      data-testid=\"input-email\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <div className=\"flex items-center justify-between\">\n                    <Label htmlFor=\"password\">Password</Label>\n                    <Link href=\"/forgot-password\">\n                      <a className=\"text-sm text-primary hover:underline\" data-testid=\"link-forgot-password\">\n                        Forgot password?\n                      </a>\n                    </Link>\n                  </div>\n                  <div className=\"relative mt-2\">\n                    <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n                    <Input\n                      id=\"password\"\n                      type={showPassword ? \"text\" : \"password\"}\n                      placeholder=\"Enter your password\"\n                      className=\"pl-10 pr-10\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      required\n                      data-testid=\"input-password\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowPassword(!showPassword)}\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-muted-foreground hover:text-foreground\"\n                      data-testid=\"button-toggle-password\"\n                    >\n                      {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                    </button>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox id=\"remember\" data-testid=\"checkbox-remember\" />\n                  <Label htmlFor=\"remember\" className=\"text-sm cursor-pointer\">\n                    Remember me for 30 days\n                  </Label>\n                </div>\n\n                <Button type=\"submit\" className=\"w-full\" size=\"lg\" data-testid=\"button-login\">\n                  Sign In\n                </Button>\n              </form>\n\n              <div className=\"mt-4 sm:mt-6\">\n                <div className=\"relative\">\n                  <div className=\"absolute inset-0 flex items-center\">\n                    <Separator />\n                  </div>\n                  <div className=\"relative flex justify-center text-xs uppercase\">\n                    <span className=\"bg-background px-2 text-muted-foreground\">Or continue with</span>\n                  </div>\n                </div>\n\n                <div className=\"mt-4 sm:mt-6 grid grid-cols-3 gap-2 sm:gap-3\">\n                  <Button variant=\"outline\" className=\"w-full\" data-testid=\"button-google-login\">\n                    <SiGoogle className=\"w-4 h-4 sm:w-5 sm:h-5\" />\n                  </Button>\n                  <Button variant=\"outline\" className=\"w-full\" data-testid=\"button-facebook-login\">\n                    <SiFacebook className=\"w-4 h-4 sm:w-5 sm:h-5\" />\n                  </Button>\n                  <Button variant=\"outline\" className=\"w-full\" data-testid=\"button-linkedin-login\">\n                    <SiLinkedin className=\"w-4 h-4 sm:w-5 sm:h-5\" />\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"mt-4 sm:mt-6 text-center text-xs sm:text-sm\">\n                <span className=\"text-muted-foreground\">Don't have an account? </span>\n                <Link href=\"/signup\">\n                  <a className=\"text-primary font-semibold hover:underline\" data-testid=\"link-signup\">\n                    Sign up for free\n                  </a>\n                </Link>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":6081},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5741},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/pages/RFQDetail.tsx":{"content":"import { useState } from \"react\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { \n  MapPin, \n  Calendar, \n  Package, \n  FileText, \n  MessageSquare,\n  TrendingUp,\n  Clock,\n  CheckCircle\n} from \"lucide-react\";\n\nexport default function RFQDetail() {\n  const [quotationText, setQuotationText] = useState(\"\");\n\n  //todo: remove mock functionality\n  const rfqDetails = {\n    id: \"RFQ-2024-001\",\n    title: \"Looking for High-Quality Wireless Earbuds - 10,000 Units\",\n    category: \"Consumer Electronics\",\n    quantity: \"10,000 pieces\",\n    budget: \"$15-20 per unit\",\n    location: \"Los Angeles, USA\",\n    deliveryDate: \"March 15, 2024\",\n    postedDate: \"Jan 10, 2024\",\n    timeRemaining: \"15 days\",\n    description: `We are looking for a reliable supplier for high-quality wireless earbuds with the following specifications:\n\n    - Bluetooth 5.0 or higher\n    - Active Noise Cancellation (ANC)\n    - Battery life: minimum 6 hours per charge\n    - Charging case with USB-C\n    - IPX4 water resistance or better\n    - Custom packaging with our branding\n    \n    Quality certifications required: CE, FCC, RoHS\n    \n    Please include the following in your quotation:\n    1. Unit price for different quantity tiers\n    2. Sample availability and cost\n    3. Production lead time\n    4. Customization options and costs\n    5. Shipping terms (FOB/CIF)`,\n    requirements: [\n      \"Bluetooth 5.0 or higher\",\n      \"Active Noise Cancellation\",\n      \"6+ hours battery life\",\n      \"Custom packaging available\",\n      \"CE, FCC, RoHS certified\"\n    ],\n    buyer: {\n      name: \"TechWorld Distribution\",\n      type: \"Trading Company\",\n      country: \"USA\",\n      responseRate: \"92%\"\n    }\n  };\n\n  const quotations = [\n    {\n      id: 1,\n      supplier: \"AudioTech Pro\",\n      country: \"China\",\n      verified: true,\n      price: \"$16.50-18.00\",\n      moq: \"5,000 units\",\n      leadTime: \"25-30 days\",\n      rating: 4.8,\n      responseTime: \"2 hours\",\n      message: \"We can provide high-quality wireless earbuds meeting all your specifications. We have CE, FCC, and RoHS certifications. Custom packaging is available with MOQ 5,000 units.\",\n      submittedDate: \"2 days ago\"\n    },\n    {\n      id: 2,\n      supplier: \"Global Electronics Mfg\",\n      country: \"China\",\n      verified: true,\n      price: \"$15.80-17.50\",\n      moq: \"10,000 units\",\n      leadTime: \"20-25 days\",\n      rating: 4.9,\n      responseTime: \"1 hour\",\n      message: \"We are a professional manufacturer with 12 years of experience. All certifications available. Free samples for bulk orders. Can customize packaging with your logo.\",\n      submittedDate: \"1 day ago\"\n    },\n    {\n      id: 3,\n      supplier: \"SoundWave Industries\",\n      country: \"Vietnam\",\n      verified: false,\n      price: \"$17.00-19.00\",\n      moq: \"3,000 units\",\n      leadTime: \"30-35 days\",\n      rating: 4.6,\n      responseTime: \"4 hours\",\n      message: \"Quality wireless earbuds with ANC. We can provide samples at $25 each. All required certifications in place.\",\n      submittedDate: \"3 days ago\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"mb-6\">\n            <div className=\"flex items-center gap-2 text-sm text-muted-foreground mb-2\">\n              <span>RFQ</span>\n              <span>/</span>\n              <span>{rfqDetails.category}</span>\n            </div>\n            <div className=\"flex flex-col md:flex-row md:items-start md:justify-between gap-4\">\n              <div>\n                <h1 className=\"text-3xl font-bold mb-3\">{rfqDetails.title}</h1>\n                <div className=\"flex flex-wrap gap-3 text-sm\">\n                  <Badge variant=\"outline\" className=\"gap-1\">\n                    <FileText className=\"w-3 h-3\" />\n                    {rfqDetails.id}\n                  </Badge>\n                  <Badge variant=\"outline\" className=\"gap-1\">\n                    <Calendar className=\"w-3 h-3\" />\n                    Posted {rfqDetails.postedDate}\n                  </Badge>\n                  <Badge className=\"bg-primary gap-1\">\n                    <Clock className=\"w-3 h-3\" />\n                    {rfqDetails.timeRemaining} remaining\n                  </Badge>\n                </div>\n              </div>\n              <Button size=\"lg\" data-testid=\"button-send-quotation\">\n                <MessageSquare className=\"w-4 h-4 mr-2\" />\n                Send Quotation\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            <div className=\"lg:col-span-2 space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>RFQ Details</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-6\">\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                    <div>\n                      <p className=\"text-sm text-muted-foreground mb-1\">Quantity</p>\n                      <p className=\"font-semibold flex items-center gap-2\">\n                        <Package className=\"w-4 h-4\" />\n                        {rfqDetails.quantity}\n                      </p>\n                    </div>\n                    <div>\n                      <p className=\"text-sm text-muted-foreground mb-1\">Target Budget</p>\n                      <p className=\"font-semibold flex items-center gap-2\">\n                        <TrendingUp className=\"w-4 h-4\" />\n                        {rfqDetails.budget}\n                      </p>\n                    </div>\n                    <div>\n                      <p className=\"text-sm text-muted-foreground mb-1\">Delivery Location</p>\n                      <p className=\"font-semibold flex items-center gap-2\">\n                        <MapPin className=\"w-4 h-4\" />\n                        {rfqDetails.location}\n                      </p>\n                    </div>\n                    <div>\n                      <p className=\"text-sm text-muted-foreground mb-1\">Expected Delivery</p>\n                      <p className=\"font-semibold flex items-center gap-2\">\n                        <Calendar className=\"w-4 h-4\" />\n                        {rfqDetails.deliveryDate}\n                      </p>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h3 className=\"font-semibold mb-3\">Description</h3>\n                    <div className=\"whitespace-pre-line text-muted-foreground bg-muted p-4 rounded-lg\">\n                      {rfqDetails.description}\n                    </div>\n                  </div>\n\n                  <div>\n                    <h3 className=\"font-semibold mb-3\">Key Requirements</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n                      {rfqDetails.requirements.map((req, idx) => (\n                        <div key={idx} className=\"flex items-center gap-2 text-sm\">\n                          <CheckCircle className=\"w-4 h-4 text-success\" />\n                          <span>{req}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Tabs defaultValue=\"quotations\">\n                <TabsList>\n                  <TabsTrigger value=\"quotations\" data-testid=\"tab-quotations\">\n                    Quotations ({quotations.length})\n                  </TabsTrigger>\n                  <TabsTrigger value=\"send\" data-testid=\"tab-send\">\n                    Send Quotation\n                  </TabsTrigger>\n                </TabsList>\n\n                <TabsContent value=\"quotations\" className=\"mt-6\">\n                  <div className=\"space-y-4\">\n                    {quotations.map((quote) => (\n                      <Card key={quote.id} data-testid={`quotation-${quote.id}`}>\n                        <CardContent className=\"p-6\">\n                          <div className=\"flex flex-col md:flex-row md:items-start gap-4\">\n                            <Avatar className=\"w-12 h-12\">\n                              <AvatarFallback className=\"bg-primary text-primary-foreground\">\n                                {quote.supplier.substring(0, 2).toUpperCase()}\n                              </AvatarFallback>\n                            </Avatar>\n                            \n                            <div className=\"flex-1\">\n                              <div className=\"flex flex-wrap items-start justify-between gap-2 mb-3\">\n                                <div>\n                                  <h4 className=\"font-semibold text-lg\">{quote.supplier}</h4>\n                                  <div className=\"flex items-center gap-2 text-sm text-muted-foreground mt-1\">\n                                    <MapPin className=\"w-3 h-3\" />\n                                    <span>{quote.country}</span>\n                                    {quote.verified && (\n                                      <Badge className=\"bg-success text-xs\">Verified</Badge>\n                                    )}\n                                  </div>\n                                </div>\n                                <div className=\"text-right\">\n                                  <div className=\"text-2xl font-bold text-primary\">{quote.price}</div>\n                                  <div className=\"text-xs text-muted-foreground\">{quote.submittedDate}</div>\n                                </div>\n                              </div>\n\n                              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mb-4 p-3 bg-muted rounded-lg\">\n                                <div>\n                                  <div className=\"text-xs text-muted-foreground\">MOQ</div>\n                                  <div className=\"font-medium\">{quote.moq}</div>\n                                </div>\n                                <div>\n                                  <div className=\"text-xs text-muted-foreground\">Lead Time</div>\n                                  <div className=\"font-medium\">{quote.leadTime}</div>\n                                </div>\n                                <div>\n                                  <div className=\"text-xs text-muted-foreground\">Response Time</div>\n                                  <div className=\"font-medium\">{quote.responseTime}</div>\n                                </div>\n                              </div>\n\n                              <p className=\"text-muted-foreground mb-4\">{quote.message}</p>\n\n                              <div className=\"flex gap-2\">\n                                <Button data-testid={`button-contact-${quote.id}`}>\n                                  <MessageSquare className=\"w-4 h-4 mr-2\" />\n                                  Contact Supplier\n                                </Button>\n                                <Button variant=\"outline\" data-testid={`button-compare-${quote.id}`}>\n                                  Compare\n                                </Button>\n                              </div>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    ))}\n                  </div>\n                </TabsContent>\n\n                <TabsContent value=\"send\" className=\"mt-6\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>Submit Your Quotation</CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"space-y-4\">\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div>\n                          <Label htmlFor=\"unit-price\">Unit Price (USD)</Label>\n                          <Input id=\"unit-price\" placeholder=\"e.g., 18.50\" className=\"mt-2\" data-testid=\"input-unit-price\" />\n                        </div>\n                        <div>\n                          <Label htmlFor=\"moq\">Minimum Order Quantity</Label>\n                          <Input id=\"moq\" placeholder=\"e.g., 5000 units\" className=\"mt-2\" data-testid=\"input-moq\" />\n                        </div>\n                        <div>\n                          <Label htmlFor=\"lead-time\">Lead Time</Label>\n                          <Input id=\"lead-time\" placeholder=\"e.g., 20-25 days\" className=\"mt-2\" data-testid=\"input-lead-time\" />\n                        </div>\n                        <div>\n                          <Label htmlFor=\"sample-price\">Sample Price (Optional)</Label>\n                          <Input id=\"sample-price\" placeholder=\"e.g., 25.00\" className=\"mt-2\" data-testid=\"input-sample-price\" />\n                        </div>\n                      </div>\n\n                      <div>\n                        <Label htmlFor=\"quotation-details\">Quotation Details</Label>\n                        <Textarea\n                          id=\"quotation-details\"\n                          placeholder=\"Provide detailed information about your product, pricing tiers, certifications, customization options, etc.\"\n                          rows={6}\n                          className=\"mt-2\"\n                          value={quotationText}\n                          onChange={(e) => setQuotationText(e.target.value)}\n                          data-testid=\"textarea-quotation\"\n                        />\n                      </div>\n\n                      <Button className=\"w-full\" size=\"lg\" data-testid=\"button-submit-quotation\">\n                        Submit Quotation\n                      </Button>\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n              </Tabs>\n            </div>\n\n            <div className=\"lg:col-span-1\">\n              <Card className=\"sticky top-24\">\n                <CardHeader>\n                  <CardTitle>Buyer Information</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"flex items-center gap-3\">\n                    <Avatar className=\"w-12 h-12\">\n                      <AvatarFallback className=\"bg-primary/10 text-primary\">TW</AvatarFallback>\n                    </Avatar>\n                    <div>\n                      <h4 className=\"font-semibold\">{rfqDetails.buyer.name}</h4>\n                      <p className=\"text-sm text-muted-foreground\">{rfqDetails.buyer.type}</p>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2 pt-4 border-t\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-muted-foreground\">Location</span>\n                      <span className=\"text-sm font-medium\">{rfqDetails.buyer.country}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-muted-foreground\">Response Rate</span>\n                      <span className=\"text-sm font-medium\">{rfqDetails.buyer.responseRate}</span>\n                    </div>\n                  </div>\n\n                  <Button className=\"w-full\" variant=\"outline\" data-testid=\"button-contact-buyer\">\n                    <MessageSquare className=\"w-4 h-4 mr-2\" />\n                    Contact Buyer\n                  </Button>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":16026},"client/src/pages/Terms.tsx":{"content":"import Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\nexport default function Terms() {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <div className=\"bg-gradient-to-r from-primary/10 to-primary/5 py-12\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <h1 className=\"text-4xl font-bold mb-4\">Terms of Service</h1>\n            <p className=\"text-muted-foreground\">Last updated: January 2024</p>\n          </div>\n        </div>\n\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n          <Card>\n            <CardContent className=\"p-8 prose prose-slate max-w-none\">\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">1. Acceptance of Terms</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  By accessing and using this B2B marketplace platform, you accept and agree to be bound by the terms and provision of this agreement. If you do not agree to abide by the above, please do not use this service.\n                </p>\n              </section>\n\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">2. Use License</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  Permission is granted to temporarily access the materials (information or software) on our platform for personal, non-commercial transitory viewing only. This is the grant of a license, not a transfer of title, and under this license you may not:\n                </p>\n                <ul className=\"list-disc pl-6 text-muted-foreground space-y-2 mb-4\">\n                  <li>Modify or copy the materials</li>\n                  <li>Use the materials for any commercial purpose or for any public display</li>\n                  <li>Attempt to reverse engineer any software contained on the platform</li>\n                  <li>Remove any copyright or other proprietary notations from the materials</li>\n                  <li>Transfer the materials to another person or \"mirror\" the materials on any other server</li>\n                </ul>\n              </section>\n\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">3. Account Registration</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  To access certain features of the platform, you must register for an account. When you register, you agree to:\n                </p>\n                <ul className=\"list-disc pl-6 text-muted-foreground space-y-2 mb-4\">\n                  <li>Provide accurate, current, and complete information</li>\n                  <li>Maintain and promptly update your account information</li>\n                  <li>Maintain the security of your password and accept all risks of unauthorized access</li>\n                  <li>Immediately notify us of any unauthorized use of your account</li>\n                </ul>\n              </section>\n\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">4. Buyer and Supplier Obligations</h2>\n                <h3 className=\"text-xl font-semibold mb-3\">4.1 Buyer Obligations</h3>\n                <ul className=\"list-disc pl-6 text-muted-foreground space-y-2 mb-4\">\n                  <li>Provide accurate product requirements and order information</li>\n                  <li>Make payments according to agreed terms</li>\n                  <li>Respond to supplier communications in a timely manner</li>\n                  <li>Inspect goods upon receipt and report any issues promptly</li>\n                </ul>\n\n                <h3 className=\"text-xl font-semibold mb-3\">4.2 Supplier Obligations</h3>\n                <ul className=\"list-disc pl-6 text-muted-foreground space-y-2 mb-4\">\n                  <li>Provide accurate product descriptions and images</li>\n                  <li>Honor quoted prices and delivery timelines</li>\n                  <li>Ship products according to agreed specifications</li>\n                  <li>Maintain valid business licenses and certifications</li>\n                  <li>Respond to inquiries within 48 hours</li>\n                </ul>\n              </section>\n\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">5. Trade Assurance</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  Our Trade Assurance program protects buyers' payments and ensures suppliers fulfill orders according to agreed terms. Key provisions include:\n                </p>\n                <ul className=\"list-disc pl-6 text-muted-foreground space-y-2 mb-4\">\n                  <li>Product quality protection</li>\n                  <li>On-time shipment protection</li>\n                  <li>Dispute resolution services</li>\n                  <li>Refund policy for non-compliance</li>\n                </ul>\n              </section>\n\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">6. Prohibited Activities</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  You may not use the platform to:\n                </p>\n                <ul className=\"list-disc pl-6 text-muted-foreground space-y-2 mb-4\">\n                  <li>Engage in fraudulent activities</li>\n                  <li>List counterfeit or illegal products</li>\n                  <li>Manipulate reviews or ratings</li>\n                  <li>Harass or abuse other users</li>\n                  <li>Violate intellectual property rights</li>\n                  <li>Circumvent platform fees or payments</li>\n                </ul>\n              </section>\n\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">7. Limitation of Liability</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  In no event shall our platform or its suppliers be liable for any damages (including, without limitation, damages for loss of data or profit, or due to business interruption) arising out of the use or inability to use the materials on our platform.\n                </p>\n              </section>\n\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">8. Governing Law</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  These terms and conditions are governed by and construed in accordance with the laws and you irrevocably submit to the exclusive jurisdiction of the courts in that location.\n                </p>\n              </section>\n\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">9. Changes to Terms</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  We reserve the right to modify these terms at any time. We will notify users of any material changes via email or platform notification. Continued use of the platform after changes constitutes acceptance of the modified terms.\n                </p>\n              </section>\n\n              <section>\n                <h2 className=\"text-2xl font-bold mb-4\">10. Contact Information</h2>\n                <p className=\"text-muted-foreground\">\n                  If you have any questions about these Terms of Service, please contact us at:\n                  <br />\n                  Email: legal@b2bmarketplace.com\n                  <br />\n                  Phone: +1 (234) 567-8900\n                </p>\n              </section>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":7774},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/StatsSection.tsx":{"content":"import { Users, Package, Globe, TrendingUp } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\nexport default function StatsSection() {\n  const stats = [\n    { \n      label: \"Active Suppliers\", \n      value: \"200K+\", \n      description: \"Verified manufacturers worldwide\",\n      icon: Users,\n      color: \"from-gray-500 to-gray-600\"\n    },\n    { \n      label: \"Products\", \n      value: \"50M+\", \n      description: \"Across 40+ categories\",\n      icon: Package,\n      color: \"from-purple-500 to-pink-500\"\n    },\n    { \n      label: \"Countries\", \n      value: \"190+\", \n      description: \"Global market reach\",\n      icon: Globe,\n      color: \"from-green-500 to-emerald-500\"\n    },\n    { \n      label: \"Buyers\", \n      value: \"10M+\", \n      description: \"Active monthly users\",\n      icon: TrendingUp,\n      color: \"from-red-500 to-red-600\"\n    },\n  ];\n\n  return (\n    <section className=\"py-20 bg-background\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold mb-4 text-foreground\">\n            Trusted by Millions Worldwide\n          </h2>\n          <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n            Join the world's largest B2B marketplace and connect with verified suppliers and buyers globally\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 md:gap-8\">\n          {stats.map((stat, index) => {\n            const Icon = stat.icon;\n            return (\n              <Card key={index} className=\"group relative overflow-hidden hover-elevate transition-all duration-300 hover:-translate-y-1\" data-testid={`stat-${stat.label.toLowerCase().replace(/\\s+/g, '-')}`}>\n                <CardContent className=\"p-6 sm:p-8 text-center\">\n                  <div className=\"space-y-4\">\n                    <div className={`w-14 h-14 sm:w-16 sm:h-16 mx-auto rounded-lg bg-gradient-to-r ${stat.color} flex items-center justify-center group-hover:scale-110 transition-transform duration-300`}>\n                      <Icon className=\"w-7 h-7 sm:w-8 sm:h-8 text-white\" />\n                    </div>\n                    \n                    <div className=\"space-y-2\">\n                      <div className=\"text-3xl sm:text-4xl md:text-5xl font-bold text-primary\" data-testid={`text-stat-value-${index}`}>\n                        {stat.value}\n                      </div>\n                      <div className=\"font-bold text-base sm:text-lg text-foreground\" data-testid={`text-stat-label-${index}`}>\n                        {stat.label}\n                      </div>\n                      <div className=\"text-xs sm:text-sm text-muted-foreground leading-relaxed\" data-testid={`text-stat-desc-${index}`}>\n                        {stat.description}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* Hover Effect */}\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-primary/5 to-gray-400/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3278},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/AdminSidebar.tsx":{"content":"import { \n  LayoutDashboard, \n  Package, \n  FolderTree, \n  Users, \n  Building2, \n  ShoppingCart,\n  Upload,\n  Settings\n} from \"lucide-react\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarHeader,\n} from \"@/components/ui/sidebar\";\nimport { Link, useLocation } from \"wouter\";\n\nconst adminMenuItems = [\n  {\n    title: \"Dashboard\",\n    url: \"/admin\",\n    icon: LayoutDashboard,\n  },\n  {\n    title: \"Products\",\n    url: \"/admin/products\",\n    icon: Package,\n  },\n  {\n    title: \"Bulk Upload\",\n    url: \"/admin/bulk-upload\",\n    icon: Upload,\n  },\n  {\n    title: \"Categories\",\n    url: \"/admin/categories\",\n    icon: FolderTree,\n  },\n  {\n    title: \"Orders\",\n    url: \"/admin/orders\",\n    icon: ShoppingCart,\n  },\n  {\n    title: \"Customers\",\n    url: \"/admin/customers\",\n    icon: Users,\n  },\n  {\n    title: \"Suppliers\",\n    url: \"/admin/suppliers\",\n    icon: Building2,\n  },\n];\n\nexport function AdminSidebar() {\n  const [location] = useLocation();\n  \n  return (\n    <Sidebar>\n      <SidebarHeader className=\"p-4\">\n        <h2 className=\"text-lg font-semibold\">Admin Panel</h2>\n      </SidebarHeader>\n      <SidebarContent>\n        <SidebarGroup>\n          <SidebarGroupLabel>Management</SidebarGroupLabel>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {adminMenuItems.map((item) => (\n                <SidebarMenuItem key={item.title}>\n                  <SidebarMenuButton asChild isActive={location === item.url}>\n                    <Link href={item.url} data-testid={`link-admin-${item.title.toLowerCase().replace(' ', '-')}`}>\n                      <item.icon />\n                      <span>{item.title}</span>\n                    </Link>\n                  </SidebarMenuButton>\n                </SidebarMenuItem>\n              ))}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n      </SidebarContent>\n    </Sidebar>\n  );\n}\n","size_bytes":2000},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/components/RFQCard.tsx":{"content":"import { Clock, MapPin, MessageSquare } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\n\ninterface RFQCardProps {\n  id: string;\n  title: string;\n  quantity: string;\n  budget?: string;\n  location: string;\n  timeRemaining: string;\n  quotations: number;\n  category: string;\n}\n\nexport default function RFQCard({\n  id,\n  title,\n  quantity,\n  budget,\n  location,\n  timeRemaining,\n  quotations,\n  category,\n}: RFQCardProps) {\n  return (\n    <Card className=\"group hover-elevate transition-all duration-300 hover:shadow-xl\" data-testid={`card-rfq-${id}`}>\n      <CardContent className=\"p-4 sm:p-6\">\n        <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-start gap-2 sm:gap-4 mb-3 sm:mb-4\">\n          <Link href={`/rfq/${id}`} className=\"flex-1\">\n            <h3 className=\"font-semibold text-base sm:text-lg line-clamp-2 hover:text-primary transition-colors\" data-testid={`text-rfq-title-${id}`}>\n              {title}\n            </h3>\n          </Link>\n          <Badge className=\"flex-shrink-0 self-start text-xs\" data-testid={`badge-category-${id}`}>{category}</Badge>\n        </div>\n        \n        <div className=\"space-y-2 mb-3 sm:mb-4\">\n          <div className=\"flex justify-between text-xs sm:text-sm\">\n            <span className=\"text-muted-foreground\">Quantity:</span>\n            <span className=\"font-medium\" data-testid={`text-quantity-${id}`}>{quantity}</span>\n          </div>\n          {budget && (\n            <div className=\"flex justify-between text-xs sm:text-sm\">\n              <span className=\"text-muted-foreground\">Target Price:</span>\n              <span className=\"font-medium text-primary\" data-testid={`text-budget-${id}`}>{budget}</span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-xs sm:text-sm text-muted-foreground\">\n            <MapPin className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n            <span data-testid={`text-location-${id}`}>{location}</span>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-col sm:flex-row sm:items-center justify-between pt-3 sm:pt-4 border-t border-border gap-3 sm:gap-0\">\n          <div className=\"flex items-center gap-3 sm:gap-4 text-xs sm:text-sm\">\n            <div className=\"flex items-center gap-1 sm:gap-1.5 text-muted-foreground\">\n              <Clock className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n              <span data-testid={`text-time-${id}`}>{timeRemaining}</span>\n            </div>\n            <div className=\"flex items-center gap-1 sm:gap-1.5 text-muted-foreground\">\n              <MessageSquare className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n              <span data-testid={`text-quotations-${id}`}>{quotations} quotes</span>\n            </div>\n          </div>\n          <Button size=\"sm\" className=\"text-xs sm:text-sm h-8 sm:h-9\" data-testid={`button-send-quote-${id}`}>Send Quote</Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":3052},"client/src/components/examples/ProductCard.tsx":{"content":"import ProductCard from '../ProductCard';\n\nexport default function ProductCardExample() {\n  return (\n    <div className=\"p-4 max-w-sm\">\n      <ProductCard\n        id=\"1\"\n        image=\"https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=400&h=400&fit=crop\"\n        name=\"Wireless Bluetooth Headphones with Noise Cancellation\"\n        priceRange=\"$25.00-$35.00 /piece\"\n        moq=\"100 pieces\"\n        supplierName=\"TechPro Electronics\"\n        supplierCountry=\"China\"\n        responseRate=\"98%\"\n        verified={true}\n        tradeAssurance={true}\n      />\n    </div>\n  );\n}\n","size_bytes":587},"client/src/components/Footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Globe, Mail, Phone } from \"lucide-react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-card border-t mt-auto\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 sm:py-12\">\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-6 sm:gap-8\">\n          <div className=\"lg:col-span-2\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <div className=\"w-8 h-8 sm:w-10 sm:h-10 bg-primary rounded-lg flex items-center justify-center\">\n                <span className=\"text-white font-bold text-lg sm:text-xl\">G</span>\n              </div>\n              <h3 className=\"text-lg sm:text-xl font-bold\">Global Trade Hub</h3>\n            </div>\n            <p className=\"text-xs sm:text-sm text-muted-foreground mb-4 sm:mb-6 max-w-md\">\n              The leading B2B marketplace connecting suppliers and buyers worldwide. \n              Get competitive quotes, bulk pricing, and trade assurance.\n            </p>\n            <div className=\"space-y-2 text-xs sm:text-sm text-muted-foreground\">\n              <div className=\"flex items-center gap-2\">\n                <Globe className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                <span>190+ Countries Served</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Mail className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                <span>support@globaltradehub.com</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Phone className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                <span>+1 (555) 123-4567</span>\n              </div>\n            </div>\n          </div>\n          \n          <div>\n            <h4 className=\"font-semibold mb-3 sm:mb-4 text-sm sm:text-base\">For Buyers</h4>\n            <ul className=\"space-y-2 text-xs sm:text-sm text-muted-foreground\">\n              <li><Link href=\"/products\" className=\"hover:text-foreground\" data-testid=\"link-footer-products\">Products</Link></li>\n              <li><Link href=\"/find-suppliers\" className=\"hover:text-foreground\" data-testid=\"link-footer-suppliers\">Find Suppliers</Link></li>\n              <li><Link href=\"/rfq/create\" className=\"hover:text-foreground\" data-testid=\"link-footer-rfq\">Post RFQ</Link></li>\n              <li><Link href=\"/buyer-protection\" className=\"hover:text-foreground\" data-testid=\"link-footer-protection\">Buyer Protection</Link></li>\n            </ul>\n          </div>\n          \n          <div>\n            <h4 className=\"font-semibold mb-3 sm:mb-4 text-sm sm:text-base\">For Suppliers</h4>\n            <ul className=\"space-y-2 text-xs sm:text-sm text-muted-foreground\">\n              <li><Link href=\"/dashboard/supplier\" className=\"hover:text-foreground\" data-testid=\"link-footer-sell\">Start Selling</Link></li>\n              <li><Link href=\"/dashboard/supplier\" className=\"hover:text-foreground\" data-testid=\"link-footer-membership\">Membership</Link></li>\n              <li><Link href=\"/dashboard/supplier\" className=\"hover:text-foreground\" data-testid=\"link-footer-verification\">Get Verified</Link></li>\n              <li><Link href=\"/dashboard/supplier\" className=\"hover:text-foreground\" data-testid=\"link-footer-advertising\">Advertising</Link></li>\n            </ul>\n          </div>\n          \n          <div>\n            <h4 className=\"font-semibold mb-3 sm:mb-4 text-sm sm:text-base\">Support</h4>\n            <ul className=\"space-y-2 text-xs sm:text-sm text-muted-foreground\">\n              <li><Link href=\"/help\" className=\"hover:text-foreground\" data-testid=\"link-footer-help\">Help Center</Link></li>\n              <li><Link href=\"/contact\" className=\"hover:text-foreground\" data-testid=\"link-footer-contact\">Contact Us</Link></li>\n              <li><Link href=\"/terms\" className=\"hover:text-foreground\" data-testid=\"link-footer-terms\">Terms of Use</Link></li>\n              <li><Link href=\"/privacy\" className=\"hover:text-foreground\" data-testid=\"link-footer-privacy\">Privacy Policy</Link></li>\n            </ul>\n          </div>\n        </div>\n        \n        <div className=\"border-t border-border mt-6 sm:mt-10 pt-6 sm:pt-8 flex flex-col md:flex-row justify-between items-center gap-3 sm:gap-4\">\n          <p className=\"text-xs sm:text-sm text-muted-foreground text-center md:text-left\">© 2024 Global Trade Hub. All rights reserved.</p>\n          <div className=\"flex flex-wrap justify-center gap-4 sm:gap-6 text-xs sm:text-sm text-muted-foreground\">\n            <Link href=\"/sitemap\" className=\"hover:text-foreground transition-colors\">Sitemap</Link>\n            <Link href=\"/accessibility\" className=\"hover:text-foreground transition-colors\">Accessibility</Link>\n            <Link href=\"/cookies\" className=\"hover:text-foreground transition-colors\">Cookie Policy</Link>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":4879},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/pages/Home.tsx":{"content":"import { useEffect } from \"react\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport HeroSection from \"@/components/HeroSection\";\nimport CategoryGrid from \"@/components/CategoryGrid\";\nimport FeaturedProducts from \"@/components/FeaturedProducts\";\nimport StatsSection from \"@/components/StatsSection\";\nimport RFQSection from \"@/components/RFQSection\";\nimport TopSuppliers from \"@/components/TopSuppliers\";\nimport { Button } from \"@/components/ui/button\";\nimport { ShieldCheck, Award } from \"lucide-react\";\nimport { useLoading } from \"@/contexts/LoadingContext\";\n\nexport default function Home() {\n  const { setLoading } = useLoading();\n\n  useEffect(() => {\n    // Show loader when component mounts\n    setLoading(true, \"Loading Global Trade Hub...\");\n    \n    // Simulate loading time\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 1200);\n\n    return () => clearTimeout(timer);\n  }, []); // Empty dependency array - only run once on mount\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <HeroSection />\n        <CategoryGrid />\n        <FeaturedProducts />\n        <StatsSection />\n        \n        <section className=\"py-20 bg-gradient-to-br from-gray-800 via-gray-700 to-gray-600 relative overflow-hidden\">\n          {/* Background Elements */}\n          <div className=\"absolute inset-0\">\n            <div className=\"absolute top-10 left-10 w-72 h-72 bg-white/5 rounded-full blur-3xl\" />\n            <div className=\"absolute bottom-10 right-10 w-96 h-96 bg-gray-400/10 rounded-full blur-3xl\" />\n          </div>\n          \n          <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center space-y-12\">\n              <div className=\"space-y-6\">\n                <div className=\"inline-flex items-center gap-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-full px-6 py-3 text-sm text-white/90\">\n                  <ShieldCheck className=\"w-5 h-5\" />\n                  <span>Trade Assurance Protection</span>\n                </div>\n                \n                <h2 className=\"text-4xl md:text-6xl font-bold text-white leading-tight\">\n                  Trade with <span className=\"bg-gradient-to-r from-gray-200 to-gray-300 bg-clip-text text-transparent\">Confidence</span>\n                </h2>\n                \n                <p className=\"text-xl md:text-2xl text-white/90 max-w-3xl mx-auto leading-relaxed\">\n                  Our Trade Assurance protects your orders from payment to delivery. \n                  Get refunds for orders that don't ship on time or meet quality requirements.\n                </p>\n              </div>\n\n              <div className=\"grid md:grid-cols-2 gap-8 max-w-4xl mx-auto\">\n                <div className=\"bg-white/10 backdrop-blur-xl border border-white/20 rounded-2xl p-8 hover:bg-white/20 transition-all duration-300\">\n                  <div className=\"flex items-center gap-4 mb-4\">\n                    <div className=\"w-12 h-12 bg-gradient-to-r from-green-400 to-emerald-400 rounded-xl flex items-center justify-center\">\n                      <ShieldCheck className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <h3 className=\"text-xl font-bold text-white\">Secure Payment</h3>\n                  </div>\n                  <p className=\"text-white/80 leading-relaxed\">\n                    Your payments are protected throughout the entire transaction process with our secure payment system.\n                  </p>\n                </div>\n                \n                <div className=\"bg-white/10 backdrop-blur-xl border border-white/20 rounded-2xl p-8 hover:bg-white/20 transition-all duration-300\">\n                  <div className=\"flex items-center gap-4 mb-4\">\n                    <div className=\"w-12 h-12 bg-gradient-to-r from-gray-600 to-gray-700 rounded-xl flex items-center justify-center\">\n                      <Award className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <h3 className=\"text-xl font-bold text-white\">Quality Guarantee</h3>\n                  </div>\n                  <p className=\"text-white/80 leading-relaxed\">\n                    We ensure product quality meets your specifications with our comprehensive quality assurance program.\n                  </p>\n                </div>\n              </div>\n              \n              <div className=\"pt-8\">\n                <Button size=\"lg\" variant=\"outline\" className=\"h-14 px-8 bg-white/10 border-white/30 text-white hover:bg-white/20 backdrop-blur-sm shadow-lg hover:shadow-xl transition-all duration-300 group\" data-testid=\"button-learn-trade-assurance\">\n                  Learn More About Trade Assurance\n                  <Award className=\"w-4 h-4 ml-2 group-hover:scale-110 transition-transform\" />\n                </Button>\n              </div>\n            </div>\n          </div>\n        </section>\n        \n        <RFQSection />\n        <TopSuppliers />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":5076},"client/src/components/examples/SupplierCard.tsx":{"content":"import SupplierCard from '../SupplierCard';\n\nexport default function SupplierCardExample() {\n  return (\n    <div className=\"p-4 max-w-md\">\n      <SupplierCard\n        id=\"1\"\n        logo=\"https://images.unsplash.com/photo-1560179707-f14e90ef3623?w=200&h=200&fit=crop\"\n        name=\"Global Electronics Manufacturing Co.\"\n        location=\"Shenzhen, China\"\n        yearsInBusiness={12}\n        rating={4.8}\n        responseRate=\"95%\"\n        mainProducts={[\"Headphones\", \"Speakers\", \"Chargers\", \"Cables\"]}\n        verified={true}\n        goldSupplier={true}\n      />\n    </div>\n  );\n}\n","size_bytes":583},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/pages/admin/AdminDashboard.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Package, ShoppingCart, Users, Building2, DollarSign } from \"lucide-react\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\n\nexport default function AdminDashboard() {\n  const { data: analytics, isLoading } = useQuery<{\n    totalProducts: number;\n    totalOrders: number;\n    totalCustomers: number;\n    totalSuppliers: number;\n    totalRevenue: number;\n    recentOrders: any[];\n  }>({\n    queryKey: [\"/api/analytics\"],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"p-8\">\n        <h1 className=\"text-3xl font-bold mb-8\">Dashboard</h1>\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-5 mb-8\">\n          {[...Array(5)].map((_, i) => (\n            <Card key={i}>\n              <CardHeader>\n                <Skeleton className=\"h-4 w-20\" />\n              </CardHeader>\n              <CardContent>\n                <Skeleton className=\"h-8 w-16\" />\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  const stats = [\n    {\n      title: \"Total Products\",\n      value: analytics?.totalProducts || 0,\n      icon: Package,\n    },\n    {\n      title: \"Total Orders\",\n      value: analytics?.totalOrders || 0,\n      icon: ShoppingCart,\n    },\n    {\n      title: \"Total Customers\",\n      value: analytics?.totalCustomers || 0,\n      icon: Users,\n    },\n    {\n      title: \"Total Suppliers\",\n      value: analytics?.totalSuppliers || 0,\n      icon: Building2,\n    },\n    {\n      title: \"Total Revenue\",\n      value: `$${analytics?.totalRevenue?.toFixed(2) || '0.00'}`,\n      icon: DollarSign,\n    },\n  ];\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'delivered': return 'default';\n      case 'processing': return 'secondary';\n      case 'shipped': return 'outline';\n      case 'pending': return 'secondary';\n      case 'cancelled': return 'destructive';\n      default: return 'default';\n    }\n  };\n\n  return (\n    <div className=\"p-8\">\n      <h1 className=\"text-3xl font-bold mb-8\" data-testid=\"text-dashboard-title\">Dashboard</h1>\n      \n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-5 mb-8\">\n        {stats.map((stat) => (\n          <Card key={stat.title} data-testid={`card-stat-${stat.title.toLowerCase().replace(' ', '-')}`}>\n            <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">{stat.title}</CardTitle>\n              <stat.icon className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\" data-testid={`text-stat-${stat.title.toLowerCase().replace(' ', '-')}`}>\n                {stat.value}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {analytics?.recentOrders && analytics.recentOrders.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle>Recent Orders</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Order Number</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead>Amount</TableHead>\n                  <TableHead>Date</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {analytics.recentOrders.map((order: any) => (\n                  <TableRow key={order.id} data-testid={`row-order-${order.id}`}>\n                    <TableCell className=\"font-medium\" data-testid={`text-order-number-${order.id}`}>\n                      {order.orderNumber}\n                    </TableCell>\n                    <TableCell>\n                      <Badge variant={getStatusColor(order.status)} data-testid={`badge-status-${order.id}`}>\n                        {order.status}\n                      </Badge>\n                    </TableCell>\n                    <TableCell data-testid={`text-amount-${order.id}`}>\n                      ${parseFloat(order.totalAmount).toFixed(2)}\n                    </TableCell>\n                    <TableCell data-testid={`text-date-${order.id}`}>\n                      {new Date(order.createdAt).toLocaleDateString()}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n","size_bytes":4732},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/examples/Footer.tsx":{"content":"import Footer from '../Footer';\n\nexport default function FooterExample() {\n  return <Footer />;\n}\n","size_bytes":98},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(`\n      after:content-[''] after:block after:absolute after:inset-0 after:rounded-full after:pointer-events-none after:border after:border-black/10 dark:after:border-white/10\n      relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full`,\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1592},"client/src/pages/Privacy.tsx":{"content":"import Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\nexport default function Privacy() {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <div className=\"bg-gradient-to-r from-primary/10 to-primary/5 py-12\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <h1 className=\"text-4xl font-bold mb-4\">Privacy Policy</h1>\n            <p className=\"text-muted-foreground\">Last updated: January 2024</p>\n          </div>\n        </div>\n\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n          <Card>\n            <CardContent className=\"p-8 prose prose-slate max-w-none\">\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">1. Information We Collect</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  We collect information that you provide directly to us, including:\n                </p>\n                <ul className=\"list-disc pl-6 text-muted-foreground space-y-2 mb-4\">\n                  <li><strong>Account Information:</strong> Name, email address, company name, business type, phone number</li>\n                  <li><strong>Business Information:</strong> Business license, tax ID, certifications, factory address</li>\n                  <li><strong>Transaction Information:</strong> Order details, payment information, shipping addresses</li>\n                  <li><strong>Communication Data:</strong> Messages, inquiries, RFQs, and correspondence with other users</li>\n                  <li><strong>Usage Data:</strong> Information about how you use our platform, including browsing history and search queries</li>\n                </ul>\n              </section>\n\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">2. How We Use Your Information</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  We use the information we collect to:\n                </p>\n                <ul className=\"list-disc pl-6 text-muted-foreground space-y-2 mb-4\">\n                  <li>Provide, maintain, and improve our services</li>\n                  <li>Process transactions and send related information</li>\n                  <li>Verify business credentials and maintain platform integrity</li>\n                  <li>Send you technical notices, updates, and support messages</li>\n                  <li>Respond to your inquiries and provide customer service</li>\n                  <li>Monitor and analyze trends, usage, and activities</li>\n                  <li>Detect, prevent, and address fraud and security issues</li>\n                  <li>Personalize and improve user experience</li>\n                </ul>\n              </section>\n\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">3. Information Sharing and Disclosure</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  We may share your information in the following situations:\n                </p>\n                \n                <h3 className=\"text-xl font-semibold mb-3\">3.1 With Other Users</h3>\n                <p className=\"text-muted-foreground mb-4\">\n                  When you use our platform, certain information is shared with other users, including your company name, products, and contact information visible on your public profile.\n                </p>\n\n                <h3 className=\"text-xl font-semibold mb-3\">3.2 With Service Providers</h3>\n                <p className=\"text-muted-foreground mb-4\">\n                  We may share your information with third-party service providers who perform services on our behalf, such as payment processing, data analysis, email delivery, and customer service.\n                </p>\n\n                <h3 className=\"text-xl font-semibold mb-3\">3.3 For Legal Reasons</h3>\n                <p className=\"text-muted-foreground mb-4\">\n                  We may disclose your information if required to do so by law or in response to valid requests by public authorities.\n                </p>\n              </section>\n\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">4. Data Security</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  We implement appropriate technical and organizational measures to protect your personal information, including:\n                </p>\n                <ul className=\"list-disc pl-6 text-muted-foreground space-y-2 mb-4\">\n                  <li>SSL encryption for data transmission</li>\n                  <li>Secure data storage with access controls</li>\n                  <li>Regular security audits and vulnerability assessments</li>\n                  <li>Employee training on data protection</li>\n                  <li>Incident response procedures</li>\n                </ul>\n              </section>\n\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">5. Your Rights and Choices</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  You have the following rights regarding your personal information:\n                </p>\n                <ul className=\"list-disc pl-6 text-muted-foreground space-y-2 mb-4\">\n                  <li><strong>Access:</strong> Request access to your personal information</li>\n                  <li><strong>Correction:</strong> Request correction of inaccurate information</li>\n                  <li><strong>Deletion:</strong> Request deletion of your information (subject to legal requirements)</li>\n                  <li><strong>Data Portability:</strong> Request a copy of your data in a machine-readable format</li>\n                  <li><strong>Opt-Out:</strong> Unsubscribe from marketing communications</li>\n                  <li><strong>Cookie Preferences:</strong> Manage cookie settings through your browser</li>\n                </ul>\n              </section>\n\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">6. International Data Transfers</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  Your information may be transferred to and processed in countries other than your country of residence. We ensure appropriate safeguards are in place to protect your information in accordance with this Privacy Policy.\n                </p>\n              </section>\n\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">7. Data Retention</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  We retain your information for as long as necessary to provide our services and comply with legal obligations. When you close your account, we will delete or anonymize your information unless we are required to retain it for legal, tax, or regulatory purposes.\n                </p>\n              </section>\n\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">8. Cookies and Tracking Technologies</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  We use cookies and similar tracking technologies to collect and track information about your usage of our platform. You can control cookies through your browser settings.\n                </p>\n              </section>\n\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">9. Children's Privacy</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  Our platform is not intended for children under 18. We do not knowingly collect personal information from children. If you believe we have collected information from a child, please contact us immediately.\n                </p>\n              </section>\n\n              <section className=\"mb-8\">\n                <h2 className=\"text-2xl font-bold mb-4\">10. Changes to This Policy</h2>\n                <p className=\"text-muted-foreground mb-4\">\n                  We may update this Privacy Policy from time to time. We will notify you of any material changes by posting the new policy on this page and updating the \"Last updated\" date.\n                </p>\n              </section>\n\n              <section>\n                <h2 className=\"text-2xl font-bold mb-4\">11. Contact Us</h2>\n                <p className=\"text-muted-foreground\">\n                  If you have any questions about this Privacy Policy, please contact us at:\n                  <br />\n                  Email: privacy@b2bmarketplace.com\n                  <br />\n                  Phone: +1 (234) 567-8900\n                  <br />\n                  Address: 123 Business Avenue, New York, NY 10001\n                </p>\n              </section>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":9047},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1202},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"client/src/contexts/LoadingContext.tsx":{"content":"import { createContext, useContext, useState, useCallback, ReactNode } from \"react\";\n\ninterface LoadingContextType {\n  isLoading: boolean;\n  loadingMessage: string;\n  showProgress: boolean;\n  progress: number;\n  setLoading: (loading: boolean, message?: string) => void;\n  setProgress: (progress: number) => void;\n  setLoadingWithProgress: (loading: boolean, message?: string, showProgress?: boolean) => void;\n}\n\nconst LoadingContext = createContext<LoadingContextType | undefined>(undefined);\n\nexport function useLoading() {\n  const context = useContext(LoadingContext);\n  if (context === undefined) {\n    throw new Error(\"useLoading must be used within a LoadingProvider\");\n  }\n  return context;\n}\n\ninterface LoadingProviderProps {\n  children: ReactNode;\n}\n\nexport function LoadingProvider({ children }: LoadingProviderProps) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState(\"Loading...\");\n  const [showProgress, setShowProgress] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  const setLoading = useCallback((loading: boolean, message: string = \"Loading...\") => {\n    setIsLoading(loading);\n    setLoadingMessage(message);\n    if (!loading) {\n      setShowProgress(false);\n      setProgress(0);\n    }\n  }, []);\n\n  const setLoadingWithProgress = useCallback((\n    loading: boolean, \n    message: string = \"Loading...\", \n    showProgressBar: boolean = false\n  ) => {\n    setIsLoading(loading);\n    setLoadingMessage(message);\n    setShowProgress(showProgressBar);\n    if (!loading) {\n      setProgress(0);\n    }\n  }, []);\n\n  const value: LoadingContextType = {\n    isLoading,\n    loadingMessage,\n    showProgress,\n    progress,\n    setLoading,\n    setProgress,\n    setLoadingWithProgress,\n  };\n\n  return (\n    <LoadingContext.Provider value={value}>\n      {children}\n    </LoadingContext.Provider>\n  );\n}\n","size_bytes":1887},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/PageWrapper.tsx":{"content":"import { useEffect, ReactNode } from \"react\";\nimport { useLoading } from \"@/contexts/LoadingContext\";\n\ninterface PageWrapperProps {\n  children: ReactNode;\n  loadingMessage?: string;\n  loadingTime?: number;\n  showProgress?: boolean;\n}\n\nexport default function PageWrapper({ \n  children, \n  loadingMessage = \"Loading...\", \n  loadingTime = 800,\n  showProgress = false \n}: PageWrapperProps) {\n  const { setLoading, setLoadingWithProgress } = useLoading();\n\n  useEffect(() => {\n    if (showProgress) {\n      setLoadingWithProgress(true, loadingMessage, true);\n      \n      // Simulate progress\n      let progress = 0;\n      const progressInterval = setInterval(() => {\n        progress += Math.random() * 15;\n        if (progress >= 90) {\n          clearInterval(progressInterval);\n        }\n      }, 100);\n\n      const timer = setTimeout(() => {\n        clearInterval(progressInterval);\n        setLoading(false);\n      }, loadingTime);\n\n      return () => {\n        clearTimeout(timer);\n        clearInterval(progressInterval);\n      };\n    } else {\n      setLoading(true, loadingMessage);\n      \n      const timer = setTimeout(() => {\n        setLoading(false);\n      }, loadingTime);\n\n      return () => clearTimeout(timer);\n    }\n  }, [setLoading, setLoadingWithProgress, loadingMessage, loadingTime, showProgress]);\n\n  return <>{children}</>;\n}\n","size_bytes":1346},"client/src/pages/Products.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport PageHeader from \"@/components/PageHeader\";\nimport ProductCard from \"@/components/ProductCard\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Label } from \"@/components/ui/label\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useLoading } from \"@/contexts/LoadingContext\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport { SlidersHorizontal, Search, X } from \"lucide-react\";\n\nexport default function Products() {\n  const { setLoading } = useLoading();\n  const [priceRange, setPriceRange] = useState([0, 1000]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  useEffect(() => {\n    setLoading(true, \"Loading Products...\");\n    \n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  const products = [\n    {\n      id: \"1\",\n      image: \"https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=400&h=400&fit=crop\",\n      name: \"Premium Wireless Headphones\",\n      priceRange: \"$25.00-$35.00 /piece\",\n      moq: \"100 pieces\",\n      supplierName: \"AudioTech Pro\",\n      supplierCountry: \"China\",\n      responseRate: \"98%\",\n      verified: true,\n      tradeAssurance: true,\n    },\n    {\n      id: \"2\",\n      image: \"https://images.unsplash.com/photo-1523275335684-37898b6baf30?w=400&h=400&fit=crop\",\n      name: \"Classic Analog Wristwatch\",\n      priceRange: \"$15.00-$22.00 /piece\",\n      moq: \"200 pieces\",\n      supplierName: \"TimeKeeper Industries\",\n      supplierCountry: \"Hong Kong\",\n      responseRate: \"95%\",\n      verified: true,\n    },\n    {\n      id: \"3\",\n      image: \"https://images.unsplash.com/photo-1572635196237-14b3f281503f?w=400&h=400&fit=crop\",\n      name: \"Designer Sunglasses UV Protection\",\n      priceRange: \"$8.00-$12.00 /piece\",\n      moq: \"500 pieces\",\n      supplierName: \"Vision Plus\",\n      supplierCountry: \"Taiwan\",\n      responseRate: \"92%\",\n      tradeAssurance: true,\n    },\n    {\n      id: \"4\",\n      image: \"https://images.unsplash.com/photo-1491553895911-0055eca6402d?w=400&h=400&fit=crop\",\n      name: \"Casual Canvas Sneakers\",\n      priceRange: \"$12.00-$18.00 /pair\",\n      moq: \"300 pairs\",\n      supplierName: \"FootWear Global\",\n      supplierCountry: \"Vietnam\",\n      responseRate: \"97%\",\n      verified: true,\n      tradeAssurance: true,\n    },\n    {\n      id: \"5\",\n      image: \"https://images.unsplash.com/photo-1526170375885-4d8ecf77b99f?w=400&h=400&fit=crop\",\n      name: \"Smart Fitness Tracker Watch\",\n      priceRange: \"$30.00-$45.00 /piece\",\n      moq: \"150 pieces\",\n      supplierName: \"TechHealth Ltd\",\n      supplierCountry: \"China\",\n      responseRate: \"96%\",\n      verified: true,\n    },\n    {\n      id: \"6\",\n      image: \"https://images.unsplash.com/photo-1585386959984-a4155224a1ad?w=400&h=400&fit=crop\",\n      name: \"Leather Laptop Bag Professional\",\n      priceRange: \"$35.00-$50.00 /piece\",\n      moq: \"100 pieces\",\n      supplierName: \"Leather Crafts Co\",\n      supplierCountry: \"India\",\n      responseRate: \"94%\",\n      verified: true,\n      tradeAssurance: true,\n    },\n    {\n      id: \"7\",\n      image: \"https://images.unsplash.com/photo-1551963831-b3b1ca40c98e?w=400&h=400&fit=crop\",\n      name: \"Stainless Steel Water Bottle\",\n      priceRange: \"$5.00-$8.00 /piece\",\n      moq: \"1000 pieces\",\n      supplierName: \"EcoBottle Mfg\",\n      supplierCountry: \"China\",\n      responseRate: \"99%\",\n      verified: true,\n    },\n    {\n      id: \"8\",\n      image: \"https://images.unsplash.com/photo-1484788984921-03950022c9ef?w=400&h=400&fit=crop\",\n      name: \"Wireless Gaming Mouse RGB\",\n      priceRange: \"$18.00-$28.00 /piece\",\n      moq: \"200 pieces\",\n      supplierName: \"GameGear Pro\",\n      supplierCountry: \"Taiwan\",\n      responseRate: \"97%\",\n      verified: true,\n      tradeAssurance: true,\n    },\n  ];\n\n  const FilterSidebar = () => (\n    <div className=\"space-y-5\">\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-base font-semibold\">Categories</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          {[\"Electronics\", \"Fashion\", \"Machinery\", \"Automotive\", \"Home & Garden\"].map((cat) => (\n            <div key={cat} className=\"flex flex-wrap items-center gap-3\">\n              <Checkbox id={`cat-${cat}`} data-testid={`checkbox-category-${cat.toLowerCase()}`} />\n              <Label htmlFor={`cat-${cat}`} className=\"text-sm cursor-pointer flex-1\">{cat}</Label>\n            </div>\n          ))}\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-base font-semibold\">Supplier Type</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          {[\"Manufacturer\", \"Trading Company\", \"Wholesaler\"].map((type) => (\n            <div key={type} className=\"flex flex-wrap items-center gap-3\">\n              <Checkbox id={`type-${type}`} data-testid={`checkbox-type-${type.toLowerCase()}`} />\n              <Label htmlFor={`type-${type}`} className=\"text-sm cursor-pointer flex-1\">{type}</Label>\n            </div>\n          ))}\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-base font-semibold\">Price Range</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <Slider\n            value={priceRange}\n            onValueChange={setPriceRange}\n            max={1000}\n            step={10}\n            data-testid=\"slider-price-range\"\n          />\n          <div className=\"flex justify-between text-sm font-medium text-muted-foreground\">\n            <span>${priceRange[0]}</span>\n            <span>${priceRange[1]}</span>\n          </div>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-base font-semibold\">MOQ Range</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          {[\"1-99\", \"100-499\", \"500-999\", \"1000+\"].map((range) => (\n            <div key={range} className=\"flex flex-wrap items-center gap-3\">\n              <Checkbox id={`moq-${range}`} data-testid={`checkbox-moq-${range}`} />\n              <Label htmlFor={`moq-${range}`} className=\"text-sm cursor-pointer flex-1\">{range} pieces</Label>\n            </div>\n          ))}\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-base font-semibold\">Supplier Features</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          <div className=\"flex flex-wrap items-center gap-3\">\n            <Checkbox id=\"verified\" data-testid=\"checkbox-verified\" />\n            <Label htmlFor=\"verified\" className=\"text-sm cursor-pointer flex-1\">Verified Suppliers</Label>\n          </div>\n          <div className=\"flex flex-wrap items-center gap-3\">\n            <Checkbox id=\"trade-assurance\" data-testid=\"checkbox-trade-assurance\" />\n            <Label htmlFor=\"trade-assurance\" className=\"text-sm cursor-pointer flex-1\">Trade Assurance</Label>\n          </div>\n          <div className=\"flex flex-wrap items-center gap-3\">\n            <Checkbox id=\"ready-ship\" data-testid=\"checkbox-ready-ship\" />\n            <Label htmlFor=\"ready-ship\" className=\"text-sm cursor-pointer flex-1\">Ready to Ship</Label>\n          </div>\n        </CardContent>\n      </Card>\n\n      <Button variant=\"outline\" className=\"w-full\" data-testid=\"button-clear-filters\">\n        <X className=\"w-4 h-4 mr-2\" />\n        Clear All Filters\n      </Button>\n    </div>\n  );\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-gray-50 dark:bg-gray-900\">\n      <Header />\n      <main className=\"flex-1\">\n        <PageHeader\n          title=\"All Products\"\n          subtitle=\"Discover quality products from verified global suppliers\"\n          variant=\"gradient\"\n        />\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"flex gap-6\">\n            <aside className=\"hidden lg:block w-72 flex-shrink-0\">\n              <div className=\"sticky top-24\">\n                <FilterSidebar />\n              </div>\n            </aside>\n\n            <div className=\"flex-1 min-w-0\">\n              <Card className=\"mb-6\">\n                <CardContent className=\"p-4\">\n                  <div className=\"flex items-center justify-between gap-4 flex-wrap\">\n                    <div className=\"flex items-center gap-3\">\n                      <Sheet>\n                        <SheetTrigger asChild>\n                          <Button variant=\"outline\" size=\"sm\" className=\"lg:hidden\" data-testid=\"button-filters\">\n                            <SlidersHorizontal className=\"w-4 h-4 mr-2\" />\n                            Filters\n                          </Button>\n                        </SheetTrigger>\n                        <SheetContent side=\"left\" className=\"w-80 overflow-y-auto\">\n                          <div className=\"py-6\">\n                            <FilterSidebar />\n                          </div>\n                        </SheetContent>\n                      </Sheet>\n                      <p className=\"text-sm text-muted-foreground\">\n                        Showing <span className=\"font-semibold text-foreground\">{products.length}</span> products\n                      </p>\n                    </div>\n                    \n                    <Select defaultValue=\"best-match\">\n                      <SelectTrigger className=\"w-48\" data-testid=\"select-sort\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"best-match\">Best Match</SelectItem>\n                        <SelectItem value=\"price-low\">Price: Low to High</SelectItem>\n                        <SelectItem value=\"price-high\">Price: High to Low</SelectItem>\n                        <SelectItem value=\"moq\">Minimum Order</SelectItem>\n                        <SelectItem value=\"rating\">Supplier Rating</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-5\">\n                {products.map((product) => (\n                  <ProductCard key={product.id} {...product} />\n                ))}\n              </div>\n\n              <div className=\"mt-10 flex justify-center\">\n                <div className=\"inline-flex gap-1 p-1 bg-card rounded-lg border\">\n                  <Button variant=\"ghost\" size=\"sm\" data-testid=\"button-prev-page\">Previous</Button>\n                  <Button variant=\"default\" size=\"sm\" data-testid=\"button-page-1\">1</Button>\n                  <Button variant=\"ghost\" size=\"sm\" data-testid=\"button-page-2\">2</Button>\n                  <Button variant=\"ghost\" size=\"sm\" data-testid=\"button-page-3\">3</Button>\n                  <Button variant=\"ghost\" size=\"sm\" data-testid=\"button-next-page\">Next</Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":11619},"client/src/pages/CategoryProducts.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useRoute } from \"wouter\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport PageHeader from \"@/components/PageHeader\";\nimport ProductCard from \"@/components/ProductCard\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport { SlidersHorizontal, Search, X } from \"lucide-react\";\nimport { useLoading } from \"@/contexts/LoadingContext\";\n\nexport default function CategoryProducts() {\n  const { setLoading } = useLoading();\n  const [, params] = useRoute(\"/category/:slug\");\n  const categorySlug = params?.slug || \"electronics\";\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const categoryNames: Record<string, string> = {\n    electronics: \"Electronics & Electrical\",\n    apparel: \"Fashion & Apparel\", \n    machinery: \"Machinery & Equipment\",\n    automotive: \"Automotive & Transportation\",\n    home: \"Home & Garden\",\n    lighting: \"Lights & Lighting\",\n    packaging: \"Packaging & Printing\",\n    construction: \"Construction & Real Estate\",\n    health: \"Health & Medical\",\n    food: \"Food & Beverage\",\n    baby: \"Toys & Baby Products\",\n    sports: \"Sports & Entertainment\",\n    office: \"Office & School Supplies\",\n    beauty: \"Beauty & Personal Care\",\n    energy: \"Energy & Minerals\",\n    industrial: \"Industrial Supplies\"\n  };\n\n  useEffect(() => {\n    setLoading(true, `Loading ${categoryNames[categorySlug] || categorySlug} products...`);\n    \n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 800);\n\n    return () => clearTimeout(timer);\n  }, [categorySlug]);\n\n  const products = [\n    {\n      id: \"1\",\n      image: \"https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=400&h=400&fit=crop\",\n      name: \"Premium Wireless Headphones\",\n      priceRange: \"$25.00-$35.00 /piece\",\n      moq: \"100 pieces\",\n      supplierName: \"AudioTech Pro\",\n      supplierCountry: \"China\",\n      responseRate: \"98%\",\n      verified: true,\n      tradeAssurance: true,\n    },\n    {\n      id: \"2\",\n      image: \"https://images.unsplash.com/photo-1526170375885-4d8ecf77b99f?w=400&h=400&fit=crop\",\n      name: \"Smart Fitness Tracker Watch\",\n      priceRange: \"$30.00-$45.00 /piece\",\n      moq: \"150 pieces\",\n      supplierName: \"TechHealth Ltd\",\n      supplierCountry: \"China\",\n      responseRate: \"96%\",\n      verified: true,\n    },\n    {\n      id: \"3\",\n      image: \"https://images.unsplash.com/photo-1572635196237-14b3f281503f?w=400&h=400&fit=crop\",\n      name: \"Designer Sunglasses UV Protection\",\n      priceRange: \"$8.00-$12.00 /piece\",\n      moq: \"500 pieces\",\n      supplierName: \"Vision Plus\",\n      supplierCountry: \"Taiwan\",\n      responseRate: \"92%\",\n      tradeAssurance: true,\n    },\n    {\n      id: \"4\",\n      image: \"https://images.unsplash.com/photo-1491553895911-0055eca6402d?w=400&h=400&fit=crop\",\n      name: \"Casual Canvas Sneakers\",\n      priceRange: \"$12.00-$18.00 /pair\",\n      moq: \"300 pairs\",\n      supplierName: \"FootWear Global\",\n      supplierCountry: \"Vietnam\",\n      responseRate: \"97%\",\n      verified: true,\n      tradeAssurance: true,\n    },\n    {\n      id: \"5\",\n      image: \"https://images.unsplash.com/photo-1526170375885-4d8ecf77b99f?w=400&h=400&fit=crop\",\n      name: \"Smart Fitness Tracker Watch\",\n      priceRange: \"$30.00-$45.00 /piece\",\n      moq: \"150 pieces\",\n      supplierName: \"TechHealth Ltd\",\n      supplierCountry: \"China\",\n      responseRate: \"96%\",\n      verified: true,\n    },\n    {\n      id: \"6\",\n      image: \"https://images.unsplash.com/photo-1585386959984-a4155224a1ad?w=400&h=400&fit=crop\",\n      name: \"Leather Laptop Bag Professional\",\n      priceRange: \"$35.00-$50.00 /piece\",\n      moq: \"100 pieces\",\n      supplierName: \"Leather Crafts Co\",\n      supplierCountry: \"India\",\n      responseRate: \"94%\",\n      verified: true,\n      tradeAssurance: true,\n    },\n  ];\n\n  const FilterSidebar = () => (\n    <div className=\"space-y-5\">\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-base font-semibold\">Subcategories</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          {[\"Mobile Phones\", \"Laptops\", \"Tablets\", \"Accessories\", \"Smart Devices\"].map((sub) => (\n            <div key={sub} className=\"flex flex-wrap items-center gap-3\">\n              <Checkbox id={sub} data-testid={`checkbox-${sub.toLowerCase().replace(' ', '-')}`} />\n              <Label htmlFor={sub} className=\"text-sm cursor-pointer flex-1\">{sub}</Label>\n            </div>\n          ))}\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-base font-semibold\">Supplier Type</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          {[\"Manufacturer\", \"Trading Company\", \"Wholesaler\"].map((type) => (\n            <div key={type} className=\"flex flex-wrap items-center gap-3\">\n              <Checkbox id={type} data-testid={`checkbox-${type.toLowerCase().replace(' ', '-')}`} />\n              <Label htmlFor={type} className=\"text-sm cursor-pointer flex-1\">{type}</Label>\n            </div>\n          ))}\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-base font-semibold\">Certifications</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          {[\"ISO 9001\", \"CE\", \"RoHS\", \"FDA\"].map((cert) => (\n            <div key={cert} className=\"flex flex-wrap items-center gap-3\">\n              <Checkbox id={cert} data-testid={`checkbox-${cert.toLowerCase().replace(' ', '-')}`} />\n              <Label htmlFor={cert} className=\"text-sm cursor-pointer flex-1\">{cert}</Label>\n            </div>\n          ))}\n        </CardContent>\n      </Card>\n\n      <Button variant=\"outline\" className=\"w-full\" data-testid=\"button-clear-filters\">\n        <X className=\"w-4 h-4 mr-2\" />\n        Clear Filters\n      </Button>\n    </div>\n  );\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-gray-50 dark:bg-gray-900\">\n      <Header />\n      <main className=\"flex-1\">\n        <PageHeader\n          title={categoryNames[categorySlug] || \"Products\"}\n          subtitle=\"Discover quality products from verified suppliers\"\n          breadcrumbs={[\n            { label: \"Categories\", href: \"/categories\" },\n            { label: categoryNames[categorySlug] || \"Products\" }\n          ]}\n          variant=\"gradient\"\n        />\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"flex gap-6\">\n            <aside className=\"hidden lg:block w-72 flex-shrink-0\">\n              <div className=\"sticky top-24\">\n                <FilterSidebar />\n              </div>\n            </aside>\n\n            <div className=\"flex-1 min-w-0\">\n              <Card className=\"mb-6\">\n                <CardContent className=\"p-4\">\n                  <div className=\"flex flex-col sm:flex-row gap-4\">\n                    <div className=\"relative flex-1\">\n                      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-5 w-5\" />\n                      <Input\n                        type=\"search\"\n                        placeholder=\"Search in this category...\"\n                        value={searchQuery}\n                        onChange={(e) => setSearchQuery(e.target.value)}\n                        className=\"pl-10\"\n                        data-testid=\"input-search-category\"\n                      />\n                    </div>\n                    <div className=\"flex gap-3\">\n                      <Select defaultValue=\"relevant\" data-testid=\"select-sort\">\n                        <SelectTrigger className=\"w-full sm:w-48\">\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"relevant\">Most Relevant</SelectItem>\n                          <SelectItem value=\"price-low\">Price: Low to High</SelectItem>\n                          <SelectItem value=\"price-high\">Price: High to Low</SelectItem>\n                          <SelectItem value=\"moq\">Minimum Order</SelectItem>\n                          <SelectItem value=\"rating\">Highest Rated</SelectItem>\n                        </SelectContent>\n                      </Select>\n                      <Sheet>\n                        <SheetTrigger asChild>\n                          <Button variant=\"outline\" className=\"lg:hidden\" data-testid=\"button-filters\">\n                            <SlidersHorizontal className=\"h-4 w-4 mr-2\" />\n                            Filters\n                          </Button>\n                        </SheetTrigger>\n                        <SheetContent side=\"left\" className=\"w-80 overflow-y-auto\">\n                          <div className=\"py-6\">\n                            <FilterSidebar />\n                          </div>\n                        </SheetContent>\n                      </Sheet>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <div className=\"mb-5\">\n                <p className=\"text-sm text-muted-foreground\">\n                  Showing <span className=\"font-semibold text-foreground\">{products.length}</span> products\n                </p>\n              </div>\n\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 xl:grid-cols-3 gap-5\">\n                {products.map((product) => (\n                  <ProductCard key={product.id} {...product} />\n                ))}\n              </div>\n\n              <div className=\"mt-10 flex justify-center\">\n                <div className=\"inline-flex gap-1 p-1 bg-card rounded-lg border\">\n                  <Button variant=\"ghost\" size=\"sm\" data-testid=\"button-prev-page\">Previous</Button>\n                  <Button variant=\"default\" size=\"sm\" data-testid=\"button-page-1\">1</Button>\n                  <Button variant=\"ghost\" size=\"sm\" data-testid=\"button-page-2\">2</Button>\n                  <Button variant=\"ghost\" size=\"sm\" data-testid=\"button-page-3\">3</Button>\n                  <Button variant=\"ghost\" size=\"sm\" data-testid=\"button-next-page\">Next</Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":10721},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  const host = process.platform === 'win32' ? 'localhost' : '0.0.0.0';\n  server.listen(port, host, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2090},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/RFQSection.tsx":{"content":"import RFQCard from \"./RFQCard\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\n\nexport default function RFQSection() {\n  //todo: remove mock functionality\n  const rfqs = [\n    {\n      id: \"1\",\n      title: \"Looking for High-Quality Wireless Earbuds - Bulk Order\",\n      quantity: \"5,000 units\",\n      budget: \"$15-20 per unit\",\n      location: \"United States\",\n      timeRemaining: \"3 days left\",\n      quotations: 12,\n      category: \"Electronics\",\n    },\n    {\n      id: \"2\",\n      title: \"Need Custom Branded T-Shirts with Logo Printing\",\n      quantity: \"10,000 pieces\",\n      budget: \"$3-5 per piece\",\n      location: \"United Kingdom\",\n      timeRemaining: \"5 days left\",\n      quotations: 8,\n      category: \"Apparel\",\n    },\n    {\n      id: \"3\",\n      title: \"Industrial Grade Steel Pipes - Various Sizes\",\n      quantity: \"2,000 meters\",\n      location: \"Germany\",\n      timeRemaining: \"1 day left\",\n      quotations: 15,\n      category: \"Construction\",\n    },\n  ];\n\n  return (\n    <section className=\"py-16 bg-muted/30\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <div>\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-2\">Recent RFQs</h2>\n            <p className=\"text-muted-foreground\">Connect with buyers looking for your products</p>\n          </div>\n          <Link href=\"/rfq/browse\">\n            <Button variant=\"outline\" data-testid=\"button-browse-rfqs\">Browse All RFQs</Button>\n          </Link>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {rfqs.map((rfq) => (\n            <RFQCard key={rfq.id} {...rfq} />\n          ))}\n        </div>\n        \n        <div className=\"mt-8 text-center\">\n          <Link href=\"/rfq/create\">\n            <Button size=\"lg\" data-testid=\"button-post-rfq\">Post Your RFQ</Button>\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2003},"client/src/pages/ProductDetail.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link, useRoute } from \"wouter\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport ProductCard from \"@/components/ProductCard\";\nimport FloatingChatButton from \"@/components/FloatingChatButton\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useLoading } from \"@/contexts/LoadingContext\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { \n  ShieldCheck, \n  MapPin, \n  Star, \n  Heart,\n  MessageSquare,\n  Package,\n  Truck,\n  Award,\n  FileText\n} from \"lucide-react\";\n\nexport default function ProductDetail() {\n  const { setLoading } = useLoading();\n  const [, params] = useRoute(\"/product/:id\");\n  const productId = params?.id || \"1\";\n  const [quantity, setQuantity] = useState(100);\n  const [selectedImage, setSelectedImage] = useState(0);\n\n  useEffect(() => {\n    setLoading(true, \"Loading Product Details...\");\n    \n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 900);\n\n    return () => clearTimeout(timer);\n  }, [productId]); // Only depend on productId, not setLoading\n\n  //todo: remove mock functionality\n  const images = [\n    \"https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=600&h=600&fit=crop\",\n    \"https://images.unsplash.com/photo-1484704849700-f032a568e944?w=600&h=600&fit=crop\",\n    \"https://images.unsplash.com/photo-1545127398-14699f92334b?w=600&h=600&fit=crop\",\n  ];\n\n  const relatedProducts = [\n    {\n      id: \"10\",\n      image: \"https://images.unsplash.com/photo-1491553895911-0055eca6402d?w=400&h=400&fit=crop\",\n      name: \"Wireless Gaming Mouse\",\n      priceRange: \"$18.00-$28.00 /piece\",\n      moq: \"200 pieces\",\n      supplierName: \"TechGear\",\n      supplierCountry: \"China\",\n      responseRate: \"96%\",\n      verified: true,\n    },\n    {\n      id: \"11\",\n      image: \"https://images.unsplash.com/photo-1572635196237-14b3f281503f?w=400&h=400&fit=crop\",\n      name: \"USB-C Charging Cable\",\n      priceRange: \"$2.00-$4.00 /piece\",\n      moq: \"500 pieces\",\n      supplierName: \"CableWorks\",\n      supplierCountry: \"Taiwan\",\n      responseRate: \"94%\",\n    },\n  ];\n\n  const getPriceForQuantity = (qty: number) => {\n    if (qty >= 1000) return \"$22.00\";\n    if (qty >= 500) return \"$25.00\";\n    return \"$28.00\";\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 sm:gap-8\">\n            <div className=\"lg:col-span-2\">\n              <div className=\"grid grid-cols-1 gap-4 sm:gap-6\">\n                <div>\n                  <div className=\"aspect-square bg-muted rounded-lg overflow-hidden mb-3 sm:mb-4\">\n                    <img \n                      src={images[selectedImage]} \n                      alt=\"Product\" \n                      className=\"w-full h-full object-cover\"\n                    />\n                  </div>\n                  <div className=\"grid grid-cols-3 gap-2\">\n                    {images.map((img, idx) => (\n                      <button\n                        key={idx}\n                        onClick={() => setSelectedImage(idx)}\n                        className={`aspect-square rounded-lg overflow-hidden border-2 ${\n                          selectedImage === idx ? 'border-primary' : 'border-transparent'\n                        }`}\n                        data-testid={`button-image-${idx}`}\n                      >\n                        <img src={img} alt={`Product ${idx + 1}`} className=\"w-full h-full object-cover\" />\n                      </button>\n                    ))}\n                  </div>\n                </div>\n\n                <div>\n                  <div className=\"flex flex-wrap gap-2 mb-3\">\n                    <Badge className=\"bg-success text-white text-xs sm:text-sm\">\n                      <ShieldCheck className=\"w-3 h-3 mr-1\" />\n                      Verified Supplier\n                    </Badge>\n                    <Badge className=\"bg-primary text-xs sm:text-sm\">Trade Assurance</Badge>\n                  </div>\n                  \n                  <h1 className=\"text-xl sm:text-2xl font-bold mb-3 sm:mb-4\">\n                    Premium Wireless Bluetooth Headphones with Active Noise Cancellation\n                  </h1>\n\n                  <div className=\"mb-4 sm:mb-6\">\n                    <div className=\"text-2xl sm:text-3xl font-bold text-primary mb-2\">\n                      {getPriceForQuantity(quantity)} <span className=\"text-base sm:text-lg text-muted-foreground\">/piece</span>\n                    </div>\n                    <div className=\"space-y-1 text-xs sm:text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-muted-foreground\">100-499 pieces:</span>\n                        <span className=\"font-medium\">$28.00/piece</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-muted-foreground\">500-999 pieces:</span>\n                        <span className=\"font-medium\">$25.00/piece</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-muted-foreground\">≥1000 pieces:</span>\n                        <span className=\"font-medium\">$22.00/piece</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-2 gap-3 sm:gap-4 mb-4 sm:mb-6 text-xs sm:text-sm\">\n                    <div>\n                      <p className=\"text-muted-foreground\">MOQ:</p>\n                      <p className=\"font-medium\">100 pieces</p>\n                    </div>\n                    <div>\n                      <p className=\"text-muted-foreground\">Lead Time:</p>\n                      <p className=\"font-medium\">15-30 days</p>\n                    </div>\n                    <div>\n                      <p className=\"text-muted-foreground\">Sample:</p>\n                      <p className=\"font-medium\">Available ($30)</p>\n                    </div>\n                    <div>\n                      <p className=\"text-muted-foreground\">Customization:</p>\n                      <p className=\"font-medium\">Available</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex flex-col gap-2\">\n                    <Link href={`/start-order/${productId}`}>\n                      <Button size=\"lg\" className=\"w-full bg-gray-700 hover:bg-gray-800 text-white no-default-hover-elevate\" data-testid=\"button-start-order\">\n                        <Package className=\"w-4 h-4 mr-2\" />\n                        Start Bulk Order\n                      </Button>\n                    </Link>\n                    <div className=\"flex gap-2\">\n                      <Link href={`/contact-supplier/${productId}`} className=\"flex-1\">\n                        <Button size=\"lg\" variant=\"outline\" className=\"w-full\" data-testid=\"button-contact-supplier\">\n                          <MessageSquare className=\"w-4 h-4 mr-2\" />\n                          <span className=\"hidden sm:inline\">Contact Supplier</span>\n                          <span className=\"sm:hidden\">Contact</span>\n                        </Button>\n                      </Link>\n                      <Button size=\"lg\" variant=\"outline\" data-testid=\"button-add-favorite\">\n                        <Heart className=\"w-4 h-4\" />\n                      </Button>\n                    </div>\n                    <Button size=\"lg\" variant=\"outline\" className=\"w-full\" data-testid=\"button-request-quotation\">\n                      <FileText className=\"w-4 h-4 mr-2\" />\n                      <span className=\"hidden sm:inline\">Request Quotation</span>\n                      <span className=\"sm:hidden\">Request Quote</span>\n                    </Button>\n                  </div>\n                </div>\n              </div>\n\n              <Tabs defaultValue=\"description\" className=\"mt-6 sm:mt-8\">\n                <TabsList className=\"w-full grid grid-cols-2 sm:grid-cols-4\">\n                  <TabsTrigger value=\"description\" className=\"text-xs sm:text-sm\" data-testid=\"tab-description\">Description</TabsTrigger>\n                  <TabsTrigger value=\"specs\" className=\"text-xs sm:text-sm\" data-testid=\"tab-specs\">Specs</TabsTrigger>\n                  <TabsTrigger value=\"company\" className=\"text-xs sm:text-sm\" data-testid=\"tab-company\">Company</TabsTrigger>\n                  <TabsTrigger value=\"reviews\" className=\"text-xs sm:text-sm\" data-testid=\"tab-reviews\">Reviews</TabsTrigger>\n                </TabsList>\n                \n                <TabsContent value=\"description\" className=\"mt-4 sm:mt-6\">\n                  <div className=\"prose prose-sm sm:prose max-w-none\">\n                    <p className=\"text-sm sm:text-base\">Experience premium audio quality with our advanced wireless headphones featuring active noise cancellation technology. Perfect for business professionals and music enthusiasts.</p>\n                    <h3 className=\"text-base sm:text-lg\">Key Features:</h3>\n                    <ul className=\"text-sm sm:text-base\">\n                      <li>Active Noise Cancellation (ANC) technology</li>\n                      <li>40-hour battery life</li>\n                      <li>Premium comfort ear cushions</li>\n                      <li>Bluetooth 5.0 connectivity</li>\n                      <li>Built-in microphone for calls</li>\n                    </ul>\n                  </div>\n                </TabsContent>\n                \n                <TabsContent value=\"specs\" className=\"mt-4 sm:mt-6\">\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    {[\n                      [\"Driver Size\", \"40mm\"],\n                      [\"Frequency Response\", \"20Hz-20kHz\"],\n                      [\"Impedance\", \"32Ω\"],\n                      [\"Bluetooth Version\", \"5.0\"],\n                      [\"Battery Capacity\", \"600mAh\"],\n                      [\"Charging Time\", \"2 hours\"],\n                      [\"Weight\", \"250g\"],\n                      [\"Colors Available\", \"Black, White, Blue\"],\n                    ].map(([key, value]) => (\n                      <div key={key} className=\"border-b pb-2 text-sm sm:text-base\">\n                        <p className=\"text-xs sm:text-sm text-muted-foreground\">{key}</p>\n                        <p className=\"font-medium\">{value}</p>\n                      </div>\n                    ))}\n                  </div>\n                </TabsContent>\n                \n                <TabsContent value=\"company\" className=\"mt-4 sm:mt-6\">\n                  <Card>\n                    <CardContent className=\"p-4 sm:p-6\">\n                      <div className=\"flex flex-col sm:flex-row items-start gap-4 mb-4 sm:mb-6\">\n                        <div className=\"w-16 h-16 sm:w-20 sm:h-20 bg-muted rounded-lg flex-shrink-0\" />\n                        <div className=\"flex-1 w-full\">\n                          <h3 className=\"text-base sm:text-lg font-semibold mb-2\">AudioTech Pro Manufacturing</h3>\n                          <div className=\"flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-4 text-xs sm:text-sm text-muted-foreground mb-2\">\n                            <div className=\"flex items-center gap-1\">\n                              <MapPin className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                              <span>Shenzhen, China</span>\n                            </div>\n                            <div className=\"flex items-center gap-1\">\n                              <Star className=\"w-3 h-3 sm:w-4 sm:h-4 fill-amber-400 text-amber-400\" />\n                              <span>4.8 Rating</span>\n                            </div>\n                          </div>\n                          <div className=\"flex flex-wrap gap-2\">\n                            <Badge className=\"bg-success text-white text-xs\">Verified</Badge>\n                            <Badge className=\"bg-amber-500 text-white text-xs\">Gold Supplier</Badge>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"grid grid-cols-3 gap-2 sm:gap-4 text-center text-xs sm:text-sm border-t pt-4\">\n                        <div>\n                          <p className=\"font-semibold text-sm sm:text-base\">12 Years</p>\n                          <p className=\"text-muted-foreground text-xs\">In Business</p>\n                        </div>\n                        <div>\n                          <p className=\"font-semibold text-sm sm:text-base\">500+</p>\n                          <p className=\"text-muted-foreground text-xs\">Products</p>\n                        </div>\n                        <div>\n                          <p className=\"font-semibold text-sm sm:text-base\">95%</p>\n                          <p className=\"text-muted-foreground text-xs\">Response Rate</p>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n                \n                <TabsContent value=\"reviews\" className=\"mt-4 sm:mt-6\">\n                  <div className=\"space-y-3 sm:space-y-4\">\n                    {[1, 2, 3].map((i) => (\n                      <Card key={i}>\n                        <CardContent className=\"p-3 sm:p-4\">\n                          <div className=\"flex flex-col sm:flex-row sm:items-center gap-2 mb-2\">\n                            <div className=\"flex\">\n                              {[...Array(5)].map((_, idx) => (\n                                <Star key={idx} className=\"w-3 h-3 sm:w-4 sm:h-4 fill-amber-400 text-amber-400\" />\n                              ))}\n                            </div>\n                            <span className=\"text-xs sm:text-sm text-muted-foreground\">John D. • 2 weeks ago</span>\n                          </div>\n                          <p className=\"text-xs sm:text-sm\">Great quality headphones! The supplier was very responsive and shipping was fast. Highly recommend for bulk orders.</p>\n                        </CardContent>\n                      </Card>\n                    ))}\n                  </div>\n                </TabsContent>\n              </Tabs>\n            </div>\n\n            <div className=\"lg:col-span-1\">\n              <Card className=\"sticky top-24\">\n                <CardContent className=\"p-4 sm:p-6\">\n                  <h3 className=\"font-semibold text-base sm:text-lg mb-4\">Send Inquiry</h3>\n                  <div className=\"space-y-3 sm:space-y-4\">\n                    <div>\n                      <label className=\"text-xs sm:text-sm font-medium mb-2 block\">Quantity (pieces)</label>\n                      <Input \n                        type=\"number\" \n                        value={quantity} \n                        onChange={(e) => setQuantity(Number(e.target.value))}\n                        min={100}\n                        className=\"text-sm\"\n                        data-testid=\"input-quantity\"\n                      />\n                      <p className=\"text-xs sm:text-sm text-muted-foreground mt-1\">\n                        Price: {getPriceForQuantity(quantity)}/piece\n                      </p>\n                    </div>\n                    <div>\n                      <label className=\"text-xs sm:text-sm font-medium mb-2 block\">Target Price (Optional)</label>\n                      <Input placeholder=\"Your target price\" className=\"text-sm\" data-testid=\"input-target-price\" />\n                    </div>\n                    <div>\n                      <label className=\"text-xs sm:text-sm font-medium mb-2 block\">Message to Supplier</label>\n                      <Textarea \n                        placeholder=\"Describe your requirements...\"\n                        rows={3}\n                        className=\"text-sm\"\n                        data-testid=\"textarea-message\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"text-xs sm:text-sm font-medium mb-2 block\">Your Email</label>\n                      <Input type=\"email\" placeholder=\"your@email.com\" className=\"text-sm\" data-testid=\"input-email\" />\n                    </div>\n                    <Button className=\"w-full bg-gray-700 hover:bg-gray-800 text-white no-default-hover-elevate\" size=\"lg\" data-testid=\"button-send-inquiry\">\n                      Send Inquiry\n                    </Button>\n                    <Link href={`/contact-supplier/${productId}`}>\n                      <Button variant=\"outline\" className=\"w-full\" size=\"lg\" data-testid=\"button-contact-supplier-sidebar\">\n                        <MessageSquare className=\"w-4 h-4 mr-2\" />\n                        Contact Supplier\n                      </Button>\n                    </Link>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n\n          <section className=\"mt-10 sm:mt-16\">\n            <h2 className=\"text-xl sm:text-2xl font-bold mb-4 sm:mb-6\">Related Products</h2>\n            <div className=\"grid grid-cols-2 sm:grid-cols-2 lg:grid-cols-4 gap-3 sm:gap-6\">\n              {relatedProducts.map((product) => (\n                <ProductCard key={product.id} {...product} />\n              ))}\n            </div>\n          </section>\n        </div>\n      </main>\n      <Footer />\n      <FloatingChatButton supplierName=\"AudioTech Pro Manufacturing\" supplierId={productId} />\n    </div>\n  );\n}\n","size_bytes":17822},"client/src/App.tsx":{"content":"import React from \"react\";\nimport { Switch, Route, useLocation } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { SidebarProvider, SidebarTrigger } from \"@/components/ui/sidebar\";\nimport { AdminSidebar } from \"@/components/AdminSidebar\";\nimport ChatbotWidget from \"@/components/ChatbotWidget\";\nimport FullScreenLoader from \"@/components/FullScreenLoader\";\nimport { LoadingProvider, useLoading } from \"@/contexts/LoadingContext\";\nimport Home from \"@/pages/Home\";\nimport Products from \"@/pages/Products\";\nimport ProductDetail from \"@/pages/ProductDetail\";\nimport RFQBrowse from \"@/pages/RFQBrowse\";\nimport RFQCreate from \"@/pages/RFQCreate\";\nimport RFQDetail from \"@/pages/RFQDetail\";\nimport SupplierProfile from \"@/pages/SupplierProfile\";\nimport InquiryCart from \"@/pages/InquiryCart\";\nimport Messages from \"@/pages/Messages\";\nimport Dashboard from \"@/pages/Dashboard\";\nimport SupplierDashboard from \"@/pages/SupplierDashboard\";\nimport Categories from \"@/pages/Categories\";\nimport FindSuppliers from \"@/pages/FindSuppliers\";\nimport ReadyToShip from \"@/pages/ReadyToShip\";\nimport TradeShows from \"@/pages/TradeShows\";\nimport BuyerProtection from \"@/pages/BuyerProtection\";\nimport Contact from \"@/pages/Contact\";\nimport Help from \"@/pages/Help\";\nimport Terms from \"@/pages/Terms\";\nimport Privacy from \"@/pages/Privacy\";\nimport Login from \"@/pages/Login\";\nimport Signup from \"@/pages/Signup\";\nimport MyOrders from \"@/pages/MyOrders\";\nimport MyRFQs from \"@/pages/MyRFQs\";\nimport Favorites from \"@/pages/Favorites\";\nimport ContactSupplier from \"@/pages/ContactSupplier\";\nimport StartOrder from \"@/pages/StartOrder\";\nimport SendQuotation from \"@/pages/SendQuotation\";\nimport CategoryProducts from \"@/pages/CategoryProducts\";\nimport GetVerified from \"@/pages/GetVerified\";\nimport AdminDashboard from \"@/pages/admin/AdminDashboard\";\nimport AdminProducts from \"@/pages/admin/AdminProducts\";\nimport AdminBulkUpload from \"@/pages/admin/AdminBulkUpload\";\nimport AdminCategories from \"@/pages/admin/AdminCategories\";\nimport AdminCustomers from \"@/pages/admin/AdminCustomers\";\nimport AdminSuppliers from \"@/pages/admin/AdminSuppliers\";\nimport AdminOrders from \"@/pages/admin/AdminOrders\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction AdminRouter() {\n  return (\n    <Switch>\n      <Route path=\"/admin\" component={AdminDashboard} />\n      <Route path=\"/admin/products\" component={AdminProducts} />\n      <Route path=\"/admin/bulk-upload\" component={AdminBulkUpload} />\n      <Route path=\"/admin/categories\" component={AdminCategories} />\n      <Route path=\"/admin/customers\" component={AdminCustomers} />\n      <Route path=\"/admin/suppliers\" component={AdminSuppliers} />\n      <Route path=\"/admin/orders\" component={AdminOrders} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction PublicRouter() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/products\" component={Products} />\n      <Route path=\"/product/:id\" component={ProductDetail} />\n      <Route path=\"/categories\" component={Categories} />\n      <Route path=\"/supplier/:id\" component={SupplierProfile} />\n      <Route path=\"/find-suppliers\" component={FindSuppliers} />\n      <Route path=\"/ready-to-ship\" component={ReadyToShip} />\n      <Route path=\"/trade-shows\" component={TradeShows} />\n      <Route path=\"/rfq/browse\" component={RFQBrowse} />\n      <Route path=\"/rfq/create\" component={RFQCreate} />\n      <Route path=\"/rfq/:id\" component={RFQDetail} />\n      <Route path=\"/inquiry-cart\" component={InquiryCart} />\n      <Route path=\"/messages\" component={Messages} />\n      <Route path=\"/dashboard/buyer\" component={Dashboard} />\n      <Route path=\"/dashboard/supplier\" component={SupplierDashboard} />\n      <Route path=\"/buyer-protection\" component={BuyerProtection} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route path=\"/help\" component={Help} />\n      <Route path=\"/terms\" component={Terms} />\n      <Route path=\"/privacy\" component={Privacy} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/signup\" component={Signup} />\n      <Route path=\"/my-orders\" component={MyOrders} />\n      <Route path=\"/my-rfqs\" component={MyRFQs} />\n      <Route path=\"/favorites\" component={Favorites} />\n      <Route path=\"/contact-supplier/:id\" component={ContactSupplier} />\n      <Route path=\"/start-order/:productId\" component={StartOrder} />\n      <Route path=\"/send-quotation/:rfqId\" component={SendQuotation} />\n      <Route path=\"/category/:slug\" component={CategoryProducts} />\n      <Route path=\"/get-verified\" component={GetVerified} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction AppContent() {\n  const { isLoading, loadingMessage, showProgress, progress, setLoading } = useLoading();\n  const [location] = useLocation();\n  const isAdminRoute = location.startsWith('/admin');\n  \n  // Ensure loader starts in non-loading state\n  React.useEffect(() => {\n    setLoading(false);\n  }, []);\n  \n  if (isAdminRoute) {\n    const style = {\n      \"--sidebar-width\": \"16rem\",\n      \"--sidebar-width-icon\": \"3rem\",\n    };\n    \n    return (\n      <>\n        <SidebarProvider style={style as React.CSSProperties}>\n          <div className=\"flex h-screen w-full\">\n            <AdminSidebar />\n            <div className=\"flex flex-col flex-1 overflow-hidden\">\n              <header className=\"flex items-center justify-between p-4 border-b\">\n                <SidebarTrigger data-testid=\"button-sidebar-toggle\" />\n                <h2 className=\"text-lg font-semibold\">B2B Admin Panel</h2>\n              </header>\n              <main className=\"flex-1 overflow-auto\">\n                <AdminRouter />\n              </main>\n            </div>\n          </div>\n        </SidebarProvider>\n        <FullScreenLoader \n          isLoading={isLoading}\n          message={loadingMessage}\n          showProgress={showProgress}\n          progress={progress}\n        />\n      </>\n    );\n  }\n  \n  return (\n    <>\n      <PublicRouter />\n      <ChatbotWidget />\n      <FullScreenLoader \n        isLoading={isLoading}\n        message={loadingMessage}\n        showProgress={showProgress}\n        progress={progress}\n      />\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <LoadingProvider>\n        <TooltipProvider>\n          <Toaster />\n          <AppContent />\n        </TooltipProvider>\n      </LoadingProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":6654},"client/src/components/examples/Header.tsx":{"content":"import Header from '../Header';\n\nexport default function HeaderExample() {\n  return <Header />;\n}\n","size_bytes":98},"client/src/components/ui/sidebar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-[var(--sidebar-width)] flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-[var(--sidebar-width)] p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-[var(--sidebar-width)] bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4))]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)]\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-[var(--sidebar-width)] transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4)+2px)]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  // Note: Tailwind v3.4 doesn't support \"in-\" selectors. So the rail won't work perfectly.\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-background relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:h-4 [&>svg]:w-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:w-8! group-data-[collapsible=icon]:h-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[var(--skeleton-width)] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline outline-2 outline-transparent outline-offset-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":21846},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/components/FloatingChatButton.tsx":{"content":"import { useState } from \"react\";\nimport { MessageCircle, X, Send } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card } from \"@/components/ui/card\";\n\ninterface FloatingChatButtonProps {\n  supplierName?: string;\n  supplierId?: string;\n}\n\nexport default function FloatingChatButton({ supplierName, supplierId }: FloatingChatButtonProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState<Array<{ from: string; message: string; time: string }>>([\n    {\n      from: \"supplier\",\n      message: `Hello! I'm from ${supplierName || 'our company'}. How can I help you today?`,\n      time: \"Just now\"\n    }\n  ]);\n\n  const handleSendMessage = () => {\n    if (!message.trim()) return;\n\n    setChatHistory([\n      ...chatHistory,\n      {\n        from: \"user\",\n        message: message,\n        time: \"Just now\"\n      }\n    ]);\n    setMessage(\"\");\n\n    setTimeout(() => {\n      setChatHistory(prev => [\n        ...prev,\n        {\n          from: \"supplier\",\n          message: \"Thank you for your message. We'll get back to you shortly!\",\n          time: \"Just now\"\n        }\n      ]);\n    }, 1000);\n  };\n\n  return (\n    <>\n      {!isOpen && (\n        <Button\n          onClick={() => setIsOpen(true)}\n          className=\"fixed bottom-6 right-24 h-14 w-14 rounded-full bg-gray-700 hover:bg-gray-800 text-white shadow-lg hover:shadow-xl transition-all z-[9998] no-default-hover-elevate\"\n          size=\"icon\"\n          data-testid=\"button-open-chat\"\n        >\n          <MessageCircle className=\"h-6 w-6\" />\n        </Button>\n      )}\n\n      {isOpen && (\n        <Card className=\"fixed bottom-6 right-24 w-96 h-[500px] flex flex-col shadow-2xl z-[9998] glass-card\">\n          <div className=\"bg-gray-700 text-white p-4 rounded-t-lg flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"h-10 w-10 bg-white/20 rounded-full flex items-center justify-center\">\n                <MessageCircle className=\"h-5 w-5\" />\n              </div>\n              <div>\n                <h3 className=\"font-semibold\">{supplierName || \"Supplier Chat\"}</h3>\n                <p className=\"text-xs text-white/80\">Online</p>\n              </div>\n            </div>\n            <Button\n              onClick={() => setIsOpen(false)}\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"text-white hover:bg-white/20\"\n              data-testid=\"button-close-chat\"\n            >\n              <X className=\"h-5 w-5\" />\n            </Button>\n          </div>\n\n          <div className=\"flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50 dark:bg-gray-900\">\n            {chatHistory.map((chat, index) => (\n              <div\n                key={index}\n                className={`flex ${chat.from === \"user\" ? \"justify-end\" : \"justify-start\"}`}\n              >\n                <div\n                  className={`max-w-[80%] rounded-lg p-3 ${\n                    chat.from === \"user\"\n                      ? \"bg-gray-700 text-white\"\n                      : \"bg-white dark:bg-gray-800 border\"\n                  }`}\n                >\n                  <p className=\"text-sm\">{chat.message}</p>\n                  <p className={`text-xs mt-1 ${chat.from === \"user\" ? \"text-white/80\" : \"text-gray-500\"}`}>\n                    {chat.time}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"p-4 border-t bg-white dark:bg-gray-800\">\n            <div className=\"flex gap-2\">\n              <Textarea\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                placeholder=\"Type your message...\"\n                className=\"resize-none\"\n                rows={2}\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\" && !e.shiftKey) {\n                    e.preventDefault();\n                    handleSendMessage();\n                  }\n                }}\n                data-testid=\"textarea-chat-message\"\n              />\n              <Button\n                onClick={handleSendMessage}\n                className=\"bg-gray-700 hover:bg-gray-800 text-white no-default-hover-elevate\"\n                size=\"icon\"\n                data-testid=\"button-send-message\"\n              >\n                <Send className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </div>\n        </Card>\n      )}\n    </>\n  );\n}\n","size_bytes":4583},"client/src/components/TopSuppliers.tsx":{"content":"import SupplierCard from \"./SupplierCard\";\n\nexport default function TopSuppliers() {\n  //todo: remove mock functionality\n  const suppliers = [\n    {\n      id: \"1\",\n      logo: \"https://images.unsplash.com/photo-1560179707-f14e90ef3623?w=200&h=200&fit=crop\",\n      name: \"Global Electronics Manufacturing\",\n      location: \"Shenzhen, China\",\n      yearsInBusiness: 12,\n      rating: 4.8,\n      responseRate: \"95%\",\n      mainProducts: [\"Headphones\", \"Speakers\", \"Chargers\"],\n      verified: true,\n      goldSupplier: true,\n    },\n    {\n      id: \"2\",\n      logo: \"https://images.unsplash.com/photo-1441986300917-64674bd600d8?w=200&h=200&fit=crop\",\n      name: \"Fashion Textile Exports Ltd\",\n      location: \"Mumbai, India\",\n      yearsInBusiness: 8,\n      rating: 4.6,\n      responseRate: \"92%\",\n      mainProducts: [\"T-Shirts\", \"Dresses\", \"Fabrics\"],\n      verified: true,\n      goldSupplier: false,\n    },\n    {\n      id: \"3\",\n      logo: \"https://images.unsplash.com/photo-1497366216548-37526070297c?w=200&h=200&fit=crop\",\n      name: \"Industrial Machinery Corp\",\n      location: \"Tokyo, Japan\",\n      yearsInBusiness: 15,\n      rating: 4.9,\n      responseRate: \"98%\",\n      mainProducts: [\"CNC Machines\", \"Motors\", \"Parts\"],\n      verified: true,\n      goldSupplier: true,\n    },\n  ];\n\n  return (\n    <section className=\"py-16\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <h2 className=\"text-3xl md:text-4xl font-bold\">Top-Ranked Suppliers</h2>\n          <a href=\"/suppliers\" className=\"text-primary hover:underline font-medium\" data-testid=\"link-view-all-suppliers\">\n            View All →\n          </a>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {suppliers.map((supplier) => (\n            <SupplierCard key={supplier.id} {...supplier} />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":1975},"client/src/components/FeaturedProducts.tsx":{"content":"import ProductCard from \"./ProductCard\";\n\nexport default function FeaturedProducts() {\n  //todo: remove mock functionality\n  const products = [\n    {\n      id: \"1\",\n      image: \"https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=400&h=400&fit=crop\",\n      name: \"Premium Wireless Headphones with Active Noise Cancellation\",\n      priceRange: \"$25.00-$35.00 /piece\",\n      moq: \"100 pieces\",\n      supplierName: \"AudioTech Pro\",\n      supplierCountry: \"China\",\n      responseRate: \"98%\",\n      verified: true,\n      tradeAssurance: true,\n    },\n    {\n      id: \"2\",\n      image: \"https://images.unsplash.com/photo-1523275335684-37898b6baf30?w=400&h=400&fit=crop\",\n      name: \"Classic Analog Wristwatch - Leather Strap\",\n      priceRange: \"$15.00-$22.00 /piece\",\n      moq: \"200 pieces\",\n      supplierName: \"TimeKeeper Industries\",\n      supplierCountry: \"Hong Kong\",\n      responseRate: \"95%\",\n      verified: true,\n      tradeAssurance: false,\n    },\n    {\n      id: \"3\",\n      image: \"https://images.unsplash.com/photo-1572635196237-14b3f281503f?w=400&h=400&fit=crop\",\n      name: \"Designer Sunglasses UV Protection\",\n      priceRange: \"$8.00-$12.00 /piece\",\n      moq: \"500 pieces\",\n      supplierName: \"Vision Plus Co.\",\n      supplierCountry: \"Taiwan\",\n      responseRate: \"92%\",\n      verified: false,\n      tradeAssurance: true,\n    },\n    {\n      id: \"4\",\n      image: \"https://images.unsplash.com/photo-1491553895911-0055eca6402d?w=400&h=400&fit=crop\",\n      name: \"Casual Canvas Sneakers - Multiple Colors\",\n      priceRange: \"$12.00-$18.00 /pair\",\n      moq: \"300 pairs\",\n      supplierName: \"FootWear Global\",\n      supplierCountry: \"Vietnam\",\n      responseRate: \"97%\",\n      verified: true,\n      tradeAssurance: true,\n    },\n  ];\n\n  return (\n    <section className=\"py-16\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <h2 className=\"text-3xl md:text-4xl font-bold\">Trending Products</h2>\n          <a href=\"/products\" className=\"text-primary hover:underline font-medium\" data-testid=\"link-view-all-products\">\n            View All →\n          </a>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {products.map((product) => (\n            <ProductCard key={product.id} {...product} />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2436},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/examples/FeaturedProducts.tsx":{"content":"import FeaturedProducts from '../FeaturedProducts';\n\nexport default function FeaturedProductsExample() {\n  return <FeaturedProducts />;\n}\n","size_bytes":138},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    // h-9 to match icon buttons and default buttons.\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":844},"client/src/pages/admin/AdminOrders.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Eye, Edit } from \"lucide-react\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { type Order } from \"@shared/schema\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function AdminOrders() {\n  const [statusFilter, setStatusFilter] = useState(\"all\");\n  const [selectedOrder, setSelectedOrder] = useState<Order | null>(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const { toast } = useToast();\n\n  const { data: orders, isLoading } = useQuery<Order[]>({\n    queryKey: [\"/api/orders\", statusFilter !== \"all\" ? statusFilter : undefined],\n  });\n\n  const updateStatusMutation = useMutation({\n    mutationFn: async ({ id, status }: { id: string; status: string }) => {\n      return await apiRequest(\"PATCH\", `/api/orders/${id}`, { status });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/orders\"] });\n      toast({ title: \"Success\", description: \"Order status updated\" });\n    },\n  });\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'delivered': return 'default';\n      case 'processing': return 'secondary';\n      case 'shipped': return 'outline';\n      case 'pending': return 'secondary';\n      case 'cancelled': return 'destructive';\n      default: return 'default';\n    }\n  };\n\n  return (\n    <div className=\"p-8\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-3xl font-bold\" data-testid=\"text-orders-title\">Orders</h1>\n        <Select value={statusFilter} onValueChange={setStatusFilter}>\n          <SelectTrigger className=\"w-48\" data-testid=\"select-status-filter\">\n            <SelectValue placeholder=\"Filter by status\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"all\">All Orders</SelectItem>\n            <SelectItem value=\"pending\">Pending</SelectItem>\n            <SelectItem value=\"processing\">Processing</SelectItem>\n            <SelectItem value=\"shipped\">Shipped</SelectItem>\n            <SelectItem value=\"delivered\">Delivered</SelectItem>\n            <SelectItem value=\"cancelled\">Cancelled</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      <Card>\n        <CardContent className=\"pt-6\">\n          {isLoading ? (\n            <div className=\"text-center py-8\">Loading...</div>\n          ) : orders && orders.length > 0 ? (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Order Number</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead>Amount</TableHead>\n                  <TableHead>Payment</TableHead>\n                  <TableHead>Date</TableHead>\n                  <TableHead className=\"text-right\">Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {orders.map((order) => (\n                  <TableRow key={order.id} data-testid={`row-order-${order.id}`}>\n                    <TableCell className=\"font-medium\" data-testid={`text-order-number-${order.id}`}>\n                      {order.orderNumber}\n                    </TableCell>\n                    <TableCell>\n                      <Badge variant={getStatusColor(order.status)} data-testid={`badge-status-${order.id}`}>\n                        {order.status}\n                      </Badge>\n                    </TableCell>\n                    <TableCell data-testid={`text-amount-${order.id}`}>\n                      ${parseFloat(order.totalAmount as any).toFixed(2)}\n                    </TableCell>\n                    <TableCell>\n                      <Badge variant={order.paymentStatus === 'paid' ? 'default' : 'secondary'} data-testid={`badge-payment-${order.id}`}>\n                        {order.paymentStatus}\n                      </Badge>\n                    </TableCell>\n                    <TableCell data-testid={`text-date-${order.id}`}>\n                      {new Date(order.createdAt!).toLocaleDateString()}\n                    </TableCell>\n                    <TableCell className=\"text-right\">\n                      <Button size=\"icon\" variant=\"ghost\" onClick={() => { setSelectedOrder(order); setIsDialogOpen(true); }} data-testid={`button-view-${order.id}`}>\n                        <Eye className=\"h-4 w-4\" />\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          ) : (\n            <div className=\"text-center py-8 text-muted-foreground\">No orders found</div>\n          )}\n        </CardContent>\n      </Card>\n\n      <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Order Details</DialogTitle>\n          </DialogHeader>\n          {selectedOrder && (\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Order Number</p>\n                  <p className=\"font-medium\" data-testid=\"text-detail-order-number\">{selectedOrder.orderNumber}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Total Amount</p>\n                  <p className=\"font-medium\" data-testid=\"text-detail-amount\">${parseFloat(selectedOrder.totalAmount as any).toFixed(2)}</p>\n                </div>\n              </div>\n              \n              <div>\n                <p className=\"text-sm text-muted-foreground mb-2\">Order Status</p>\n                <Select \n                  value={selectedOrder.status || \"pending\"} \n                  onValueChange={(status) => updateStatusMutation.mutate({ id: selectedOrder.id, status })}\n                >\n                  <SelectTrigger data-testid=\"select-order-status\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"pending\">Pending</SelectItem>\n                    <SelectItem value=\"processing\">Processing</SelectItem>\n                    <SelectItem value=\"shipped\">Shipped</SelectItem>\n                    <SelectItem value=\"delivered\">Delivered</SelectItem>\n                    <SelectItem value=\"cancelled\">Cancelled</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Created</p>\n                <p data-testid=\"text-detail-created\">{new Date(selectedOrder.createdAt!).toLocaleString()}</p>\n              </div>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","size_bytes":7350},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/examples/TopSuppliers.tsx":{"content":"import TopSuppliers from '../TopSuppliers';\n\nexport default function TopSuppliersExample() {\n  return <TopSuppliers />;\n}\n","size_bytes":122},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n","size_bytes":1904},"client/src/pages/Help.tsx":{"content":"import { useState } from \"react\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { \n  Search, \n  HelpCircle,\n  ShoppingCart,\n  Users,\n  CreditCard,\n  Truck,\n  Shield,\n  MessageSquare\n} from \"lucide-react\";\n\nexport default function Help() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const helpCategories = [\n    { icon: ShoppingCart, title: \"Getting Started\", count: 8 },\n    { icon: Users, title: \"Account & Profile\", count: 12 },\n    { icon: CreditCard, title: \"Payments & Orders\", count: 15 },\n    { icon: Truck, title: \"Shipping & Delivery\", count: 10 },\n    { icon: Shield, title: \"Trade Assurance\", count: 9 },\n    { icon: MessageSquare, title: \"Communication\", count: 6 },\n  ];\n\n  const faqs = [\n    {\n      category: \"Getting Started\",\n      questions: [\n        {\n          q: \"How do I create an account?\",\n          a: \"Click on 'Sign Up' in the top right corner and fill in your business details. You can register as either a buyer or supplier. Verification may take 1-2 business days.\"\n        },\n        {\n          q: \"What's the difference between a buyer and supplier account?\",\n          a: \"Buyer accounts can browse products, send inquiries, and post RFQs. Supplier accounts can list products, respond to RFQs, and receive inquiries from buyers.\"\n        },\n        {\n          q: \"Is registration free?\",\n          a: \"Yes, basic registration is completely free for both buyers and suppliers. Premium membership options are available with additional benefits.\"\n        },\n      ]\n    },\n    {\n      category: \"Payments & Orders\",\n      questions: [\n        {\n          q: \"What payment methods do you accept?\",\n          a: \"We accept T/T (Bank Transfer), L/C (Letter of Credit), Western Union, and various online payment methods. All payments are protected by our Trade Assurance program.\"\n        },\n        {\n          q: \"How does Trade Assurance work?\",\n          a: \"Trade Assurance protects your payment until you confirm receipt of your order. If products don't match the description or aren't shipped on time, you can request a refund.\"\n        },\n        {\n          q: \"Can I get a sample before placing a bulk order?\",\n          a: \"Yes, most suppliers offer samples. Sample costs and shipping fees are typically paid by the buyer. Some suppliers offer free samples for qualified buyers.\"\n        },\n      ]\n    },\n    {\n      category: \"Shipping & Delivery\",\n      questions: [\n        {\n          q: \"How long does shipping take?\",\n          a: \"Shipping time varies by location and shipping method. Express shipping typically takes 3-7 days, standard shipping 7-15 days. Custom orders may have longer production lead times.\"\n        },\n        {\n          q: \"Who pays for shipping?\",\n          a: \"Shipping terms are negotiated between buyer and supplier. Common terms include FOB (buyer pays shipping) and CIF (supplier pays to destination port).\"\n        },\n        {\n          q: \"Can I track my shipment?\",\n          a: \"Yes, once your order ships, you'll receive a tracking number to monitor your shipment. You can track it in your buyer dashboard.\"\n        },\n      ]\n    },\n    {\n      category: \"RFQ & Inquiries\",\n      questions: [\n        {\n          q: \"What is an RFQ?\",\n          a: \"RFQ stands for Request for Quotation. It's a way to post your specific product requirements and receive quotes from multiple verified suppliers.\"\n        },\n        {\n          q: \"How do I send an inquiry?\",\n          a: \"On any product page, click 'Contact Supplier' or 'Request Quote'. Fill in your requirements including quantity, target price, and delivery needs.\"\n        },\n        {\n          q: \"How quickly will suppliers respond?\",\n          a: \"Most verified suppliers respond within 24 hours. Gold suppliers typically respond within 2-4 hours. Response times are shown on supplier profiles.\"\n        },\n      ]\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <div className=\"bg-gradient-to-r from-primary/10 to-primary/5 py-16\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n            <HelpCircle className=\"w-16 h-16 text-primary mx-auto mb-6\" />\n            <h1 className=\"text-4xl font-bold mb-4\">How can we help you?</h1>\n            <p className=\"text-lg text-muted-foreground mb-8\">\n              Search our help center or browse by category\n            </p>\n            <div className=\"relative max-w-2xl mx-auto\">\n              <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n              <Input\n                placeholder=\"Search for answers...\"\n                className=\"pl-12 h-14 text-lg bg-background\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                data-testid=\"input-search-help\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\n          <h2 className=\"text-2xl font-bold mb-8\">Browse by Category</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-16\">\n            {helpCategories.map((category, index) => {\n              const Icon = category.icon;\n              return (\n                <Card key={index} className=\"hover:shadow-lg transition-shadow cursor-pointer\" data-testid={`category-${index}`}>\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center gap-4\">\n                      <div className=\"w-12 h-12 rounded-full bg-primary/10 flex items-center justify-center\">\n                        <Icon className=\"w-6 h-6 text-primary\" />\n                      </div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"font-semibold text-lg mb-1\">{category.title}</h3>\n                        <p className=\"text-sm text-muted-foreground\">{category.count} articles</p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n\n          <h2 className=\"text-2xl font-bold mb-8\">Frequently Asked Questions</h2>\n          <div className=\"space-y-8\">\n            {faqs.map((section, sectionIndex) => (\n              <div key={sectionIndex}>\n                <h3 className=\"text-xl font-semibold mb-4\">{section.category}</h3>\n                <Accordion type=\"single\" collapsible className=\"w-full\">\n                  {section.questions.map((faq, faqIndex) => (\n                    <AccordionItem key={faqIndex} value={`${sectionIndex}-${faqIndex}`}>\n                      <AccordionTrigger data-testid={`faq-question-${sectionIndex}-${faqIndex}`}>\n                        {faq.q}\n                      </AccordionTrigger>\n                      <AccordionContent data-testid={`faq-answer-${sectionIndex}-${faqIndex}`}>\n                        <p className=\"text-muted-foreground\">{faq.a}</p>\n                      </AccordionContent>\n                    </AccordionItem>\n                  ))}\n                </Accordion>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"mt-16\">\n            <Card className=\"bg-muted\">\n              <CardContent className=\"p-8 text-center\">\n                <h3 className=\"text-2xl font-bold mb-4\">Still need help?</h3>\n                <p className=\"text-muted-foreground mb-6\">\n                  Can't find what you're looking for? Our support team is here to help.\n                </p>\n                <div className=\"flex gap-4 justify-center\">\n                  <Button size=\"lg\" data-testid=\"button-contact-support\">Contact Support</Button>\n                  <Button size=\"lg\" variant=\"outline\" data-testid=\"button-live-chat\">Live Chat</Button>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":8313},"client/src/components/examples/RFQCard.tsx":{"content":"import RFQCard from '../RFQCard';\n\nexport default function RFQCardExample() {\n  return (\n    <div className=\"p-4 max-w-2xl\">\n      <RFQCard\n        id=\"1\"\n        title=\"Looking for High-Quality Wireless Earbuds - Bulk Order\"\n        quantity=\"5,000 units\"\n        budget=\"$15-20 per unit\"\n        location=\"United States\"\n        timeRemaining=\"3 days left\"\n        quotations={12}\n        category=\"Electronics\"\n      />\n    </div>\n  );\n}\n","size_bytes":441},"client/src/components/Header.tsx":{"content":"import { Search, ShoppingCart, User, Globe, Menu, ChevronDown } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Link, useLocation } from \"wouter\";\nimport { useState } from \"react\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetTrigger,\n} from \"@/components/ui/sheet\";\n\nexport default function Header() {\n  const [location] = useLocation();\n  const [isSearchFocused, setIsSearchFocused] = useState(false);\n\n  const isActivePath = (path: string) => {\n    if (path === \"/\" && location === \"/\") return true;\n    if (path !== \"/\" && location.startsWith(path)) return true;\n    return false;\n  };\n\n  return (\n    <header className=\"sticky top-0 z-50 bg-white/95 dark:bg-gray-900/95 backdrop-blur-xl border-b border-gray-200/50 dark:border-gray-800/50 shadow-sm\">\n      {/* Top Utility Bar */}\n      <div className=\"bg-card border-b border-border hidden md:block\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-10\">\n            <div className=\"flex items-center gap-4 lg:gap-6 text-sm\">\n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <button className=\"flex items-center gap-1 lg:gap-2 text-muted-foreground hover:text-foreground transition-colors hover-elevate px-2 py-1 rounded-md text-xs lg:text-sm\" data-testid=\"button-language\">\n                    <Globe className=\"w-3 h-3 lg:w-4 lg:h-4\" />\n                    <span className=\"hidden lg:inline\">English - USD</span>\n                    <span className=\"lg:hidden\">EN-USD</span>\n                    <ChevronDown className=\"w-3 h-3 ml-0.5 lg:ml-1\" />\n                  </button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"start\">\n                  <DropdownMenuItem>English - USD</DropdownMenuItem>\n                  <DropdownMenuItem>中文 - CNY</DropdownMenuItem>\n                  <DropdownMenuItem>Español - EUR</DropdownMenuItem>\n                  <DropdownMenuItem>Français - EUR</DropdownMenuItem>\n                </DropdownMenuContent>\n              </DropdownMenu>\n            </div>\n            <div className=\"flex items-center gap-3 lg:gap-6 text-xs lg:text-sm\">\n              <Link href=\"/dashboard/buyer\" className=\"text-muted-foreground hover:text-primary transition-colors hover-elevate px-2 py-1 rounded-md\" data-testid=\"link-buyer-center\">\n                Buyer Center\n              </Link>\n              <Link href=\"/help\" className=\"text-muted-foreground hover:text-primary transition-colors hover-elevate px-2 py-1 rounded-md\" data-testid=\"link-help\">\n                Help\n              </Link>\n              <Link href=\"/login\" className=\"text-muted-foreground hover:text-primary transition-colors hover-elevate px-2 py-1 rounded-md\" data-testid=\"link-signin\">\n                Sign In\n              </Link>\n              <Button size=\"sm\" className=\"h-7 text-xs\" data-testid=\"link-join\" asChild>\n                <Link href=\"/signup\">Join Free</Link>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Header */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16 lg:h-20 gap-4\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"flex items-center gap-3 flex-shrink-0 group\" data-testid=\"link-home\">\n            <div className=\"w-10 h-10 bg-gradient-to-br from-primary to-primary/80 rounded-xl flex items-center justify-center shadow-md group-hover:shadow-lg transition-shadow\">\n              <span className=\"text-white font-bold text-xl\">G</span>\n            </div>\n            <div className=\"hidden sm:block\">\n              <div className=\"text-xl lg:text-2xl font-bold bg-gradient-to-r from-primary to-primary/80 bg-clip-text text-transparent\">Global Trade Hub</div>\n              <div className=\"text-xs text-muted-foreground\">B2B Marketplace</div>\n            </div>\n          </Link>\n\n          {/* Enhanced Search Bar */}\n          <div className=\"flex-1 max-w-3xl mx-2 sm:mx-4 hidden sm:block\">\n            <div className={`relative transition-all duration-200 ${isSearchFocused ? 'scale-[1.02]' : ''}`}>\n              <div className=\"relative flex items-center bg-gray-50 dark:bg-gray-800/50 border-2 border-gray-200 dark:border-gray-700 rounded-xl overflow-hidden hover:border-primary/50 dark:hover:border-primary/50 transition-all duration-200 hover-elevate\">\n                <div className=\"flex items-center pl-3 sm:pl-4 pr-1 sm:pr-2\">\n                  <Search className=\"w-4 h-4 sm:w-5 sm:h-5 text-gray-400 dark:text-gray-500\" />\n                </div>\n                <Input\n                  placeholder=\"Search products...\"\n                  className=\"flex-1 border-0 focus-visible:ring-0 h-10 sm:h-12 bg-transparent text-sm sm:text-base placeholder:text-gray-400 dark:placeholder:text-gray-500 px-1 sm:px-2\"\n                  data-testid=\"input-search\"\n                  onFocus={() => setIsSearchFocused(true)}\n                  onBlur={() => setIsSearchFocused(false)}\n                />\n                <div className=\"hidden md:block h-8 w-px bg-gray-200 dark:bg-gray-700 mx-2\" />\n                <div className=\"hidden md:block\">\n                  <Select defaultValue=\"all\">\n                    <SelectTrigger className=\"w-32 lg:w-40 border-0 rounded-none focus:ring-0 bg-transparent hover:bg-gray-100 dark:hover:bg-gray-700/50 transition-colors h-10 sm:h-12 text-sm\" data-testid=\"select-category\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All Categories</SelectItem>\n                      <SelectItem value=\"electronics\">Electronics</SelectItem>\n                      <SelectItem value=\"fashion\">Fashion</SelectItem>\n                      <SelectItem value=\"machinery\">Machinery</SelectItem>\n                      <SelectItem value=\"automotive\">Automotive</SelectItem>\n                      <SelectItem value=\"home\">Home & Garden</SelectItem>\n                      <SelectItem value=\"lighting\">Lighting</SelectItem>\n                      <SelectItem value=\"packaging\">Packaging</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <Button \n                  className=\"h-10 sm:h-12 px-4 sm:px-8 rounded-none rounded-r-xl m-0 shadow-none\" \n                  data-testid=\"button-search\"\n                >\n                  <Search className=\"w-4 h-4 sm:w-5 sm:h-5 sm:mr-2\" />\n                  <span className=\"font-semibold hidden sm:inline\">Search</span>\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          {/* User Actions */}\n          <div className=\"flex items-center gap-1 sm:gap-2 flex-shrink-0\">\n            {/* Mobile Search Button */}\n            <Button variant=\"ghost\" size=\"icon\" className=\"sm:hidden h-10 w-10\">\n              <Search className=\"w-5 h-5\" />\n            </Button>\n            \n            {/* Cart */}\n            <Link href=\"/inquiry-cart\" data-testid=\"link-inquiry-cart\">\n              <Button variant=\"ghost\" size=\"icon\" className=\"relative h-10 w-10\">\n                <ShoppingCart className=\"w-5 h-5\" />\n                <span className=\"absolute -top-1 -right-1 bg-primary text-primary-foreground text-xs w-5 h-5 rounded-full flex items-center justify-center font-medium\" data-testid=\"text-cart-count\">\n                  3\n                </span>\n              </Button>\n            </Link>\n\n            {/* Mobile Menu */}\n            <Sheet>\n              <SheetTrigger asChild>\n                <Button variant=\"ghost\" size=\"icon\" className=\"lg:hidden h-10 w-10\">\n                  <Menu className=\"w-5 h-5\" />\n                </Button>\n              </SheetTrigger>\n              <SheetContent side=\"right\" className=\"w-80\">\n                <div className=\"flex flex-col space-y-4 mt-8\">\n                  <Link href=\"/login\" className=\"text-lg font-medium hover:text-primary transition-colors\">\n                    Sign In\n                  </Link>\n                  <Link href=\"/signup\" className=\"text-lg font-medium hover:text-primary transition-colors\">\n                    Join Free\n                  </Link>\n                  <div className=\"border-t pt-4\">\n                    <Link href=\"/categories\" className=\"block py-3 text-lg font-medium hover:text-primary transition-colors\">\n                      Categories\n                    </Link>\n                    <Link href=\"/products\" className=\"block py-3 text-lg font-medium hover:text-primary transition-colors\">\n                      Products\n                    </Link>\n                    <Link href=\"/find-suppliers\" className=\"block py-3 text-lg font-medium hover:text-primary transition-colors\">\n                      Suppliers\n                    </Link>\n                    <Link href=\"/rfq/browse\" className=\"block py-3 text-lg font-medium hover:text-primary transition-colors\">\n                      RFQ\n                    </Link>\n                    <Link href=\"/ready-to-ship\" className=\"block py-3 text-lg font-medium hover:text-primary transition-colors\">\n                      Ready to Ship\n                    </Link>\n                    <Link href=\"/trade-shows\" className=\"block py-3 text-lg font-medium hover:text-primary transition-colors\">\n                      Trade Shows\n                    </Link>\n                    <Link href=\"/buyer-protection\" className=\"block py-3 text-lg font-medium hover:text-primary transition-colors\">\n                      Buyer Protection\n                    </Link>\n                  </div>\n                </div>\n              </SheetContent>\n            </Sheet>\n\n            {/* User Menu */}\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"ghost\" size=\"icon\" className=\"hidden sm:flex h-10 w-10\" data-testid=\"button-user-menu\">\n                  <User className=\"w-5 h-5\" />\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent align=\"end\" className=\"w-56\">\n                <DropdownMenuItem data-testid=\"menu-my-account\">\n                  <User className=\"w-4 h-4 mr-2\" />\n                  My Account\n                </DropdownMenuItem>\n                <DropdownMenuSeparator />\n                <Link href=\"/my-orders\"><DropdownMenuItem data-testid=\"menu-my-orders\">My Orders</DropdownMenuItem></Link>\n                <Link href=\"/my-rfqs\"><DropdownMenuItem data-testid=\"menu-my-rfqs\">My RFQs</DropdownMenuItem></Link>\n                <Link href=\"/favorites\"><DropdownMenuItem data-testid=\"menu-favorites\">Favorites</DropdownMenuItem></Link>\n                <Link href=\"/messages\"><DropdownMenuItem data-testid=\"menu-messages\">Messages</DropdownMenuItem></Link>\n                <DropdownMenuSeparator />\n                <DropdownMenuItem data-testid=\"menu-sign-out\">Sign Out</DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation Bar */}\n      <div className=\"border-t border-border bg-background/50 backdrop-blur-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <nav className=\"hidden lg:flex items-center gap-8 h-12\">\n            <Link \n              href=\"/categories\" \n              className={`text-sm font-medium transition-colors hover:text-primary relative py-3 ${\n                isActivePath(\"/categories\") \n                  ? \"text-primary\" \n                  : \"text-foreground\"\n              }`}\n              data-testid=\"link-categories\"\n            >\n              Categories\n              {isActivePath(\"/categories\") && (\n                <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-primary rounded-full\" />\n              )}\n            </Link>\n            <Link \n              href=\"/products\" \n              className={`text-sm font-medium transition-colors hover:text-primary relative py-3 ${\n                isActivePath(\"/products\") \n                  ? \"text-primary\" \n                  : \"text-foreground\"\n              }`}\n              data-testid=\"link-products\"\n            >\n              Products\n              {isActivePath(\"/products\") && (\n                <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-primary rounded-full\" />\n              )}\n            </Link>\n            <Link \n              href=\"/find-suppliers\" \n              className={`text-sm font-medium transition-colors hover:text-primary relative py-3 ${\n                isActivePath(\"/find-suppliers\") \n                  ? \"text-primary\" \n                  : \"text-foreground\"\n              }`}\n              data-testid=\"link-suppliers\"\n            >\n              Suppliers\n              {isActivePath(\"/find-suppliers\") && (\n                <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-primary rounded-full\" />\n              )}\n            </Link>\n            <Link \n              href=\"/rfq/browse\" \n              className={`text-sm font-medium transition-colors hover:text-primary relative py-3 ${\n                isActivePath(\"/rfq\") \n                  ? \"text-primary\" \n                  : \"text-foreground\"\n              }`}\n              data-testid=\"link-rfq\"\n            >\n              RFQ\n              {isActivePath(\"/rfq\") && (\n                <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-primary rounded-full\" />\n              )}\n            </Link>\n            <Link \n              href=\"/ready-to-ship\" \n              className={`text-sm font-medium transition-colors hover:text-primary relative py-3 ${\n                isActivePath(\"/ready-to-ship\") \n                  ? \"text-primary\" \n                  : \"text-foreground\"\n              }`}\n              data-testid=\"link-ready-ship\"\n            >\n              Ready to Ship\n              {isActivePath(\"/ready-to-ship\") && (\n                <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-primary rounded-full\" />\n              )}\n            </Link>\n            <Link \n              href=\"/trade-shows\" \n              className={`text-sm font-medium transition-colors hover:text-primary relative py-3 ${\n                isActivePath(\"/trade-shows\") \n                  ? \"text-primary\" \n                  : \"text-foreground\"\n              }`}\n              data-testid=\"link-trade-shows\"\n            >\n              Trade Shows\n              {isActivePath(\"/trade-shows\") && (\n                <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-primary rounded-full\" />\n              )}\n            </Link>\n            <Link \n              href=\"/buyer-protection\" \n              className={`text-sm font-medium transition-colors hover:text-primary relative py-3 ${\n                isActivePath(\"/buyer-protection\") \n                  ? \"text-primary\" \n                  : \"text-foreground\"\n              }`}\n              data-testid=\"link-buyer-protection\"\n            >\n              Buyer Protection\n              {isActivePath(\"/buyer-protection\") && (\n                <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-primary rounded-full\" />\n              )}\n            </Link>\n          </nav>\n        </div>\n      </div>\n    </header>\n  );\n}\n","size_bytes":15667},"client/src/pages/admin/AdminCustomers.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Plus, Edit, Trash2, Search } from \"lucide-react\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { insertCustomerSchema, type Customer } from \"@shared/schema\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Switch } from \"@/components/ui/switch\";\nimport type { z } from \"zod\";\n\nexport default function AdminCustomers() {\n  const [search, setSearch] = useState(\"\");\n  const [selectedCustomer, setSelectedCustomer] = useState<Customer | null>(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const { toast } = useToast();\n\n  const { data: customers, isLoading } = useQuery<Customer[]>({\n    queryKey: [\"/api/customers\"],\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: string) => {\n      await apiRequest(\"DELETE\", `/api/customers/${id}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/customers\"] });\n      toast({ title: \"Success\", description: \"Customer deleted successfully\" });\n    },\n  });\n\n  const filteredCustomers = customers?.filter(c => \n    c.email.toLowerCase().includes(search.toLowerCase()) ||\n    c.firstName?.toLowerCase().includes(search.toLowerCase()) ||\n    c.lastName?.toLowerCase().includes(search.toLowerCase()) ||\n    c.company?.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div className=\"p-8\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-3xl font-bold\" data-testid=\"text-customers-title\">Customers</h1>\n        <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n          <DialogTrigger asChild>\n            <Button onClick={() => setSelectedCustomer(null)} data-testid=\"button-add-customer\">\n              <Plus className=\"mr-2 h-4 w-4\" />\n              Add Customer\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"max-w-2xl\">\n            <DialogHeader>\n              <DialogTitle>{selectedCustomer ? \"Edit Customer\" : \"Add Customer\"}</DialogTitle>\n            </DialogHeader>\n            <CustomerForm customer={selectedCustomer} onSuccess={() => setIsDialogOpen(false)} />\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-4\">\n            <div className=\"relative flex-1\">\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n              <Input placeholder=\"Search customers...\" className=\"pl-10\" value={search} onChange={(e) => setSearch(e.target.value)} data-testid=\"input-search-customers\" />\n            </div>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {isLoading ? (\n            <div className=\"text-center py-8\">Loading...</div>\n          ) : filteredCustomers && filteredCustomers.length > 0 ? (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Name</TableHead>\n                  <TableHead>Email</TableHead>\n                  <TableHead>Company</TableHead>\n                  <TableHead>Country</TableHead>\n                  <TableHead>Type</TableHead>\n                  <TableHead className=\"text-right\">Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredCustomers.map((customer) => (\n                  <TableRow key={customer.id} data-testid={`row-customer-${customer.id}`}>\n                    <TableCell className=\"font-medium\" data-testid={`text-name-${customer.id}`}>\n                      {customer.firstName} {customer.lastName}\n                    </TableCell>\n                    <TableCell data-testid={`text-email-${customer.id}`}>{customer.email}</TableCell>\n                    <TableCell data-testid={`text-company-${customer.id}`}>{customer.company || '-'}</TableCell>\n                    <TableCell data-testid={`text-country-${customer.id}`}>{customer.country || '-'}</TableCell>\n                    <TableCell>\n                      <Badge variant=\"outline\" data-testid={`badge-type-${customer.id}`}>{customer.accountType}</Badge>\n                    </TableCell>\n                    <TableCell className=\"text-right\">\n                      <div className=\"flex justify-end gap-2\">\n                        <Button size=\"icon\" variant=\"ghost\" onClick={() => { setSelectedCustomer(customer); setIsDialogOpen(true); }} data-testid={`button-edit-${customer.id}`}>\n                          <Edit className=\"h-4 w-4\" />\n                        </Button>\n                        <Button size=\"icon\" variant=\"ghost\" onClick={() => confirm(\"Delete?\") && deleteMutation.mutate(customer.id)} data-testid={`button-delete-${customer.id}`}>\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          ) : (\n            <div className=\"text-center py-8 text-muted-foreground\">No customers found</div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nfunction CustomerForm({ customer, onSuccess }: { customer: Customer | null; onSuccess: () => void }) {\n  const { toast } = useToast();\n  \n  const form = useForm<z.infer<typeof insertCustomerSchema>>({\n    resolver: zodResolver(insertCustomerSchema),\n    defaultValues: customer || { email: \"\", accountType: \"buyer\", isVerified: false },\n  });\n\n  const mutation = useMutation({\n    mutationFn: async (data: z.infer<typeof insertCustomerSchema>) => {\n      if (customer) {\n        return await apiRequest(\"PATCH\", `/api/customers/${customer.id}`, data);\n      } else {\n        return await apiRequest(\"POST\", \"/api/customers\", data);\n      }\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/customers\"] });\n      toast({ title: \"Success\", description: customer ? \"Customer updated\" : \"Customer created\" });\n      onSuccess();\n    },\n  });\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit((data) => mutation.mutate(data))} className=\"space-y-4\">\n        <div className=\"grid grid-cols-2 gap-4\">\n          <FormField control={form.control} name=\"firstName\" render={({ field }) => (\n            <FormItem>\n              <FormLabel>First Name</FormLabel>\n              <FormControl><Input {...field} value={field.value || \"\"} data-testid=\"input-first-name\" /></FormControl>\n              <FormMessage />\n            </FormItem>\n          )} />\n          \n          <FormField control={form.control} name=\"lastName\" render={({ field }) => (\n            <FormItem>\n              <FormLabel>Last Name</FormLabel>\n              <FormControl><Input {...field} value={field.value || \"\"} data-testid=\"input-last-name\" /></FormControl>\n              <FormMessage />\n            </FormItem>\n          )} />\n        </div>\n\n        <FormField control={form.control} name=\"email\" render={({ field }) => (\n          <FormItem>\n            <FormLabel>Email *</FormLabel>\n            <FormControl><Input {...field} type=\"email\" data-testid=\"input-email\" /></FormControl>\n            <FormMessage />\n          </FormItem>\n        )} />\n\n        <div className=\"grid grid-cols-2 gap-4\">\n          <FormField control={form.control} name=\"company\" render={({ field }) => (\n            <FormItem>\n              <FormLabel>Company</FormLabel>\n              <FormControl><Input {...field} value={field.value || \"\"} data-testid=\"input-company\" /></FormControl>\n              <FormMessage />\n            </FormItem>\n          )} />\n          \n          <FormField control={form.control} name=\"phone\" render={({ field }) => (\n            <FormItem>\n              <FormLabel>Phone</FormLabel>\n              <FormControl><Input {...field} value={field.value || \"\"} data-testid=\"input-phone\" /></FormControl>\n              <FormMessage />\n            </FormItem>\n          )} />\n        </div>\n\n        <FormField control={form.control} name=\"country\" render={({ field }) => (\n          <FormItem>\n            <FormLabel>Country</FormLabel>\n            <FormControl><Input {...field} value={field.value || \"\"} data-testid=\"input-country\" /></FormControl>\n            <FormMessage />\n          </FormItem>\n        )} />\n\n        <FormField control={form.control} name=\"isVerified\" render={({ field }) => (\n          <FormItem className=\"flex items-center gap-2\">\n            <FormControl><Switch checked={field.value || false} onCheckedChange={field.onChange} data-testid=\"switch-verified\" /></FormControl>\n            <FormLabel className=\"!mt-0\">Verified</FormLabel>\n          </FormItem>\n        )} />\n\n        <Button type=\"submit\" disabled={mutation.isPending} data-testid=\"button-save-customer\">\n          {mutation.isPending ? \"Saving...\" : \"Save\"}\n        </Button>\n      </form>\n    </Form>\n  );\n}\n","size_bytes":9611},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/examples/LoadingExamples.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useLoading } from \"@/contexts/LoadingContext\";\nimport { useAsyncLoader } from \"@/hooks/usePageLoader\";\n\nexport default function LoadingExamples() {\n  const { setLoading, setLoadingWithProgress, setProgress } = useLoading();\n  const { withLoader } = useAsyncLoader();\n  const [loadingState, setLoadingState] = useState(\"\");\n\n  // Basic loading example\n  const handleBasicLoading = () => {\n    setLoading(true, \"Processing your request...\");\n    \n    setTimeout(() => {\n      setLoading(false);\n      setLoadingState(\"Basic loading completed!\");\n    }, 2000);\n  };\n\n  // Loading with progress\n  const handleProgressLoading = () => {\n    setLoadingWithProgress(true, \"Uploading files...\", true);\n    setProgress(0);\n    \n    const interval = setInterval(() => {\n      setProgress(prev => {\n        if (prev >= 100) {\n          clearInterval(interval);\n          setTimeout(() => {\n            setLoading(false);\n            setLoadingState(\"Progress loading completed!\");\n          }, 500);\n          return 100;\n        }\n        return prev + Math.random() * 15;\n      });\n    }, 200);\n  };\n\n  // Async loading with error handling\n  const handleAsyncLoading = async () => {\n    try {\n      const result = await withLoader(\n        async () => {\n          // Simulate API call\n          await new Promise(resolve => setTimeout(resolve, 1500));\n          return \"Data loaded successfully!\";\n        },\n        \"Fetching data from server...\",\n        true\n      );\n      setLoadingState(result);\n    } catch (error) {\n      setLoadingState(\"Error occurred during loading\");\n    }\n  };\n\n  // Custom message loading\n  const handleCustomMessage = () => {\n    const messages = [\n      \"Connecting to suppliers...\",\n      \"Loading product catalog...\",\n      \"Preparing your dashboard...\",\n      \"Almost ready...\"\n    ];\n    \n    let currentIndex = 0;\n    setLoading(true, messages[currentIndex]);\n    \n    const interval = setInterval(() => {\n      currentIndex++;\n      if (currentIndex < messages.length) {\n        setLoading(true, messages[currentIndex]);\n      } else {\n        clearInterval(interval);\n        setTimeout(() => {\n          setLoading(false);\n          setLoadingState(\"Custom message loading completed!\");\n        }, 500);\n      }\n    }, 800);\n  };\n\n  return (\n    <div className=\"container mx-auto p-6 space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Loading System Examples</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Button onClick={handleBasicLoading} className=\"w-full\">\n              Basic Loading (2s)\n            </Button>\n            \n            <Button onClick={handleProgressLoading} className=\"w-full\">\n              Progress Loading\n            </Button>\n            \n            <Button onClick={handleAsyncLoading} className=\"w-full\">\n              Async Loading with Progress\n            </Button>\n            \n            <Button onClick={handleCustomMessage} className=\"w-full\">\n              Custom Messages\n            </Button>\n          </div>\n          \n          {loadingState && (\n            <div className=\"mt-4 p-4 bg-green-50 dark:bg-green-900/20 rounded-lg\">\n              <p className=\"text-green-800 dark:text-green-200\">{loadingState}</p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":3576},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/examples/CategoryGrid.tsx":{"content":"import CategoryGrid from '../CategoryGrid';\n\nexport default function CategoryGridExample() {\n  return <CategoryGrid />;\n}\n","size_bytes":122},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"server/storage.ts":{"content":"import { \n  type User, type InsertUser,\n  type Product, type InsertProduct,\n  type Category, type InsertCategory,\n  type Customer, type InsertCustomer,\n  type Supplier, type InsertSupplier,\n  type Order, type InsertOrder\n} from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  // User operations\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  \n  // Product operations\n  getProducts(filters?: { categoryId?: string; search?: string; isPublished?: boolean }): Promise<Product[]>;\n  getProduct(id: string): Promise<Product | undefined>;\n  createProduct(product: InsertProduct): Promise<Product>;\n  updateProduct(id: string, product: Partial<InsertProduct>): Promise<Product | undefined>;\n  deleteProduct(id: string): Promise<boolean>;\n  bulkCreateProducts(products: InsertProduct[]): Promise<Product[]>;\n  \n  // Category operations\n  getCategories(): Promise<Category[]>;\n  getCategory(id: string): Promise<Category | undefined>;\n  createCategory(category: InsertCategory): Promise<Category>;\n  updateCategory(id: string, category: Partial<InsertCategory>): Promise<Category | undefined>;\n  deleteCategory(id: string): Promise<boolean>;\n  \n  // Customer operations\n  getCustomers(): Promise<Customer[]>;\n  getCustomer(id: string): Promise<Customer | undefined>;\n  createCustomer(customer: InsertCustomer): Promise<Customer>;\n  updateCustomer(id: string, customer: Partial<InsertCustomer>): Promise<Customer | undefined>;\n  deleteCustomer(id: string): Promise<boolean>;\n  \n  // Supplier operations\n  getSuppliers(): Promise<Supplier[]>;\n  getSupplier(id: string): Promise<Supplier | undefined>;\n  createSupplier(supplier: InsertSupplier): Promise<Supplier>;\n  updateSupplier(id: string, supplier: Partial<InsertSupplier>): Promise<Supplier | undefined>;\n  deleteSupplier(id: string): Promise<boolean>;\n  \n  // Order operations\n  getOrders(filters?: { customerId?: string; supplierId?: string; status?: string }): Promise<Order[]>;\n  getOrder(id: string): Promise<Order | undefined>;\n  createOrder(order: InsertOrder): Promise<Order>;\n  updateOrder(id: string, order: Partial<InsertOrder>): Promise<Order | undefined>;\n  deleteOrder(id: string): Promise<boolean>;\n  \n  // Analytics\n  getAnalytics(): Promise<{\n    totalProducts: number;\n    totalOrders: number;\n    totalCustomers: number;\n    totalSuppliers: number;\n    totalRevenue: number;\n    recentOrders: Order[];\n  }>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private products: Map<string, Product>;\n  private categories: Map<string, Category>;\n  private customers: Map<string, Customer>;\n  private suppliers: Map<string, Supplier>;\n  private orders: Map<string, Order>;\n\n  constructor() {\n    this.users = new Map();\n    this.products = new Map();\n    this.categories = new Map();\n    this.customers = new Map();\n    this.suppliers = new Map();\n    this.orders = new Map();\n  }\n\n  // User operations\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n  \n  // Product operations\n  async getProducts(filters?: { categoryId?: string; search?: string; isPublished?: boolean }): Promise<Product[]> {\n    let products = Array.from(this.products.values());\n    \n    if (filters?.categoryId) {\n      products = products.filter(p => p.categoryId === filters.categoryId);\n    }\n    \n    if (filters?.search) {\n      const search = filters.search.toLowerCase();\n      products = products.filter(p => \n        p.name.toLowerCase().includes(search) ||\n        p.description?.toLowerCase().includes(search) ||\n        p.sku?.toLowerCase().includes(search)\n      );\n    }\n    \n    if (filters?.isPublished !== undefined) {\n      products = products.filter(p => p.isPublished === filters.isPublished);\n    }\n    \n    return products;\n  }\n  \n  async getProduct(id: string): Promise<Product | undefined> {\n    return this.products.get(id);\n  }\n  \n  async createProduct(product: InsertProduct): Promise<Product> {\n    const id = randomUUID();\n    const now = new Date();\n    const newProduct: Product = { \n      externalId: null,\n      type: \"simple\",\n      sku: null,\n      gtin: null,\n      shortDescription: null,\n      description: null,\n      categoryId: null,\n      tags: null,\n      images: null,\n      regularPrice: null,\n      salePrice: null,\n      salePriceStartDate: null,\n      salePriceEndDate: null,\n      taxStatus: \"taxable\",\n      taxClass: null,\n      inStock: true,\n      stockQuantity: 0,\n      lowStockAmount: null,\n      backordersAllowed: false,\n      soldIndividually: false,\n      weight: null,\n      length: null,\n      width: null,\n      height: null,\n      shippingClass: null,\n      allowReviews: true,\n      isFeatured: false,\n      isPublished: true,\n      visibility: \"visible\",\n      purchaseNote: null,\n      downloadLimit: null,\n      downloadExpiryDays: null,\n      metaData: null,\n      ...product,\n      id,\n      createdAt: now,\n      updatedAt: now\n    };\n    this.products.set(id, newProduct);\n    return newProduct;\n  }\n  \n  async updateProduct(id: string, product: Partial<InsertProduct>): Promise<Product | undefined> {\n    const existing = this.products.get(id);\n    if (!existing) return undefined;\n    \n    const updated: Product = {\n      ...existing,\n      ...product,\n      id,\n      updatedAt: new Date()\n    };\n    this.products.set(id, updated);\n    return updated;\n  }\n  \n  async deleteProduct(id: string): Promise<boolean> {\n    return this.products.delete(id);\n  }\n  \n  async bulkCreateProducts(products: InsertProduct[]): Promise<Product[]> {\n    const created: Product[] = [];\n    const now = new Date();\n    \n    for (const product of products) {\n      const id = randomUUID();\n      const newProduct: Product = {\n        externalId: null,\n        type: \"simple\",\n        sku: null,\n        gtin: null,\n        shortDescription: null,\n        description: null,\n        categoryId: null,\n        tags: null,\n        images: null,\n        regularPrice: null,\n        salePrice: null,\n        salePriceStartDate: null,\n        salePriceEndDate: null,\n        taxStatus: \"taxable\",\n        taxClass: null,\n        inStock: true,\n        stockQuantity: 0,\n        lowStockAmount: null,\n        backordersAllowed: false,\n        soldIndividually: false,\n        weight: null,\n        length: null,\n        width: null,\n        height: null,\n        shippingClass: null,\n        allowReviews: true,\n        isFeatured: false,\n        isPublished: true,\n        visibility: \"visible\",\n        purchaseNote: null,\n        downloadLimit: null,\n        downloadExpiryDays: null,\n        metaData: null,\n        ...product,\n        id,\n        createdAt: now,\n        updatedAt: now\n      };\n      this.products.set(id, newProduct);\n      created.push(newProduct);\n    }\n    \n    return created;\n  }\n  \n  // Category operations\n  async getCategories(): Promise<Category[]> {\n    return Array.from(this.categories.values());\n  }\n  \n  async getCategory(id: string): Promise<Category | undefined> {\n    return this.categories.get(id);\n  }\n  \n  async createCategory(category: InsertCategory): Promise<Category> {\n    const id = randomUUID();\n    const newCategory: Category = {\n      description: null,\n      parentId: null,\n      imageUrl: null,\n      displayOrder: 0,\n      isActive: true,\n      ...category,\n      id,\n      createdAt: new Date()\n    };\n    this.categories.set(id, newCategory);\n    return newCategory;\n  }\n  \n  async updateCategory(id: string, category: Partial<InsertCategory>): Promise<Category | undefined> {\n    const existing = this.categories.get(id);\n    if (!existing) return undefined;\n    \n    const updated: Category = {\n      ...existing,\n      ...category,\n      id\n    };\n    this.categories.set(id, updated);\n    return updated;\n  }\n  \n  async deleteCategory(id: string): Promise<boolean> {\n    return this.categories.delete(id);\n  }\n  \n  // Customer operations\n  async getCustomers(): Promise<Customer[]> {\n    return Array.from(this.customers.values());\n  }\n  \n  async getCustomer(id: string): Promise<Customer | undefined> {\n    return this.customers.get(id);\n  }\n  \n  async createCustomer(customer: InsertCustomer): Promise<Customer> {\n    const id = randomUUID();\n    const newCustomer: Customer = {\n      firstName: null,\n      lastName: null,\n      company: null,\n      phone: null,\n      country: null,\n      address: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      isVerified: false,\n      accountType: \"buyer\",\n      notes: null,\n      ...customer,\n      id,\n      createdAt: new Date()\n    };\n    this.customers.set(id, newCustomer);\n    return newCustomer;\n  }\n  \n  async updateCustomer(id: string, customer: Partial<InsertCustomer>): Promise<Customer | undefined> {\n    const existing = this.customers.get(id);\n    if (!existing) return undefined;\n    \n    const updated: Customer = {\n      ...existing,\n      ...customer,\n      id\n    };\n    this.customers.set(id, updated);\n    return updated;\n  }\n  \n  async deleteCustomer(id: string): Promise<boolean> {\n    return this.customers.delete(id);\n  }\n  \n  // Supplier operations\n  async getSuppliers(): Promise<Supplier[]> {\n    return Array.from(this.suppliers.values());\n  }\n  \n  async getSupplier(id: string): Promise<Supplier | undefined> {\n    return this.suppliers.get(id);\n  }\n  \n  async createSupplier(supplier: InsertSupplier): Promise<Supplier> {\n    const id = randomUUID();\n    const newSupplier: Supplier = {\n      phone: null,\n      country: null,\n      city: null,\n      address: null,\n      website: null,\n      logoUrl: null,\n      description: null,\n      productsOffered: null,\n      isVerified: false,\n      rating: \"0\",\n      totalOrders: 0,\n      responseTime: null,\n      ...supplier,\n      id,\n      createdAt: new Date()\n    };\n    this.suppliers.set(id, newSupplier);\n    return newSupplier;\n  }\n  \n  async updateSupplier(id: string, supplier: Partial<InsertSupplier>): Promise<Supplier | undefined> {\n    const existing = this.suppliers.get(id);\n    if (!existing) return undefined;\n    \n    const updated: Supplier = {\n      ...existing,\n      ...supplier,\n      id\n    };\n    this.suppliers.set(id, updated);\n    return updated;\n  }\n  \n  async deleteSupplier(id: string): Promise<boolean> {\n    return this.suppliers.delete(id);\n  }\n  \n  // Order operations\n  async getOrders(filters?: { customerId?: string; supplierId?: string; status?: string }): Promise<Order[]> {\n    let orders = Array.from(this.orders.values());\n    \n    if (filters?.customerId) {\n      orders = orders.filter(o => o.customerId === filters.customerId);\n    }\n    \n    if (filters?.supplierId) {\n      orders = orders.filter(o => o.supplierId === filters.supplierId);\n    }\n    \n    if (filters?.status) {\n      orders = orders.filter(o => o.status === filters.status);\n    }\n    \n    return orders;\n  }\n  \n  async getOrder(id: string): Promise<Order | undefined> {\n    return this.orders.get(id);\n  }\n  \n  async createOrder(order: InsertOrder): Promise<Order> {\n    const id = randomUUID();\n    const now = new Date();\n    const newOrder: Order = {\n      customerId: null,\n      supplierId: null,\n      status: \"pending\",\n      shippingAmount: \"0\",\n      taxAmount: \"0\",\n      shippingAddress: null,\n      billingAddress: null,\n      paymentMethod: null,\n      paymentStatus: \"pending\",\n      trackingNumber: null,\n      notes: null,\n      ...order,\n      id,\n      createdAt: now,\n      updatedAt: now\n    };\n    this.orders.set(id, newOrder);\n    return newOrder;\n  }\n  \n  async updateOrder(id: string, order: Partial<InsertOrder>): Promise<Order | undefined> {\n    const existing = this.orders.get(id);\n    if (!existing) return undefined;\n    \n    const updated: Order = {\n      ...existing,\n      ...order,\n      id,\n      updatedAt: new Date()\n    };\n    this.orders.set(id, updated);\n    return updated;\n  }\n  \n  async deleteOrder(id: string): Promise<boolean> {\n    return this.orders.delete(id);\n  }\n  \n  // Analytics\n  async getAnalytics() {\n    const totalOrders = this.orders.size;\n    const totalRevenue = Array.from(this.orders.values()).reduce((sum, order) => {\n      return sum + parseFloat(order.totalAmount as any || 0);\n    }, 0);\n    \n    const recentOrders = Array.from(this.orders.values())\n      .sort((a, b) => (b.createdAt?.getTime() || 0) - (a.createdAt?.getTime() || 0))\n      .slice(0, 5);\n    \n    return {\n      totalProducts: this.products.size,\n      totalOrders,\n      totalCustomers: this.customers.size,\n      totalSuppliers: this.suppliers.size,\n      totalRevenue,\n      recentOrders\n    };\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":13089},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"client/src/pages/Messages.tsx":{"content":"import { useState } from \"react\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card } from \"@/components/ui/card\";\nimport { \n  Search,\n  Send,\n  Paperclip,\n  MoreVertical,\n  Circle\n} from \"lucide-react\";\n\nexport default function Messages() {\n  const [activeConversation, setActiveConversation] = useState(\"1\");\n  const [message, setMessage] = useState(\"\");\n\n  //todo: remove mock functionality\n  const conversations = [\n    {\n      id: \"1\",\n      supplier: \"AudioTech Pro\",\n      avatar: \"AP\",\n      lastMessage: \"Yes, we can customize the packaging with your logo\",\n      timestamp: \"10:30 AM\",\n      unread: 2,\n      online: true,\n    },\n    {\n      id: \"2\",\n      supplier: \"Global Electronics\",\n      avatar: \"GE\",\n      lastMessage: \"The samples will be shipped tomorrow\",\n      timestamp: \"Yesterday\",\n      unread: 0,\n      online: false,\n    },\n    {\n      id: \"3\",\n      supplier: \"Fashion Textile Ltd\",\n      avatar: \"FT\",\n      lastMessage: \"We can offer $4.50 per piece for 10K units\",\n      timestamp: \"2 days ago\",\n      unread: 1,\n      online: true,\n    },\n  ];\n\n  const currentMessages = [\n    { id: 1, sender: \"supplier\", text: \"Hello! Thank you for your inquiry about our wireless headphones.\", time: \"9:45 AM\" },\n    { id: 2, sender: \"me\", text: \"Hi, I'm interested in ordering 5000 units. Can you provide a quote?\", time: \"9:50 AM\" },\n    { id: 3, sender: \"supplier\", text: \"For 5000 units, we can offer $28 per piece. This includes customization options.\", time: \"10:15 AM\" },\n    { id: 4, sender: \"me\", text: \"That sounds good. Can we customize the packaging with our logo?\", time: \"10:20 AM\" },\n    { id: 5, sender: \"supplier\", text: \"Yes, we can customize the packaging with your logo. There's a one-time setup fee of $500 for the custom packaging design.\", time: \"10:30 AM\" },\n  ];\n\n  const handleSend = () => {\n    if (message.trim()) {\n      console.log(\"Sending message:\", message);\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <h1 className=\"text-3xl font-bold mb-8\">Messages</h1>\n\n          <Card className=\"h-[600px] flex overflow-hidden\">\n            <div className=\"w-80 border-r flex flex-col\">\n              <div className=\"p-4 border-b\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground\" />\n                  <Input\n                    placeholder=\"Search conversations...\"\n                    className=\"pl-9\"\n                    data-testid=\"input-search-conversations\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex-1 overflow-y-auto\">\n                {conversations.map((conv) => (\n                  <button\n                    key={conv.id}\n                    onClick={() => setActiveConversation(conv.id)}\n                    className={`w-full p-4 flex items-center gap-3 hover:bg-muted/50 transition-colors border-b ${\n                      activeConversation === conv.id ? 'bg-muted' : ''\n                    }`}\n                    data-testid={`conversation-${conv.id}`}\n                  >\n                    <div className=\"relative\">\n                      <Avatar>\n                        <AvatarFallback className=\"bg-primary text-primary-foreground\">\n                          {conv.avatar}\n                        </AvatarFallback>\n                      </Avatar>\n                      {conv.online && (\n                        <Circle className=\"absolute bottom-0 right-0 w-3 h-3 fill-green-500 text-green-500\" />\n                      )}\n                    </div>\n                    <div className=\"flex-1 text-left\">\n                      <div className=\"flex justify-between items-start mb-1\">\n                        <h4 className=\"font-semibold text-sm\">{conv.supplier}</h4>\n                        <span className=\"text-xs text-muted-foreground\">{conv.timestamp}</span>\n                      </div>\n                      <p className=\"text-sm text-muted-foreground line-clamp-1\">{conv.lastMessage}</p>\n                    </div>\n                    {conv.unread > 0 && (\n                      <Badge className=\"bg-primary\">{conv.unread}</Badge>\n                    )}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"flex-1 flex flex-col\">\n              <div className=\"p-4 border-b flex items-center justify-between\">\n                <div className=\"flex items-center gap-3\">\n                  <Avatar>\n                    <AvatarFallback className=\"bg-primary text-primary-foreground\">AP</AvatarFallback>\n                  </Avatar>\n                  <div>\n                    <h3 className=\"font-semibold\">AudioTech Pro</h3>\n                    <p className=\"text-xs text-muted-foreground\">Online</p>\n                  </div>\n                </div>\n                <Button variant=\"ghost\" size=\"icon\" data-testid=\"button-more-options\">\n                  <MoreVertical className=\"w-4 h-4\" />\n                </Button>\n              </div>\n\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n                {currentMessages.map((msg) => (\n                  <div\n                    key={msg.id}\n                    className={`flex ${msg.sender === 'me' ? 'justify-end' : 'justify-start'}`}\n                    data-testid={`message-${msg.id}`}\n                  >\n                    <div\n                      className={`max-w-[70%] rounded-lg p-3 ${\n                        msg.sender === 'me'\n                          ? 'bg-primary text-primary-foreground'\n                          : 'bg-muted'\n                      }`}\n                    >\n                      <p className=\"text-sm\">{msg.text}</p>\n                      <p className={`text-xs mt-1 ${\n                        msg.sender === 'me' ? 'text-primary-foreground/70' : 'text-muted-foreground'\n                      }`}>\n                        {msg.time}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"p-4 border-t\">\n                <div className=\"flex gap-2\">\n                  <Button variant=\"ghost\" size=\"icon\" data-testid=\"button-attach\">\n                    <Paperclip className=\"w-5 h-5\" />\n                  </Button>\n                  <Input\n                    placeholder=\"Type your message...\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    onKeyPress={(e) => e.key === 'Enter' && handleSend()}\n                    data-testid=\"input-message\"\n                  />\n                  <Button onClick={handleSend} data-testid=\"button-send\">\n                    <Send className=\"w-4 h-4 mr-2\" />\n                    Send\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":7418},"client/src/pages/admin/AdminCategories.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Plus, Edit, Trash2 } from \"lucide-react\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { insertCategorySchema, type Category } from \"@shared/schema\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Switch } from \"@/components/ui/switch\";\nimport type { z } from \"zod\";\n\nexport default function AdminCategories() {\n  const [selectedCategory, setSelectedCategory] = useState<Category | null>(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const { toast } = useToast();\n\n  const { data: categories, isLoading } = useQuery<Category[]>({\n    queryKey: [\"/api/categories\"],\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: string) => {\n      await apiRequest(\"DELETE\", `/api/categories/${id}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/categories\"] });\n      toast({ title: \"Success\", description: \"Category deleted successfully\" });\n    },\n  });\n\n  return (\n    <div className=\"p-8\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-3xl font-bold\" data-testid=\"text-categories-title\">Categories</h1>\n        <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n          <DialogTrigger asChild>\n            <Button onClick={() => setSelectedCategory(null)} data-testid=\"button-add-category\">\n              <Plus className=\"mr-2 h-4 w-4\" />\n              Add Category\n            </Button>\n          </DialogTrigger>\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>{selectedCategory ? \"Edit Category\" : \"Add Category\"}</DialogTitle>\n            </DialogHeader>\n            <CategoryForm category={selectedCategory} onSuccess={() => setIsDialogOpen(false)} />\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      <Card>\n        <CardContent className=\"pt-6\">\n          {isLoading ? (\n            <div className=\"text-center py-8\">Loading...</div>\n          ) : categories && categories.length > 0 ? (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Name</TableHead>\n                  <TableHead>Slug</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead className=\"text-right\">Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {categories.map((category) => (\n                  <TableRow key={category.id} data-testid={`row-category-${category.id}`}>\n                    <TableCell className=\"font-medium\" data-testid={`text-name-${category.id}`}>\n                      {category.name}\n                    </TableCell>\n                    <TableCell data-testid={`text-slug-${category.id}`}>{category.slug}</TableCell>\n                    <TableCell>\n                      <Badge variant={category.isActive ? \"default\" : \"secondary\"} data-testid={`badge-status-${category.id}`}>\n                        {category.isActive ? \"Active\" : \"Inactive\"}\n                      </Badge>\n                    </TableCell>\n                    <TableCell className=\"text-right\">\n                      <div className=\"flex justify-end gap-2\">\n                        <Button size=\"icon\" variant=\"ghost\" onClick={() => { setSelectedCategory(category); setIsDialogOpen(true); }} data-testid={`button-edit-${category.id}`}>\n                          <Edit className=\"h-4 w-4\" />\n                        </Button>\n                        <Button size=\"icon\" variant=\"ghost\" onClick={() => confirm(\"Delete?\") && deleteMutation.mutate(category.id)} data-testid={`button-delete-${category.id}`}>\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          ) : (\n            <div className=\"text-center py-8 text-muted-foreground\">No categories found</div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nfunction CategoryForm({ category, onSuccess }: { category: Category | null; onSuccess: () => void }) {\n  const { toast } = useToast();\n  \n  const form = useForm<z.infer<typeof insertCategorySchema>>({\n    resolver: zodResolver(insertCategorySchema),\n    defaultValues: category || { name: \"\", slug: \"\", isActive: true, displayOrder: 0 },\n  });\n\n  const mutation = useMutation({\n    mutationFn: async (data: z.infer<typeof insertCategorySchema>) => {\n      if (category) {\n        return await apiRequest(\"PATCH\", `/api/categories/${category.id}`, data);\n      } else {\n        return await apiRequest(\"POST\", \"/api/categories\", data);\n      }\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/categories\"] });\n      toast({ title: \"Success\", description: category ? \"Category updated\" : \"Category created\" });\n      onSuccess();\n    },\n  });\n\n  const onSubmit = (data: z.infer<typeof insertCategorySchema>) => {\n    if (!data.slug) {\n      data.slug = data.name.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n    }\n    mutation.mutate(data);\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <FormField control={form.control} name=\"name\" render={({ field }) => (\n          <FormItem>\n            <FormLabel>Name *</FormLabel>\n            <FormControl><Input {...field} data-testid=\"input-category-name\" /></FormControl>\n            <FormMessage />\n          </FormItem>\n        )} />\n        \n        <FormField control={form.control} name=\"slug\" render={({ field }) => (\n          <FormItem>\n            <FormLabel>Slug</FormLabel>\n            <FormControl><Input {...field} value={field.value || \"\"} placeholder=\"auto-generated\" data-testid=\"input-category-slug\" /></FormControl>\n            <FormMessage />\n          </FormItem>\n        )} />\n\n        <FormField control={form.control} name=\"isActive\" render={({ field }) => (\n          <FormItem className=\"flex items-center gap-2\">\n            <FormControl><Switch checked={field.value || false} onCheckedChange={field.onChange} data-testid=\"switch-active\" /></FormControl>\n            <FormLabel className=\"!mt-0\">Active</FormLabel>\n          </FormItem>\n        )} />\n\n        <Button type=\"submit\" disabled={mutation.isPending} data-testid=\"button-save-category\">\n          {mutation.isPending ? \"Saving...\" : \"Save\"}\n        </Button>\n      </form>\n    </Form>\n  );\n}\n","size_bytes":7236},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/hooks/usePageLoader.tsx":{"content":"import { useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useLoading } from \"@/contexts/LoadingContext\";\n\nexport function usePageLoader() {\n  const [location] = useLocation();\n  const { setLoading } = useLoading();\n\n  useEffect(() => {\n    // Show loader when route changes\n    setLoading(true, \"Loading page...\");\n    \n    // Simulate page loading time\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 800); // Adjust timing as needed\n\n    return () => clearTimeout(timer);\n  }, [location, setLoading]);\n}\n\nexport function useAsyncLoader() {\n  const { setLoading, setLoadingWithProgress, setProgress } = useLoading();\n\n  const withLoader = async <T>(\n    asyncFunction: () => Promise<T>,\n    message: string = \"Processing...\",\n    showProgress: boolean = false\n  ): Promise<T> => {\n    try {\n      setLoadingWithProgress(true, message, showProgress);\n      \n      if (showProgress) {\n        // Simulate progress updates\n        const progressInterval = setInterval(() => {\n          setProgress(prev => {\n            if (prev >= 90) return prev;\n            return prev + Math.random() * 10;\n          });\n        }, 200);\n        \n        const result = await asyncFunction();\n        \n        clearInterval(progressInterval);\n        setProgress(100);\n        \n        // Small delay to show 100%\n        setTimeout(() => {\n          setLoading(false);\n        }, 300);\n        \n        return result;\n      } else {\n        const result = await asyncFunction();\n        setLoading(false);\n        return result;\n      }\n    } catch (error) {\n      setLoading(false);\n      throw error;\n    }\n  };\n\n  return { withLoader };\n}\n","size_bytes":1674},"client/src/components/FullScreenLoader.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { Loader2 } from \"lucide-react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\ninterface FullScreenLoaderProps {\n  isLoading: boolean;\n  message?: string;\n  showProgress?: boolean;\n  progress?: number;\n}\n\nexport default function FullScreenLoader({ \n  isLoading, \n  message = \"Loading...\", \n  showProgress = false,\n  progress = 0 \n}: FullScreenLoaderProps) {\n  const [dots, setDots] = useState(\"\");\n\n  useEffect(() => {\n    if (!isLoading) return;\n\n    const interval = setInterval(() => {\n      setDots(prev => {\n        if (prev === \"...\") return \"\";\n        return prev + \".\";\n      });\n    }, 500);\n\n    return () => clearInterval(interval);\n  }, [isLoading]);\n\n  return (\n    <AnimatePresence>\n      {isLoading && (\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.3 }}\n          className=\"fixed inset-0 z-[10000] flex items-center justify-center bg-white/95 dark:bg-gray-900/95 backdrop-blur-sm\"\n        >\n          <motion.div\n            initial={{ scale: 0.8, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            exit={{ scale: 0.8, opacity: 0 }}\n            transition={{ duration: 0.4, ease: \"easeOut\" }}\n            className=\"flex flex-col items-center justify-center space-y-6 p-8\"\n          >\n            {/* Main Loading Spinner */}\n            <div className=\"relative\">\n              <motion.div\n                animate={{ rotate: 360 }}\n                transition={{ duration: 2, repeat: Infinity, ease: \"linear\" }}\n                className=\"h-16 w-16 rounded-full border-4 border-gray-200 dark:border-gray-800\"\n              />\n              <motion.div\n                animate={{ rotate: 360 }}\n                transition={{ duration: 1.5, repeat: Infinity, ease: \"linear\" }}\n                className=\"absolute inset-0 h-16 w-16 rounded-full border-4 border-transparent border-t-gray-600 dark:border-t-gray-400\"\n              />\n              <div className=\"absolute inset-2 h-12 w-12 rounded-full bg-gradient-to-br from-gray-500 to-gray-600 flex items-center justify-center\">\n                <Loader2 className=\"h-6 w-6 text-white animate-spin\" />\n              </div>\n            </div>\n\n            {/* Loading Message */}\n            <div className=\"text-center space-y-2\">\n              <motion.h3\n                initial={{ y: 10, opacity: 0 }}\n                animate={{ y: 0, opacity: 1 }}\n                transition={{ delay: 0.2 }}\n                className=\"text-xl font-semibold text-gray-900 dark:text-white\"\n              >\n                {message}{dots}\n              </motion.h3>\n              <motion.p\n                initial={{ y: 10, opacity: 0 }}\n                animate={{ y: 0, opacity: 1 }}\n                transition={{ delay: 0.4 }}\n                className=\"text-sm text-gray-600 dark:text-gray-400\"\n              >\n                Please wait while we prepare your experience\n              </motion.p>\n            </div>\n\n            {/* Progress Bar */}\n            {showProgress && (\n              <motion.div\n                initial={{ width: 0, opacity: 0 }}\n                animate={{ width: \"100%\", opacity: 1 }}\n                transition={{ delay: 0.6 }}\n                className=\"w-64 space-y-2\"\n              >\n                <div className=\"flex justify-between text-xs text-gray-600 dark:text-gray-400\">\n                  <span>Loading</span>\n                  <span>{Math.round(progress)}%</span>\n                </div>\n                <div className=\"h-2 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden\">\n                  <motion.div\n                    initial={{ width: 0 }}\n                    animate={{ width: `${progress}%` }}\n                    transition={{ duration: 0.5, ease: \"easeOut\" }}\n                    className=\"h-full bg-gradient-to-r from-gray-500 to-gray-600 rounded-full\"\n                  />\n                </div>\n              </motion.div>\n            )}\n\n            {/* Animated Dots */}\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 0.8 }}\n              className=\"flex space-x-1\"\n            >\n              {[0, 1, 2].map((i) => (\n                <motion.div\n                  key={i}\n                  animate={{\n                    scale: [1, 1.2, 1],\n                    opacity: [0.5, 1, 0.5],\n                  }}\n                  transition={{\n                    duration: 1.5,\n                    repeat: Infinity,\n                    delay: i * 0.2,\n                  }}\n                  className=\"h-2 w-2 bg-gray-500 rounded-full\"\n                />\n              ))}\n            </motion.div>\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n}\n","size_bytes":4890},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"client/src/pages/admin/AdminSuppliers.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Plus, Edit, Trash2, Search } from \"lucide-react\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { insertSupplierSchema, type Supplier } from \"@shared/schema\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Switch } from \"@/components/ui/switch\";\nimport type { z } from \"zod\";\n\nexport default function AdminSuppliers() {\n  const [search, setSearch] = useState(\"\");\n  const [selectedSupplier, setSelectedSupplier] = useState<Supplier | null>(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const { toast } = useToast();\n\n  const { data: suppliers, isLoading } = useQuery<Supplier[]>({\n    queryKey: [\"/api/suppliers\"],\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: string) => {\n      await apiRequest(\"DELETE\", `/api/suppliers/${id}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/suppliers\"] });\n      toast({ title: \"Success\", description: \"Supplier deleted successfully\" });\n    },\n  });\n\n  const filteredSuppliers = suppliers?.filter(s => \n    s.name.toLowerCase().includes(search.toLowerCase()) ||\n    s.email.toLowerCase().includes(search.toLowerCase()) ||\n    s.country?.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div className=\"p-8\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-3xl font-bold\" data-testid=\"text-suppliers-title\">Suppliers</h1>\n        <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n          <DialogTrigger asChild>\n            <Button onClick={() => setSelectedSupplier(null)} data-testid=\"button-add-supplier\">\n              <Plus className=\"mr-2 h-4 w-4\" />\n              Add Supplier\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"max-w-2xl\">\n            <DialogHeader>\n              <DialogTitle>{selectedSupplier ? \"Edit Supplier\" : \"Add Supplier\"}</DialogTitle>\n            </DialogHeader>\n            <SupplierForm supplier={selectedSupplier} onSuccess={() => setIsDialogOpen(false)} />\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-4\">\n            <div className=\"relative flex-1\">\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n              <Input placeholder=\"Search suppliers...\" className=\"pl-10\" value={search} onChange={(e) => setSearch(e.target.value)} data-testid=\"input-search-suppliers\" />\n            </div>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {isLoading ? (\n            <div className=\"text-center py-8\">Loading...</div>\n          ) : filteredSuppliers && filteredSuppliers.length > 0 ? (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Name</TableHead>\n                  <TableHead>Email</TableHead>\n                  <TableHead>Country</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead>Orders</TableHead>\n                  <TableHead className=\"text-right\">Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredSuppliers.map((supplier) => (\n                  <TableRow key={supplier.id} data-testid={`row-supplier-${supplier.id}`}>\n                    <TableCell className=\"font-medium\" data-testid={`text-name-${supplier.id}`}>\n                      {supplier.name}\n                    </TableCell>\n                    <TableCell data-testid={`text-email-${supplier.id}`}>{supplier.email}</TableCell>\n                    <TableCell data-testid={`text-country-${supplier.id}`}>{supplier.country || '-'}</TableCell>\n                    <TableCell>\n                      <Badge variant={supplier.isVerified ? \"default\" : \"secondary\"} data-testid={`badge-verified-${supplier.id}`}>\n                        {supplier.isVerified ? \"Verified\" : \"Unverified\"}\n                      </Badge>\n                    </TableCell>\n                    <TableCell data-testid={`text-orders-${supplier.id}`}>{supplier.totalOrders}</TableCell>\n                    <TableCell className=\"text-right\">\n                      <div className=\"flex justify-end gap-2\">\n                        <Button size=\"icon\" variant=\"ghost\" onClick={() => { setSelectedSupplier(supplier); setIsDialogOpen(true); }} data-testid={`button-edit-${supplier.id}`}>\n                          <Edit className=\"h-4 w-4\" />\n                        </Button>\n                        <Button size=\"icon\" variant=\"ghost\" onClick={() => confirm(\"Delete?\") && deleteMutation.mutate(supplier.id)} data-testid={`button-delete-${supplier.id}`}>\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          ) : (\n            <div className=\"text-center py-8 text-muted-foreground\">No suppliers found</div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nfunction SupplierForm({ supplier, onSuccess }: { supplier: Supplier | null; onSuccess: () => void }) {\n  const { toast } = useToast();\n  \n  const form = useForm<z.infer<typeof insertSupplierSchema>>({\n    resolver: zodResolver(insertSupplierSchema),\n    defaultValues: supplier || { name: \"\", email: \"\", isVerified: false, totalOrders: 0 },\n  });\n\n  const mutation = useMutation({\n    mutationFn: async (data: z.infer<typeof insertSupplierSchema>) => {\n      if (supplier) {\n        return await apiRequest(\"PATCH\", `/api/suppliers/${supplier.id}`, data);\n      } else {\n        return await apiRequest(\"POST\", \"/api/suppliers\", data);\n      }\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/suppliers\"] });\n      toast({ title: \"Success\", description: supplier ? \"Supplier updated\" : \"Supplier created\" });\n      onSuccess();\n    },\n  });\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit((data) => mutation.mutate(data))} className=\"space-y-4\">\n        <FormField control={form.control} name=\"name\" render={({ field }) => (\n          <FormItem>\n            <FormLabel>Name *</FormLabel>\n            <FormControl><Input {...field} data-testid=\"input-supplier-name\" /></FormControl>\n            <FormMessage />\n          </FormItem>\n        )} />\n\n        <div className=\"grid grid-cols-2 gap-4\">\n          <FormField control={form.control} name=\"email\" render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email *</FormLabel>\n              <FormControl><Input {...field} type=\"email\" data-testid=\"input-email\" /></FormControl>\n              <FormMessage />\n            </FormItem>\n          )} />\n          \n          <FormField control={form.control} name=\"phone\" render={({ field }) => (\n            <FormItem>\n              <FormLabel>Phone</FormLabel>\n              <FormControl><Input {...field} value={field.value || \"\"} data-testid=\"input-phone\" /></FormControl>\n              <FormMessage />\n            </FormItem>\n          )} />\n        </div>\n\n        <div className=\"grid grid-cols-2 gap-4\">\n          <FormField control={form.control} name=\"country\" render={({ field }) => (\n            <FormItem>\n              <FormLabel>Country</FormLabel>\n              <FormControl><Input {...field} value={field.value || \"\"} data-testid=\"input-country\" /></FormControl>\n              <FormMessage />\n            </FormItem>\n          )} />\n          \n          <FormField control={form.control} name=\"city\" render={({ field }) => (\n            <FormItem>\n              <FormLabel>City</FormLabel>\n              <FormControl><Input {...field} value={field.value || \"\"} data-testid=\"input-city\" /></FormControl>\n              <FormMessage />\n            </FormItem>\n          )} />\n        </div>\n\n        <FormField control={form.control} name=\"website\" render={({ field }) => (\n          <FormItem>\n            <FormLabel>Website</FormLabel>\n            <FormControl><Input {...field} value={field.value || \"\"} placeholder=\"https://\" data-testid=\"input-website\" /></FormControl>\n            <FormMessage />\n          </FormItem>\n        )} />\n\n        <FormField control={form.control} name=\"isVerified\" render={({ field }) => (\n          <FormItem className=\"flex items-center gap-2\">\n            <FormControl><Switch checked={field.value || false} onCheckedChange={field.onChange} data-testid=\"switch-verified\" /></FormControl>\n            <FormLabel className=\"!mt-0\">Verified</FormLabel>\n          </FormItem>\n        )} />\n\n        <Button type=\"submit\" disabled={mutation.isPending} data-testid=\"button-save-supplier\">\n          {mutation.isPending ? \"Saving...\" : \"Save\"}\n        </Button>\n      </form>\n    </Form>\n  );\n}\n","size_bytes":9611},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/HeroSection.tsx":{"content":"import { Search, ArrowRight, Globe, Users, TrendingUp } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\n\nexport default function HeroSection() {\n  return (\n    <div className=\"relative min-h-[600px] md:min-h-[700px] flex items-center overflow-hidden bg-gradient-to-br from-gray-800 via-gray-700 to-gray-600\">\n      {/* Animated Background Elements */}\n      <div className=\"absolute inset-0\">\n        <div className=\"absolute top-20 right-20 w-96 h-96 bg-gradient-to-r from-gray-500/20 to-gray-400/20 rounded-full blur-3xl animate-pulse\" />\n        <div className=\"absolute bottom-20 left-20 w-80 h-80 bg-gradient-to-r from-gray-600/20 to-gray-500/20 rounded-full blur-3xl animate-pulse\" style={{ animationDelay: '1s' }} />\n        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[600px] h-[600px] bg-gradient-to-r from-gray-600/10 to-gray-500/10 rounded-full blur-3xl animate-pulse\" style={{ animationDelay: '2s' }} />\n      </div>\n\n      {/* Grid Pattern Overlay */}\n      <div className=\"absolute inset-0 opacity-5\">\n        <div className=\"h-full w-full\" style={{\n          backgroundImage: `radial-gradient(circle at 1px 1px, white 1px, transparent 0)`,\n          backgroundSize: '40px 40px'\n        }} />\n      </div>\n      \n      <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 w-full py-20\">\n        <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n          {/* Left Content */}\n          <div className=\"space-y-8\">\n            <div className=\"space-y-6\">\n              <div className=\"inline-flex items-center gap-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-full px-4 py-2 text-sm text-white/90\">\n                <Globe className=\"w-4 h-4\" />\n                <span>Connecting 190+ Countries</span>\n              </div>\n              \n              <h1 className=\"text-4xl md:text-6xl lg:text-7xl font-bold leading-tight\">\n                <span className=\"text-white\">Leading B2B</span>\n                <br />\n                <span className=\"bg-gradient-to-r from-gray-200 to-gray-300 bg-clip-text text-transparent\">\n                  Marketplace\n                </span>\n              </h1>\n              \n              <p className=\"text-xl md:text-2xl text-white/90 leading-relaxed max-w-2xl\">\n                Connect with verified suppliers worldwide. Get competitive quotes and scale your business globally with confidence.\n              </p>\n            </div>\n\n            {/* Enhanced Search Bar */}\n            <div className=\"space-y-6\">\n              <div className=\"bg-white/10 backdrop-blur-xl border border-white/20 rounded-2xl p-2 shadow-2xl\">\n                <div className=\"flex gap-2\">\n                  <div className=\"flex-1 flex items-center bg-white rounded-xl overflow-hidden shadow-lg\">\n                    <div className=\"flex items-center px-4\">\n                      <Search className=\"w-5 h-5 text-gray-400 mr-3\" />\n                      <Input\n                        placeholder=\"What are you looking for?\"\n                        className=\"flex-1 border-0 focus-visible:ring-0 h-14 text-gray-900 placeholder:text-gray-500 text-lg\"\n                        data-testid=\"input-hero-search\"\n                      />\n                    </div>\n                    <Select defaultValue=\"all\">\n                      <SelectTrigger className=\"w-48 border-0 border-l border-gray-200 rounded-none focus:ring-0 text-gray-700 bg-gray-50\" data-testid=\"select-hero-category\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"all\">All Categories</SelectItem>\n                        <SelectItem value=\"electronics\">Electronics</SelectItem>\n                        <SelectItem value=\"fashion\">Fashion</SelectItem>\n                        <SelectItem value=\"machinery\">Machinery</SelectItem>\n                        <SelectItem value=\"automotive\">Automotive</SelectItem>\n                        <SelectItem value=\"home\">Home & Garden</SelectItem>\n                        <SelectItem value=\"packaging\">Packaging</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <Button size=\"lg\" className=\"h-14 px-8 shadow-lg hover:shadow-xl transition-all duration-200\" data-testid=\"button-hero-search\">\n                    <Search className=\"w-5 h-5 mr-2\" />\n                    Search\n                  </Button>\n                </div>\n              </div>\n              \n              <div className=\"flex flex-wrap gap-4\">\n                <Button size=\"lg\" className=\"h-12 px-8 bg-white text-primary hover:bg-white/90 shadow-lg hover:shadow-xl transition-all duration-200 group no-default-hover-elevate\" data-testid=\"button-start-sourcing\">\n                  Start Sourcing\n                  <ArrowRight className=\"w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform\" />\n                </Button>\n                <Button size=\"lg\" variant=\"outline\" className=\"h-12 px-8 bg-white/10 border-white/30 text-white hover:bg-white/20 backdrop-blur-sm shadow-lg hover:shadow-xl transition-all duration-200 no-default-hover-elevate\" data-testid=\"button-become-supplier\">\n                  Become a Supplier\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          {/* Right Content - Stats Cards */}\n          <div className=\"hidden lg:block space-y-6\">\n            <div className=\"grid grid-cols-2 gap-6\">\n              <Card className=\"bg-white/10 backdrop-blur-xl border-white/20 text-white hover:bg-white/20 transition-all duration-300 hover:scale-105 no-default-hover-elevate\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"w-12 h-12 bg-white/20 rounded-lg flex items-center justify-center\">\n                      <Users className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div>\n                      <div className=\"text-2xl font-bold\">200K+</div>\n                      <div className=\"text-sm text-white/80\">Active Suppliers</div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"bg-white/10 backdrop-blur-xl border-white/20 text-white hover:bg-white/20 transition-all duration-300 hover:scale-105 no-default-hover-elevate\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"w-12 h-12 bg-white/20 rounded-lg flex items-center justify-center\">\n                      <TrendingUp className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div>\n                      <div className=\"text-2xl font-bold\">50M+</div>\n                      <div className=\"text-sm text-white/80\">Products</div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"bg-white/10 backdrop-blur-xl border-white/20 text-white hover:bg-white/20 transition-all duration-300 hover:scale-105 no-default-hover-elevate\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"w-12 h-12 bg-white/20 rounded-lg flex items-center justify-center\">\n                      <Globe className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div>\n                      <div className=\"text-2xl font-bold\">190+</div>\n                      <div className=\"text-sm text-white/80\">Countries</div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"bg-white/10 backdrop-blur-xl border-white/20 text-white hover:bg-white/20 transition-all duration-300 hover:scale-105 no-default-hover-elevate\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"w-12 h-12 bg-white/20 rounded-lg flex items-center justify-center\">\n                      <Users className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div>\n                      <div className=\"text-2xl font-bold\">10M+</div>\n                      <div className=\"text-sm text-white/80\">Buyers</div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":8874},"client/src/components/PageHeader.tsx":{"content":"import { ReactNode } from \"react\";\nimport { ChevronRight, Home } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\ninterface PageHeaderProps {\n  title: string;\n  subtitle?: string;\n  breadcrumbs?: Array<{\n    label: string;\n    href?: string;\n  }>;\n  children?: ReactNode;\n  variant?: \"default\" | \"gradient\" | \"minimal\";\n  className?: string;\n}\n\nexport default function PageHeader({\n  title,\n  subtitle,\n  breadcrumbs,\n  children,\n  variant = \"gradient\",\n  className = \"\"\n}: PageHeaderProps) {\n  const getVariantClasses = () => {\n    switch (variant) {\n      case \"gradient\":\n        return \"bg-gradient-to-r from-gray-700 via-gray-800 to-gray-900 text-white\";\n      case \"minimal\":\n        return \"bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-white border-b border-gray-200 dark:border-gray-800\";\n      default:\n        return \"bg-white dark:bg-gray-900 text-gray-900 dark:text-white border-b border-gray-200 dark:border-gray-800\";\n    }\n  };\n\n  return (\n    <div className={`relative overflow-hidden ${getVariantClasses()} ${className}`}>\n      {/* Background Pattern */}\n      {variant === \"gradient\" && (\n        <div className=\"absolute inset-0 opacity-10\">\n          <div className=\"absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg%20width%3D%2260%22%20height%3D%2260%22%20viewBox%3D%220%200%2060%2060%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cg%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%3Cg%20fill%3D%22%23ffffff%22%20fill-opacity%3D%220.1%22%3E%3Ccircle%20cx%3D%2230%22%20cy%3D%2230%22%20r%3D%221%22%2F%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E')] bg-repeat\"></div>\n        </div>\n      )}\n\n      <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12 lg:py-16\">\n        {/* Breadcrumbs */}\n        {breadcrumbs && breadcrumbs.length > 0 && (\n          <nav className=\"flex items-center space-x-2 text-sm mb-4\" aria-label=\"Breadcrumb\">\n            <Link href=\"/\" className=\"hover:text-gray-300 dark:hover:text-gray-400 transition-colors\">\n              <Home className=\"w-4 h-4\" />\n            </Link>\n            {breadcrumbs.map((crumb, index) => (\n              <div key={index} className=\"flex items-center space-x-2\">\n                <ChevronRight className=\"w-4 h-4 text-gray-300 dark:text-gray-400\" />\n                {crumb.href ? (\n                  <Link \n                    href={crumb.href} \n                    className=\"hover:text-gray-300 dark:hover:text-gray-400 transition-colors\"\n                  >\n                    {crumb.label}\n                  </Link>\n                ) : (\n                  <span className=\"text-gray-300 dark:text-gray-400\">{crumb.label}</span>\n                )}\n              </div>\n            ))}\n          </nav>\n        )}\n\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-6\">\n          <div className=\"flex-1\">\n            <h1 className=\"text-3xl sm:text-4xl lg:text-5xl font-bold mb-3 leading-tight\">\n              {title}\n            </h1>\n            {subtitle && (\n              <p className={`text-lg sm:text-xl max-w-2xl ${\n                variant === \"gradient\" \n                  ? \"text-gray-200\" \n                  : \"text-gray-600 dark:text-gray-400\"\n              }`}>\n                {subtitle}\n              </p>\n            )}\n          </div>\n\n          {/* Action Buttons/Content */}\n          {children && (\n            <div className=\"flex-shrink-0\">\n              <div className=\"flex flex-col sm:flex-row gap-3\">\n                {children}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Bottom Accent */}\n        {variant === \"gradient\" && (\n          <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-gray-500 to-gray-600\"></div>\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":3804},"client/src/pages/FindSuppliers.tsx":{"content":"import { useState } from \"react\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport PageHeader from \"@/components/PageHeader\";\nimport SupplierCard from \"@/components/SupplierCard\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Search, SlidersHorizontal, X } from \"lucide-react\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\n\nexport default function FindSuppliers() {\n  const [sortBy, setSortBy] = useState(\"relevance\");\n  const [showFilters, setShowFilters] = useState(true);\n\n  const suppliers = [\n    {\n      id: \"s1\",\n      name: \"Global Electronics Manufacturing Co.\",\n      logo: \"https://images.unsplash.com/photo-1560179707-f14e90ef3623?w=200&h=200&fit=crop\",\n      location: \"China\",\n      type: \"Manufacturer\",\n      verified: true,\n      goldSupplier: true,\n      tradeAssurance: true,\n      mainProducts: [\"Headphones\", \"Speakers\", \"Smart Devices\"],\n      yearsInBusiness: 12,\n      rating: 4.8,\n      responseRate: \"95%\",\n      responseTime: \"< 2h\",\n    },\n    {\n      id: \"s2\",\n      name: \"Fashion Textile Industries Ltd.\",\n      logo: \"https://images.unsplash.com/photo-1441986300917-64674bd600d8?w=200&h=200&fit=crop\",\n      location: \"Bangladesh\",\n      type: \"Manufacturer\",\n      verified: true,\n      goldSupplier: false,\n      tradeAssurance: true,\n      mainProducts: [\"Apparel\", \"Textiles\", \"Garments\"],\n      yearsInBusiness: 8,\n      rating: 4.6,\n      responseRate: \"92%\",\n      responseTime: \"< 4h\",\n    },\n    {\n      id: \"s3\",\n      name: \"Precision Machinery Corp.\",\n      logo: \"https://images.unsplash.com/photo-1581092160562-40aa08e78837?w=200&h=200&fit=crop\",\n      location: \"Germany\",\n      type: \"Manufacturer\",\n      verified: true,\n      goldSupplier: true,\n      tradeAssurance: true,\n      mainProducts: [\"Industrial Machinery\", \"CNC Machines\", \"Tools\"],\n      yearsInBusiness: 25,\n      rating: 4.9,\n      responseRate: \"98%\",\n      responseTime: \"< 1h\",\n    },\n    {\n      id: \"s4\",\n      name: \"EcoPackaging Solutions\",\n      logo: \"https://images.unsplash.com/photo-1586528116311-ad8dd3c8310d?w=200&h=200&fit=crop\",\n      location: \"Vietnam\",\n      type: \"Manufacturer\",\n      verified: true,\n      goldSupplier: false,\n      tradeAssurance: false,\n      mainProducts: [\"Packaging\", \"Paper Products\", \"Eco Materials\"],\n      yearsInBusiness: 6,\n      rating: 4.5,\n      responseRate: \"89%\",\n      responseTime: \"< 6h\",\n    },\n  ];\n\n  const FilterSidebar = () => (\n    <div className=\"space-y-5\">\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-base font-semibold\">Supplier Type</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          {[\"Manufacturer\", \"Trading Company\", \"Wholesaler\", \"Distributor\"].map((type) => (\n            <div key={type} className=\"flex flex-wrap items-center gap-3\">\n              <Checkbox id={`type-${type}`} data-testid={`checkbox-${type.toLowerCase().replace(' ', '-')}`} />\n              <Label htmlFor={`type-${type}`} className=\"text-sm cursor-pointer flex-1\">{type}</Label>\n            </div>\n          ))}\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-base font-semibold\">Location</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Select>\n            <SelectTrigger data-testid=\"select-location\">\n              <SelectValue placeholder=\"Select country\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"china\">China</SelectItem>\n              <SelectItem value=\"india\">India</SelectItem>\n              <SelectItem value=\"usa\">United States</SelectItem>\n              <SelectItem value=\"germany\">Germany</SelectItem>\n              <SelectItem value=\"vietnam\">Vietnam</SelectItem>\n              <SelectItem value=\"bangladesh\">Bangladesh</SelectItem>\n            </SelectContent>\n          </Select>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-base font-semibold\">Verification</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          <div className=\"flex flex-wrap items-center gap-3\">\n            <Checkbox id=\"verified\" data-testid=\"checkbox-verified\" />\n            <Label htmlFor=\"verified\" className=\"text-sm cursor-pointer flex-1\">Verified Suppliers</Label>\n          </div>\n          <div className=\"flex flex-wrap items-center gap-3\">\n            <Checkbox id=\"gold\" data-testid=\"checkbox-gold\" />\n            <Label htmlFor=\"gold\" className=\"text-sm cursor-pointer flex-1\">Gold Suppliers</Label>\n          </div>\n          <div className=\"flex flex-wrap items-center gap-3\">\n            <Checkbox id=\"trade-assurance\" data-testid=\"checkbox-trade-assurance\" />\n            <Label htmlFor=\"trade-assurance\" className=\"text-sm cursor-pointer flex-1\">Trade Assurance</Label>\n          </div>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-base font-semibold\">Years in Business</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          {[\"1-3 years\", \"3-5 years\", \"5-10 years\", \"10+ years\"].map((range) => (\n            <div key={range} className=\"flex flex-wrap items-center gap-3\">\n              <Checkbox id={`years-${range}`} data-testid={`checkbox-years-${range.split(' ')[0]}`} />\n              <Label htmlFor={`years-${range}`} className=\"text-sm cursor-pointer flex-1\">{range}</Label>\n            </div>\n          ))}\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-base font-semibold\">Response Rate</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          {[\"90%+\", \"80%+\", \"70%+\"].map((rate) => (\n            <div key={rate} className=\"flex flex-wrap items-center gap-3\">\n              <Checkbox id={`rate-${rate}`} data-testid={`checkbox-rate-${rate}`} />\n              <Label htmlFor={`rate-${rate}`} className=\"text-sm cursor-pointer flex-1\">{rate}</Label>\n            </div>\n          ))}\n        </CardContent>\n      </Card>\n\n      <Button variant=\"outline\" className=\"w-full\" data-testid=\"button-reset-filters\">\n        <X className=\"w-4 h-4 mr-2\" />\n        Clear All Filters\n      </Button>\n    </div>\n  );\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-gray-50 dark:bg-gray-900\">\n      <Header />\n      <main className=\"flex-1\">\n        <PageHeader\n          title=\"Find Suppliers\"\n          subtitle=\"Discover verified manufacturers and trading companies worldwide\"\n          variant=\"gradient\"\n          children={\n            <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 w-full max-w-4xl\">\n              <div className=\"flex-1 relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-white/70 w-4 h-4 sm:w-5 sm:h-5\" />\n                <Input\n                  placeholder=\"Search suppliers...\"\n                  className=\"pl-9 sm:pl-10 bg-white/10 border-white/20 text-white placeholder:text-white/60 focus-visible:ring-white/30 h-10 sm:h-12 text-sm sm:text-base\"\n                  data-testid=\"input-search-suppliers\"\n                />\n              </div>\n              <Button size=\"lg\" variant=\"secondary\" className=\"h-10 sm:h-12 text-sm sm:text-base\" data-testid=\"button-search\">Search</Button>\n            </div>\n          }\n        />\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-8\">\n          <div className=\"flex gap-4 sm:gap-6\">\n            <aside className=\"hidden lg:block w-72 flex-shrink-0\">\n              <div className=\"sticky top-24\">\n                <FilterSidebar />\n              </div>\n            </aside>\n\n            <div className=\"flex-1 min-w-0\">\n              <Card className=\"mb-4 sm:mb-6\">\n                <CardContent className=\"p-3 sm:p-4\">\n                  <div className=\"flex items-center justify-between gap-3 sm:gap-4 flex-wrap\">\n                    <div className=\"flex items-center gap-2 sm:gap-3\">\n                      <Sheet>\n                        <SheetTrigger asChild>\n                          <Button variant=\"outline\" size=\"sm\" className=\"lg:hidden h-8 sm:h-9 text-xs sm:text-sm\" data-testid=\"button-toggle-filters\">\n                            <SlidersHorizontal className=\"w-3 h-3 sm:w-4 sm:h-4 mr-1 sm:mr-2\" />\n                            Filters\n                          </Button>\n                        </SheetTrigger>\n                        <SheetContent side=\"left\" className=\"w-80 overflow-y-auto\">\n                          <div className=\"py-6\">\n                            <FilterSidebar />\n                          </div>\n                        </SheetContent>\n                      </Sheet>\n                      <p className=\"text-xs sm:text-sm text-muted-foreground\">\n                        <span className=\"font-semibold text-foreground\">{suppliers.length.toLocaleString()}</span> suppliers found\n                      </p>\n                    </div>\n                    <Select value={sortBy} onValueChange={setSortBy}>\n                      <SelectTrigger className=\"w-36 sm:w-48 text-xs sm:text-sm h-8 sm:h-10\" data-testid=\"select-sort\">\n                        <SelectValue placeholder=\"Sort by\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"relevance\">Relevance</SelectItem>\n                        <SelectItem value=\"rating\">Highest Rated</SelectItem>\n                        <SelectItem value=\"response\">Best Response Rate</SelectItem>\n                        <SelectItem value=\"years\">Years in Business</SelectItem>\n                        <SelectItem value=\"products\">Most Products</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <div className=\"grid grid-cols-1 gap-4 sm:gap-6\">\n                {suppliers.map((supplier) => (\n                  <SupplierCard key={supplier.id} {...supplier} />\n                ))}\n              </div>\n\n              <div className=\"mt-8 sm:mt-12 text-center\">\n                <Button size=\"lg\" variant=\"outline\" className=\"text-xs sm:text-sm\" data-testid=\"button-load-more\">\n                  Load More Suppliers\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":10953},"client/src/pages/admin/AdminBulkUpload.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Upload, Download, FileSpreadsheet, CheckCircle, XCircle } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\n\nexport default function AdminBulkUpload() {\n  const [file, setFile] = useState<File | null>(null);\n  const [uploadStatus, setUploadStatus] = useState<'idle' | 'uploading' | 'success' | 'error'>('idle');\n  const [uploadResult, setUploadResult] = useState<{ count: number; errors?: string[] } | null>(null);\n  const { toast } = useToast();\n\n  const uploadMutation = useMutation({\n    mutationFn: async (products: any[]) => {\n      return await apiRequest(\"POST\", \"/api/products/bulk\", { products });\n    },\n    onSuccess: (data: any) => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/products\"] });\n      setUploadStatus('success');\n      setUploadResult({ count: data.count });\n      toast({\n        title: \"Success\",\n        description: `Successfully uploaded ${data.count} products`,\n      });\n    },\n    onError: (error: any) => {\n      setUploadStatus('error');\n      setUploadResult({ count: 0, errors: [error.message] });\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to upload products\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = e.target.files?.[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      setUploadStatus('idle');\n      setUploadResult(null);\n    }\n  };\n\n  const parseCSV = (text: string): any[] => {\n    const lines = text.split('\\n');\n    const headers = lines[0].split(',').map(h => h.trim().replace(/^\"|\"$/g, ''));\n    \n    const products = [];\n    for (let i = 1; i < lines.length; i++) {\n      const line = lines[i].trim();\n      if (!line) continue;\n      \n      // Parse CSV line handling quoted fields\n      const values: string[] = [];\n      let current = '';\n      let inQuotes = false;\n      \n      for (let j = 0; j < line.length; j++) {\n        const char = line[j];\n        \n        if (char === '\"') {\n          inQuotes = !inQuotes;\n        } else if (char === ',' && !inQuotes) {\n          values.push(current.trim());\n          current = '';\n        } else {\n          current += char;\n        }\n      }\n      values.push(current.trim());\n      \n      const product: any = {};\n      headers.forEach((header, index) => {\n        let value = values[index] || '';\n        value = value.replace(/^\"|\"$/g, ''); // Remove surrounding quotes\n        product[header] = value;\n      });\n      \n      products.push(product);\n    }\n    \n    return products;\n  };\n\n  const handleUpload = async () => {\n    if (!file) return;\n    \n    setUploadStatus('uploading');\n    \n    try {\n      const text = await file.text();\n      const products = parseCSV(text);\n      \n      if (products.length === 0) {\n        throw new Error(\"No products found in file\");\n      }\n      \n      uploadMutation.mutate(products);\n    } catch (error: any) {\n      setUploadStatus('error');\n      setUploadResult({ count: 0, errors: [error.message] });\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to parse file\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const downloadTemplate = () => {\n    const template = `ID,Type,SKU,Name,Short description,Description,Regular price,Sale price,In stock?,Stock,Images,Tags,Categories\n1,simple,SAMPLE-SKU,Sample Product,Short description here,Full product description here,99.99,79.99,1,100,\"https://example.com/image1.jpg, https://example.com/image2.jpg\",\"tag1, tag2\",Electronics`;\n    \n    const blob = new Blob([template], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'product-upload-template.csv';\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"p-8\">\n      <h1 className=\"text-3xl font-bold mb-6\" data-testid=\"text-bulk-upload-title\">Bulk Product Upload</h1>\n\n      <div className=\"grid gap-6 md:grid-cols-2\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Upload CSV File</CardTitle>\n            <CardDescription>\n              Upload a CSV file with your products. Each product can have multiple images separated by commas.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"border-2 border-dashed rounded-lg p-8 text-center\">\n              <FileSpreadsheet className=\"mx-auto h-12 w-12 text-muted-foreground mb-4\" />\n              <input\n                type=\"file\"\n                accept=\".csv\"\n                onChange={handleFileChange}\n                className=\"hidden\"\n                id=\"file-upload\"\n                data-testid=\"input-file-upload\"\n              />\n              <label htmlFor=\"file-upload\">\n                <Button variant=\"outline\" asChild data-testid=\"button-select-file\">\n                  <span>\n                    <Upload className=\"mr-2 h-4 w-4\" />\n                    Select CSV File\n                  </span>\n                </Button>\n              </label>\n              {file && (\n                <p className=\"mt-4 text-sm text-muted-foreground\" data-testid=\"text-selected-file\">\n                  Selected: {file.name}\n                </p>\n              )}\n            </div>\n\n            <Button \n              onClick={handleUpload} \n              disabled={!file || uploadStatus === 'uploading'}\n              className=\"w-full\"\n              data-testid=\"button-upload-products\"\n            >\n              {uploadStatus === 'uploading' ? 'Uploading...' : 'Upload Products'}\n            </Button>\n\n            {uploadStatus === 'uploading' && (\n              <Progress value={50} className=\"w-full\" />\n            )}\n\n            {uploadStatus === 'success' && uploadResult && (\n              <Alert>\n                <CheckCircle className=\"h-4 w-4\" />\n                <AlertTitle>Success</AlertTitle>\n                <AlertDescription>\n                  Successfully uploaded {uploadResult.count} products\n                </AlertDescription>\n              </Alert>\n            )}\n\n            {uploadStatus === 'error' && uploadResult && (\n              <Alert variant=\"destructive\">\n                <XCircle className=\"h-4 w-4\" />\n                <AlertTitle>Error</AlertTitle>\n                <AlertDescription>\n                  {uploadResult.errors?.[0] || 'Failed to upload products'}\n                </AlertDescription>\n              </Alert>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>CSV Format Guide</CardTitle>\n            <CardDescription>\n              Follow this format for your CSV file\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-2 text-sm\">\n              <h3 className=\"font-semibold\">Required Columns:</h3>\n              <ul className=\"list-disc list-inside space-y-1 text-muted-foreground\">\n                <li>Name - Product name</li>\n                <li>SKU - Stock keeping unit (unique)</li>\n              </ul>\n\n              <h3 className=\"font-semibold mt-4\">Optional Columns:</h3>\n              <ul className=\"list-disc list-inside space-y-1 text-muted-foreground\">\n                <li>Description - Full product description</li>\n                <li>Short description - Brief description</li>\n                <li>Regular price - Regular price in dollars</li>\n                <li>Sale price - Sale price in dollars</li>\n                <li>Stock - Quantity in stock</li>\n                <li>In stock? - 1 for in stock, 0 for out of stock</li>\n                <li>Images - Comma-separated image URLs</li>\n                <li>Tags - Comma-separated tags</li>\n                <li>Categories - Comma-separated categories</li>\n                <li>Published - 1 for published, 0 for draft</li>\n              </ul>\n\n              <h3 className=\"font-semibold mt-4\">Image URLs:</h3>\n              <p className=\"text-muted-foreground\">\n                You can add multiple images per product by separating URLs with commas:\n              </p>\n              <code className=\"block mt-2 p-2 bg-muted rounded text-xs\">\n                \"https://example.com/img1.jpg, https://example.com/img2.jpg, https://example.com/img3.jpg\"\n              </code>\n            </div>\n\n            <Button \n              variant=\"outline\" \n              onClick={downloadTemplate}\n              className=\"w-full\"\n              data-testid=\"button-download-template\"\n            >\n              <Download className=\"mr-2 h-4 w-4\" />\n              Download Template\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Card className=\"mt-6\">\n        <CardHeader>\n          <CardTitle>Important Notes</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <ul className=\"list-disc list-inside space-y-2 text-sm text-muted-foreground\">\n            <li>Ensure your CSV file is properly formatted with headers in the first row</li>\n            <li>Image URLs should be publicly accessible and direct links to images</li>\n            <li>Multiple images for a single product should be separated by commas within the Images column</li>\n            <li>SKU should be unique for each product to avoid conflicts</li>\n            <li>The system will automatically generate a URL-friendly slug from the product name</li>\n            <li>All numeric fields (prices, stock) will be automatically validated</li>\n          </ul>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":10083},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertProductSchema, insertCategorySchema, insertCustomerSchema, insertSupplierSchema, insertOrderSchema } from \"@shared/schema\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Analytics\n  app.get(\"/api/analytics\", async (req, res) => {\n    try {\n      const analytics = await storage.getAnalytics();\n      res.json(analytics);\n    } catch (error: any) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Products\n  app.get(\"/api/products\", async (req, res) => {\n    try {\n      const { categoryId, search, isPublished } = req.query;\n      const filters: any = {};\n      \n      if (categoryId) filters.categoryId = categoryId as string;\n      if (search) filters.search = search as string;\n      if (isPublished !== undefined) filters.isPublished = isPublished === 'true';\n      \n      const products = await storage.getProducts(filters);\n      res.json(products);\n    } catch (error: any) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.get(\"/api/products/:id\", async (req, res) => {\n    try {\n      const product = await storage.getProduct(req.params.id);\n      if (!product) {\n        return res.status(404).json({ error: \"Product not found\" });\n      }\n      res.json(product);\n    } catch (error: any) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.post(\"/api/products\", async (req, res) => {\n    try {\n      const validatedData = insertProductSchema.parse(req.body);\n      const product = await storage.createProduct(validatedData);\n      res.status(201).json(product);\n    } catch (error: any) {\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.patch(\"/api/products/:id\", async (req, res) => {\n    try {\n      const validatedData = insertProductSchema.partial().parse(req.body);\n      const product = await storage.updateProduct(req.params.id, validatedData);\n      if (!product) {\n        return res.status(404).json({ error: \"Product not found\" });\n      }\n      res.json(product);\n    } catch (error: any) {\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.delete(\"/api/products/:id\", async (req, res) => {\n    try {\n      const success = await storage.deleteProduct(req.params.id);\n      if (!success) {\n        return res.status(404).json({ error: \"Product not found\" });\n      }\n      res.status(204).send();\n    } catch (error: any) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Bulk product upload\n  app.post(\"/api/products/bulk\", async (req, res) => {\n    try {\n      const { products } = req.body;\n      if (!Array.isArray(products)) {\n        return res.status(400).json({ error: \"Products must be an array\" });\n      }\n      \n      const validatedProducts = [];\n      const errors = [];\n      \n      for (let i = 0; i < products.length; i++) {\n        const p = products[i];\n        try {\n          // Parse CSV fields and convert to our schema\n          const images = p.images ? (typeof p.images === 'string' ? p.images.split(',').map((img: string) => img.trim()).filter(Boolean) : p.images) : [];\n          const tags = p.tags ? (typeof p.tags === 'string' ? p.tags.split(',').map((tag: string) => tag.trim()).filter(Boolean) : p.tags) : [];\n          \n          const productData = {\n            externalId: p.id || p.ID,\n            type: p.type || p.Type || \"simple\",\n            sku: p.sku || p.SKU,\n            gtin: p.gtin || p['GTIN, UPC, EAN, or ISBN'],\n            name: p.name || p.Name,\n            slug: (p.name || p.Name || '').toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n            shortDescription: p.shortDescription || p['Short description'],\n            description: p.description || p.Description,\n            tags,\n            images,\n            regularPrice: p.regularPrice || p['Regular price'],\n            salePrice: p.salePrice || p['Sale price'],\n            taxStatus: p.taxStatus || p['Tax status'] || \"taxable\",\n            taxClass: p.taxClass || p['Tax class'],\n            inStock: p.inStock !== undefined ? p.inStock : (p['In stock?'] === '1' || p['In stock?'] === 1),\n            stockQuantity: parseInt(p.stockQuantity || p.Stock || '0'),\n            lowStockAmount: p.lowStockAmount || p['Low stock amount'] ? parseInt(p.lowStockAmount || p['Low stock amount']) : undefined,\n            backordersAllowed: p.backordersAllowed || p['Backorders allowed?'] === '1',\n            soldIndividually: p.soldIndividually || p['Sold individually?'] === '1',\n            weight: p.weight || p['Weight (kg)'],\n            length: p.length || p['Length (cm)'],\n            width: p.width || p['Width (cm)'],\n            height: p.height || p['Height (cm)'],\n            shippingClass: p.shippingClass || p['Shipping class'],\n            allowReviews: p.allowReviews !== undefined ? p.allowReviews : (p['Allow customer reviews?'] !== '0'),\n            isFeatured: p.isFeatured || p['Is featured?'] === '1',\n            isPublished: p.isPublished !== undefined ? p.isPublished : (p.Published === '1' || p.Published === 1),\n            visibility: p.visibility || p['Visibility in catalog'] || \"visible\",\n            purchaseNote: p.purchaseNote || p['Purchase note'],\n            downloadLimit: p.downloadLimit || p['Download limit'] ? parseInt(p.downloadLimit || p['Download limit']) : undefined,\n            downloadExpiryDays: p.downloadExpiryDays || p['Download expiry days'] ? parseInt(p.downloadExpiryDays || p['Download expiry days']) : undefined,\n          };\n          \n          // Validate each product with Zod schema\n          const validated = insertProductSchema.parse(productData);\n          validatedProducts.push(validated);\n        } catch (error: any) {\n          errors.push({ row: i + 1, error: error.message });\n        }\n      }\n      \n      if (errors.length > 0) {\n        return res.status(400).json({ \n          error: \"Validation errors in CSV data\", \n          errors,\n          validCount: validatedProducts.length,\n          errorCount: errors.length\n        });\n      }\n      \n      const createdProducts = await storage.bulkCreateProducts(validatedProducts);\n      res.status(201).json({ count: createdProducts.length, products: createdProducts });\n    } catch (error: any) {\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  // Categories\n  app.get(\"/api/categories\", async (req, res) => {\n    try {\n      const categories = await storage.getCategories();\n      res.json(categories);\n    } catch (error: any) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.get(\"/api/categories/:id\", async (req, res) => {\n    try {\n      const category = await storage.getCategory(req.params.id);\n      if (!category) {\n        return res.status(404).json({ error: \"Category not found\" });\n      }\n      res.json(category);\n    } catch (error: any) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.post(\"/api/categories\", async (req, res) => {\n    try {\n      const validatedData = insertCategorySchema.parse(req.body);\n      const category = await storage.createCategory(validatedData);\n      res.status(201).json(category);\n    } catch (error: any) {\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.patch(\"/api/categories/:id\", async (req, res) => {\n    try {\n      const validatedData = insertCategorySchema.partial().parse(req.body);\n      const category = await storage.updateCategory(req.params.id, validatedData);\n      if (!category) {\n        return res.status(404).json({ error: \"Category not found\" });\n      }\n      res.json(category);\n    } catch (error: any) {\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.delete(\"/api/categories/:id\", async (req, res) => {\n    try {\n      const success = await storage.deleteCategory(req.params.id);\n      if (!success) {\n        return res.status(404).json({ error: \"Category not found\" });\n      }\n      res.status(204).send();\n    } catch (error: any) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Customers\n  app.get(\"/api/customers\", async (req, res) => {\n    try {\n      const customers = await storage.getCustomers();\n      res.json(customers);\n    } catch (error: any) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.get(\"/api/customers/:id\", async (req, res) => {\n    try {\n      const customer = await storage.getCustomer(req.params.id);\n      if (!customer) {\n        return res.status(404).json({ error: \"Customer not found\" });\n      }\n      res.json(customer);\n    } catch (error: any) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.post(\"/api/customers\", async (req, res) => {\n    try {\n      const validatedData = insertCustomerSchema.parse(req.body);\n      const customer = await storage.createCustomer(validatedData);\n      res.status(201).json(customer);\n    } catch (error: any) {\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.patch(\"/api/customers/:id\", async (req, res) => {\n    try {\n      const validatedData = insertCustomerSchema.partial().parse(req.body);\n      const customer = await storage.updateCustomer(req.params.id, validatedData);\n      if (!customer) {\n        return res.status(404).json({ error: \"Customer not found\" });\n      }\n      res.json(customer);\n    } catch (error: any) {\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.delete(\"/api/customers/:id\", async (req, res) => {\n    try {\n      const success = await storage.deleteCustomer(req.params.id);\n      if (!success) {\n        return res.status(404).json({ error: \"Customer not found\" });\n      }\n      res.status(204).send();\n    } catch (error: any) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Suppliers\n  app.get(\"/api/suppliers\", async (req, res) => {\n    try {\n      const suppliers = await storage.getSuppliers();\n      res.json(suppliers);\n    } catch (error: any) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.get(\"/api/suppliers/:id\", async (req, res) => {\n    try {\n      const supplier = await storage.getSupplier(req.params.id);\n      if (!supplier) {\n        return res.status(404).json({ error: \"Supplier not found\" });\n      }\n      res.json(supplier);\n    } catch (error: any) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.post(\"/api/suppliers\", async (req, res) => {\n    try {\n      const validatedData = insertSupplierSchema.parse(req.body);\n      const supplier = await storage.createSupplier(validatedData);\n      res.status(201).json(supplier);\n    } catch (error: any) {\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.patch(\"/api/suppliers/:id\", async (req, res) => {\n    try {\n      const validatedData = insertSupplierSchema.partial().parse(req.body);\n      const supplier = await storage.updateSupplier(req.params.id, validatedData);\n      if (!supplier) {\n        return res.status(404).json({ error: \"Supplier not found\" });\n      }\n      res.json(supplier);\n    } catch (error: any) {\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.delete(\"/api/suppliers/:id\", async (req, res) => {\n    try {\n      const success = await storage.deleteSupplier(req.params.id);\n      if (!success) {\n        return res.status(404).json({ error: \"Supplier not found\" });\n      }\n      res.status(204).send();\n    } catch (error: any) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Orders\n  app.get(\"/api/orders\", async (req, res) => {\n    try {\n      const { customerId, supplierId, status } = req.query;\n      const filters: any = {};\n      \n      if (customerId) filters.customerId = customerId as string;\n      if (supplierId) filters.supplierId = supplierId as string;\n      if (status) filters.status = status as string;\n      \n      const orders = await storage.getOrders(filters);\n      res.json(orders);\n    } catch (error: any) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.get(\"/api/orders/:id\", async (req, res) => {\n    try {\n      const order = await storage.getOrder(req.params.id);\n      if (!order) {\n        return res.status(404).json({ error: \"Order not found\" });\n      }\n      res.json(order);\n    } catch (error: any) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.post(\"/api/orders\", async (req, res) => {\n    try {\n      const validatedData = insertOrderSchema.parse(req.body);\n      const order = await storage.createOrder(validatedData);\n      res.status(201).json(order);\n    } catch (error: any) {\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.patch(\"/api/orders/:id\", async (req, res) => {\n    try {\n      const validatedData = insertOrderSchema.partial().parse(req.body);\n      const order = await storage.updateOrder(req.params.id, validatedData);\n      if (!order) {\n        return res.status(404).json({ error: \"Order not found\" });\n      }\n      res.json(order);\n    } catch (error: any) {\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.delete(\"/api/orders/:id\", async (req, res) => {\n    try {\n      const success = await storage.deleteOrder(req.params.id);\n      if (!success) {\n        return res.status(404).json({ error: \"Order not found\" });\n      }\n      res.status(204).send();\n    } catch (error: any) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":13653},"client/src/components/ProductCard.tsx":{"content":"import { MapPin, MessageSquare, ShieldCheck } from \"lucide-react\";\nimport { Card, CardContent, CardFooter } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\n\ninterface ProductCardProps {\n  id: string;\n  image: string;\n  name: string;\n  priceRange: string;\n  moq: string;\n  supplierName: string;\n  supplierCountry: string;\n  responseRate: string;\n  verified?: boolean;\n  tradeAssurance?: boolean;\n}\n\nexport default function ProductCard({\n  id,\n  image,\n  name,\n  priceRange,\n  moq,\n  supplierName,\n  supplierCountry,\n  responseRate,\n  verified = false,\n  tradeAssurance = false,\n}: ProductCardProps) {\n  return (\n    <Card className=\"group overflow-hidden hover-elevate transition-all duration-300 hover:shadow-xl\" data-testid={`card-product-${id}`}>\n      <Link href={`/product/${id}`}>\n        <div className=\"relative aspect-square overflow-hidden bg-muted\">\n          <img \n            src={image} \n            alt={name} \n            className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-300\"\n          />\n          <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n          {verified && (\n            <Badge className=\"absolute top-3 right-3 bg-green-600 text-white border-0\" data-testid={`badge-verified-${id}`}>\n              <ShieldCheck className=\"w-3 h-3 mr-1\" />\n              Verified\n            </Badge>\n          )}\n          {tradeAssurance && (\n            <Badge className=\"absolute bottom-3 left-3 bg-primary border-0\" data-testid={`badge-trade-assurance-${id}`}>\n              Trade Assurance\n            </Badge>\n          )}\n        </div>\n      </Link>\n      \n      <CardContent className=\"p-3 sm:p-4 space-y-2 sm:space-y-3\">\n        <Link href={`/product/${id}`}>\n          <h3 className=\"font-semibold text-sm sm:text-base mb-1 sm:mb-2 line-clamp-2 hover:text-primary transition-colors leading-snug\" data-testid={`text-product-name-${id}`}>\n            {name}\n          </h3>\n        </Link>\n        <div className=\"space-y-1\">\n          <p className=\"text-lg sm:text-2xl font-bold text-primary\" data-testid={`text-price-${id}`}>{priceRange}</p>\n          <p className=\"text-xs sm:text-sm text-muted-foreground font-medium\" data-testid={`text-moq-${id}`}>MOQ: {moq}</p>\n        </div>\n        <div className=\"pt-2 border-t border-border space-y-1\">\n          <div className=\"flex items-center gap-2 text-xs sm:text-sm text-muted-foreground\">\n            <MapPin className=\"w-3 h-3 sm:w-4 sm:h-4 flex-shrink-0\" />\n            <span className=\"truncate\" data-testid={`text-supplier-${id}`}>{supplierName}</span>\n          </div>\n          <p className=\"text-[10px] sm:text-xs text-muted-foreground\" data-testid={`text-location-${id}`}>\n            {supplierCountry} • {responseRate} response\n          </p>\n        </div>\n      </CardContent>\n      \n      <CardFooter className=\"p-3 sm:p-4 pt-0 flex gap-2\">\n        <Button variant=\"outline\" size=\"sm\" className=\"flex-1 text-xs sm:text-sm h-8 sm:h-9\" data-testid={`button-contact-${id}`}>\n          <MessageSquare className=\"w-3 h-3 sm:w-4 sm:h-4 sm:mr-1\" />\n          <span className=\"hidden sm:inline\">Contact</span>\n        </Button>\n        <Button size=\"sm\" className=\"flex-1 text-xs sm:text-sm h-8 sm:h-9\" data-testid={`button-quote-${id}`}>\n          Get Quote\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n}\n","size_bytes":3543},"client/src/pages/InquiryCart.tsx":{"content":"import { useState } from \"react\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { X, MessageSquare } from \"lucide-react\";\n\nexport default function InquiryCart() {\n  //todo: remove mock functionality\n  const [cartItems, setCartItems] = useState([\n    {\n      id: \"1\",\n      image: \"https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=200&h=200&fit=crop\",\n      name: \"Premium Wireless Headphones\",\n      supplier: \"AudioTech Pro\",\n      quantity: 500,\n      targetPrice: \"$25\",\n      customization: \"Custom packaging required\",\n    },\n    {\n      id: \"2\",\n      image: \"https://images.unsplash.com/photo-1523275335684-37898b6baf30?w=200&h=200&fit=crop\",\n      name: \"Classic Analog Wristwatch\",\n      supplier: \"TimeKeeper Industries\",\n      quantity: 1000,\n      targetPrice: \"$18\",\n      customization: \"Logo engraving\",\n    },\n    {\n      id: \"3\",\n      image: \"https://images.unsplash.com/photo-1572635196237-14b3f281503f?w=200&h=200&fit=crop\",\n      name: \"Designer Sunglasses UV Protection\",\n      supplier: \"Vision Plus Co.\",\n      quantity: 2000,\n      targetPrice: \"$10\",\n      customization: \"\",\n    },\n  ]);\n\n  const [selectedItems, setSelectedItems] = useState<string[]>(cartItems.map(item => item.id));\n\n  const removeItem = (id: string) => {\n    setCartItems(cartItems.filter(item => item.id !== id));\n    setSelectedItems(selectedItems.filter(itemId => itemId !== id));\n  };\n\n  const toggleSelectAll = () => {\n    if (selectedItems.length === cartItems.length) {\n      setSelectedItems([]);\n    } else {\n      setSelectedItems(cartItems.map(item => item.id));\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-8\">\n          <h1 className=\"text-2xl sm:text-3xl font-bold mb-4 sm:mb-8\">Inquiry Cart</h1>\n\n          {cartItems.length === 0 ? (\n            <Card>\n              <CardContent className=\"p-8 sm:p-12 text-center\">\n                <div className=\"text-sm sm:text-base text-muted-foreground mb-4\">Your inquiry cart is empty</div>\n                <Button data-testid=\"button-browse-products\">Browse Products</Button>\n              </CardContent>\n            </Card>\n          ) : (\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 sm:gap-8\">\n              <div className=\"lg:col-span-2 space-y-3 sm:space-y-4\">\n                <Card>\n                  <CardHeader className=\"px-4 sm:px-6\">\n                    <div className=\"flex items-center gap-3\">\n                      <Checkbox\n                        checked={selectedItems.length === cartItems.length}\n                        onCheckedChange={toggleSelectAll}\n                        data-testid=\"checkbox-select-all\"\n                      />\n                      <CardTitle className=\"text-base sm:text-lg\">Select All ({cartItems.length} items)</CardTitle>\n                    </div>\n                  </CardHeader>\n                </Card>\n\n                {cartItems.map((item) => (\n                  <Card key={item.id} data-testid={`cart-item-${item.id}`}>\n                    <CardContent className=\"p-4 sm:p-6\">\n                      <div className=\"flex gap-3 sm:gap-4\">\n                        <Checkbox\n                          checked={selectedItems.includes(item.id)}\n                          onCheckedChange={(checked) => {\n                            if (checked) {\n                              setSelectedItems([...selectedItems, item.id]);\n                            } else {\n                              setSelectedItems(selectedItems.filter(id => id !== item.id));\n                            }\n                          }}\n                          data-testid={`checkbox-item-${item.id}`}\n                        />\n                        \n                        <div className=\"w-16 h-16 sm:w-24 sm:h-24 bg-muted rounded-lg overflow-hidden flex-shrink-0\">\n                          <img src={item.image} alt={item.name} className=\"w-full h-full object-cover\" />\n                        </div>\n\n                        <div className=\"flex-1 min-w-0\">\n                          <div className=\"flex justify-between items-start mb-2\">\n                            <div className=\"flex-1 min-w-0 pr-2\">\n                              <h3 className=\"font-semibold mb-1 text-sm sm:text-base truncate\" data-testid={`text-item-name-${item.id}`}>{item.name}</h3>\n                              <p className=\"text-xs sm:text-sm text-muted-foreground\" data-testid={`text-supplier-${item.id}`}>Supplier: {item.supplier}</p>\n                            </div>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"icon\"\n                              className=\"h-8 w-8 sm:h-10 sm:w-10\"\n                              onClick={() => removeItem(item.id)}\n                              data-testid={`button-remove-${item.id}`}\n                            >\n                              <X className=\"w-4 h-4\" />\n                            </Button>\n                          </div>\n\n                          <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-3 sm:gap-4 mt-3 sm:mt-4\">\n                            <div>\n                              <label className=\"text-xs sm:text-sm text-muted-foreground block mb-1\">Quantity</label>\n                              <Input\n                                type=\"number\"\n                                value={item.quantity}\n                                className=\"text-sm\"\n                                onChange={(e) => {\n                                  const newItems = cartItems.map(i => \n                                    i.id === item.id ? { ...i, quantity: Number(e.target.value) } : i\n                                  );\n                                  setCartItems(newItems);\n                                }}\n                                data-testid={`input-quantity-${item.id}`}\n                              />\n                            </div>\n                            <div>\n                              <label className=\"text-xs sm:text-sm text-muted-foreground block mb-1\">Target Price</label>\n                              <Input\n                                value={item.targetPrice}\n                                className=\"text-sm\"\n                                onChange={(e) => {\n                                  const newItems = cartItems.map(i => \n                                    i.id === item.id ? { ...i, targetPrice: e.target.value } : i\n                                  );\n                                  setCartItems(newItems);\n                                }}\n                                data-testid={`input-price-${item.id}`}\n                              />\n                            </div>\n                            <div>\n                              <label className=\"text-xs sm:text-sm text-muted-foreground block mb-1\">Customization</label>\n                              <Input\n                                placeholder=\"Optional\"\n                                value={item.customization}\n                                className=\"text-sm\"\n                                onChange={(e) => {\n                                  const newItems = cartItems.map(i => \n                                    i.id === item.id ? { ...i, customization: e.target.value } : i\n                                  );\n                                  setCartItems(newItems);\n                                }}\n                                data-testid={`input-custom-${item.id}`}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n\n              <div className=\"lg:col-span-1\">\n                <Card className=\"sticky top-24\">\n                  <CardHeader className=\"px-4 sm:px-6\">\n                    <CardTitle className=\"text-base sm:text-lg\">Inquiry Summary</CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-3 sm:space-y-4 px-4 sm:px-6\">\n                    <div>\n                      <p className=\"text-xs sm:text-sm text-muted-foreground mb-2\">\n                        Selected: {selectedItems.length} of {cartItems.length} items\n                      </p>\n                    </div>\n\n                    <div>\n                      <label className=\"text-xs sm:text-sm font-medium block mb-2\">Expected Delivery Date</label>\n                      <Input type=\"date\" className=\"text-sm\" data-testid=\"input-delivery-date\" />\n                    </div>\n\n                    <div>\n                      <label className=\"text-xs sm:text-sm font-medium block mb-2\">Payment Terms Preference</label>\n                      <Input placeholder=\"e.g., T/T, L/C\" className=\"text-sm\" data-testid=\"input-payment-terms\" />\n                    </div>\n\n                    <div>\n                      <label className=\"text-xs sm:text-sm font-medium block mb-2\">Additional Requirements</label>\n                      <Textarea \n                        placeholder=\"Any special requirements or notes for suppliers...\"\n                        rows={3}\n                        className=\"text-sm\"\n                        data-testid=\"textarea-requirements\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"text-xs sm:text-sm font-medium block mb-2\">Your Contact Email</label>\n                      <Input type=\"email\" placeholder=\"your@email.com\" className=\"text-sm\" data-testid=\"input-email\" />\n                    </div>\n\n                    <div className=\"pt-3 sm:pt-4 border-t space-y-2\">\n                      <Button \n                        className=\"w-full text-xs sm:text-sm\" \n                        size=\"lg\"\n                        disabled={selectedItems.length === 0}\n                        data-testid=\"button-send-all\"\n                      >\n                        <MessageSquare className=\"w-3 h-3 sm:w-4 sm:h-4 mr-2\" />\n                        Send to All Suppliers\n                      </Button>\n                      <Button \n                        variant=\"outline\" \n                        className=\"w-full text-xs sm:text-sm\"\n                        disabled={selectedItems.length === 0}\n                        data-testid=\"button-send-individual\"\n                      >\n                        Send Individual Inquiries\n                      </Button>\n                    </div>\n\n                    <Button \n                      variant=\"ghost\" \n                      className=\"w-full text-xs sm:text-sm\"\n                      data-testid=\"button-save-later\"\n                    >\n                      Save for Later\n                    </Button>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          )}\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":11444},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\" +\n  \" hover-elevate active-elevate-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-primary-border\",\n        destructive:\n          \"bg-destructive text-destructive-foreground border border-destructive-border\",\n        outline:\n          // Shows the background color of whatever card / sidebar / accent background it is inside of.\n          // Inherits the current text color.\n          \" border [border-color:var(--button-outline)]  shadow-xs active:shadow-none \",\n        secondary: \"border bg-secondary text-secondary-foreground border border-secondary-border \",\n        // Add a transparent border so that when someone toggles a border on later, it doesn't shift layout/size.\n        ghost: \"border border-transparent\",\n      },\n      // Heights are set as \"min\" heights, because sometimes Ai will place large amount of content\n      // inside buttons. With a min-height they will look appropriate with small amounts of content,\n      // but will expand to fit large amounts of content.\n      size: {\n        default: \"min-h-9 px-4 py-2\",\n        sm: \"min-h-8 rounded-md px-3 text-xs\",\n        lg: \"min-h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2359},"client/src/pages/SendQuotation.tsx":{"content":"import { useState } from \"react\";\nimport { useRoute } from \"wouter\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Send, FileText, DollarSign, Calendar, Truck, Plus, X } from \"lucide-react\";\n\nexport default function SendQuotation() {\n  const [, params] = useRoute(\"/send-quotation/:rfqId\");\n  const [priceBreaks, setPriceBreaks] = useState([\n    { quantity: \"100-499\", price: \"\" },\n    { quantity: \"500-999\", price: \"\" },\n    { quantity: \"1000+\", price: \"\" }\n  ]);\n\n  const rfq = {\n    id: params?.rfqId || \"RFQ-2024-001\",\n    title: \"Custom Metal Brackets - 10,000 units\",\n    buyer: \"ABC Manufacturing Inc.\",\n    quantity: 10000,\n    targetPrice: \"$2.50/piece\",\n    category: \"Hardware & Machinery\",\n    requirements: \"Need custom metal brackets for industrial equipment. Must be corrosion-resistant and meet ISO 9001 standards.\",\n    deliveryLocation: \"Los Angeles, USA\",\n    expectedDate: \"2024-03-15\"\n  };\n\n  const addPriceBreak = () => {\n    setPriceBreaks([...priceBreaks, { quantity: \"\", price: \"\" }]);\n  };\n\n  const removePriceBreak = (index: number) => {\n    setPriceBreaks(priceBreaks.filter((_, i) => i !== index));\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(\"Quotation submitted\");\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1 bg-gray-50 dark:bg-gray-900\">\n        <div className=\"gradient-blue text-white py-12\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <h1 className=\"text-4xl font-bold mb-2\">Send Quotation</h1>\n            <p className=\"text-gray-200\">Respond to buyer request for quotation</p>\n          </div>\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            <div className=\"lg:col-span-2\">\n              <Card className=\"p-6 glass-card mb-6\">\n                <div className=\"mb-6 pb-6 border-b border-gray-200 dark:border-gray-700\">\n                  <h2 className=\"text-2xl font-bold mb-4\">RFQ Details</h2>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">RFQ ID</p>\n                      <p className=\"font-semibold\">{rfq.id}</p>\n                    </div>\n                    <div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Buyer</p>\n                      <p className=\"font-semibold\">{rfq.buyer}</p>\n                    </div>\n                    <div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Quantity Needed</p>\n                      <p className=\"font-semibold\">{rfq.quantity.toLocaleString()} units</p>\n                    </div>\n                    <div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Target Price</p>\n                      <p className=\"font-semibold\">{rfq.targetPrice}</p>\n                    </div>\n                  </div>\n                  <div className=\"mt-4\">\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-1\">Requirements</p>\n                    <p className=\"text-gray-800 dark:text-gray-200\">{rfq.requirements}</p>\n                  </div>\n                </div>\n\n                <h2 className=\"text-2xl font-bold mb-6\">Your Quotation</h2>\n                \n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                  <div>\n                    <Label className=\"text-lg font-semibold mb-3 block\">Price Breakdown</Label>\n                    <div className=\"space-y-3\">\n                      {priceBreaks.map((priceBreak, index) => (\n                        <div key={index} className=\"flex gap-3 items-end\">\n                          <div className=\"flex-1\">\n                            <Label htmlFor={`quantity-${index}`}>Quantity Range</Label>\n                            <Input\n                              id={`quantity-${index}`}\n                              value={priceBreak.quantity}\n                              onChange={(e) => {\n                                const newBreaks = [...priceBreaks];\n                                newBreaks[index].quantity = e.target.value;\n                                setPriceBreaks(newBreaks);\n                              }}\n                              placeholder=\"e.g., 1000-4999\"\n                            />\n                          </div>\n                          <div className=\"flex-1\">\n                            <Label htmlFor={`price-${index}`}>Price per Unit ($)</Label>\n                            <Input\n                              id={`price-${index}`}\n                              type=\"number\"\n                              step=\"0.01\"\n                              value={priceBreak.price}\n                              onChange={(e) => {\n                                const newBreaks = [...priceBreaks];\n                                newBreaks[index].price = e.target.value;\n                                setPriceBreaks(newBreaks);\n                              }}\n                              placeholder=\"0.00\"\n                            />\n                          </div>\n                          {priceBreaks.length > 1 && (\n                            <Button\n                              type=\"button\"\n                              variant=\"outline\"\n                              size=\"icon\"\n                              onClick={() => removePriceBreak(index)}\n                            >\n                              <X className=\"h-4 w-4\" />\n                            </Button>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                    <Button\n                      type=\"button\"\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={addPriceBreak}\n                      className=\"mt-3\"\n                    >\n                      <Plus className=\"h-4 w-4 mr-2\" />\n                      Add Price Break\n                    </Button>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"moq\">Minimum Order Quantity (MOQ)</Label>\n                      <Input\n                        id=\"moq\"\n                        type=\"number\"\n                        placeholder=\"e.g., 500\"\n                        required\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"leadTime\">Lead Time</Label>\n                      <Input\n                        id=\"leadTime\"\n                        placeholder=\"e.g., 15-20 days\"\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"paymentTerms\">Payment Terms</Label>\n                      <Select>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select payment terms\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"30-deposit\">30% Deposit, 70% Before Shipment</SelectItem>\n                          <SelectItem value=\"50-deposit\">50% Deposit, 50% Before Shipment</SelectItem>\n                          <SelectItem value=\"lc\">Letter of Credit (L/C)</SelectItem>\n                          <SelectItem value=\"tt\">Telegraphic Transfer (T/T)</SelectItem>\n                          <SelectItem value=\"trade-assurance\">Trade Assurance</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                    <div>\n                      <Label htmlFor=\"shippingTerms\">Shipping Terms</Label>\n                      <Select>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select shipping terms\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"fob\">FOB (Free On Board)</SelectItem>\n                          <SelectItem value=\"cif\">CIF (Cost, Insurance, Freight)</SelectItem>\n                          <SelectItem value=\"exw\">EXW (Ex Works)</SelectItem>\n                          <SelectItem value=\"ddp\">DDP (Delivered Duty Paid)</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"port\">Port of Loading</Label>\n                    <Input\n                      id=\"port\"\n                      placeholder=\"e.g., Shanghai, Ningbo\"\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"packaging\">Packaging Details</Label>\n                    <Textarea\n                      id=\"packaging\"\n                      rows={3}\n                      placeholder=\"Describe packaging specifications...\"\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"certifications\">Certifications & Quality Standards</Label>\n                    <Textarea\n                      id=\"certifications\"\n                      rows={2}\n                      placeholder=\"e.g., ISO 9001, CE, RoHS...\"\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"additionalInfo\">Additional Information</Label>\n                    <Textarea\n                      id=\"additionalInfo\"\n                      rows={4}\n                      placeholder=\"Any additional details, special offers, or terms...\"\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"validityPeriod\">Quotation Validity Period</Label>\n                    <Select>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select validity period\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"7\">7 days</SelectItem>\n                        <SelectItem value=\"15\">15 days</SelectItem>\n                        <SelectItem value=\"30\">30 days</SelectItem>\n                        <SelectItem value=\"60\">60 days</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </form>\n              </Card>\n            </div>\n\n            <div className=\"lg:col-span-1\">\n              <Card className=\"p-6 glass-card sticky top-24\">\n                <h3 className=\"text-xl font-bold mb-4\">Quotation Summary</h3>\n                \n                <div className=\"space-y-4 mb-6\">\n                  <div className=\"flex items-start gap-3\">\n                    <FileText className=\"h-5 w-5 text-gray-400 mt-1\" />\n                    <div className=\"flex-1\">\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">RFQ Title</p>\n                      <p className=\"font-semibold\">{rfq.title}</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-start gap-3\">\n                    <DollarSign className=\"h-5 w-5 text-gray-400 mt-1\" />\n                    <div className=\"flex-1\">\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Target Price</p>\n                      <p className=\"font-semibold\">{rfq.targetPrice}</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-start gap-3\">\n                    <Truck className=\"h-5 w-5 text-gray-400 mt-1\" />\n                    <div className=\"flex-1\">\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Delivery Location</p>\n                      <p className=\"font-semibold\">{rfq.deliveryLocation}</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-start gap-3\">\n                    <Calendar className=\"h-5 w-5 text-gray-400 mt-1\" />\n                    <div className=\"flex-1\">\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Expected Date</p>\n                      <p className=\"font-semibold\">{rfq.expectedDate}</p>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"space-y-3\">\n                  <Button \n                    onClick={handleSubmit}\n                    className=\"w-full gradient-blue text-white\" \n                    size=\"lg\"\n                    data-testid=\"button-send-quotation\"\n                  >\n                    <Send className=\"h-5 w-5 mr-2\" />\n                    Send Quotation\n                  </Button>\n\n                  <Button variant=\"outline\" className=\"w-full\" data-testid=\"button-save-draft\">\n                    Save as Draft\n                  </Button>\n\n                  <p className=\"text-xs text-center text-gray-500\">\n                    Buyer will be notified of your quotation\n                  </p>\n                </div>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":13887},"client/src/pages/RFQBrowse.tsx":{"content":"import Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport RFQCard from \"@/components/RFQCard\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\n\nexport default function RFQBrowse() {\n  //todo: remove mock functionality\n  const rfqs = [\n    {\n      id: \"1\",\n      title: \"Looking for High-Quality Wireless Earbuds - Bulk Order\",\n      quantity: \"5,000 units\",\n      budget: \"$15-20 per unit\",\n      location: \"United States\",\n      timeRemaining: \"3 days left\",\n      quotations: 12,\n      category: \"Electronics\",\n    },\n    {\n      id: \"2\",\n      title: \"Need Custom Branded T-Shirts with Logo Printing\",\n      quantity: \"10,000 pieces\",\n      budget: \"$3-5 per piece\",\n      location: \"United Kingdom\",\n      timeRemaining: \"5 days left\",\n      quotations: 8,\n      category: \"Apparel\",\n    },\n    {\n      id: \"3\",\n      title: \"Industrial Grade Steel Pipes - Various Sizes Required\",\n      quantity: \"2,000 meters\",\n      location: \"Germany\",\n      timeRemaining: \"1 day left\",\n      quotations: 15,\n      category: \"Construction\",\n    },\n    {\n      id: \"4\",\n      title: \"Eco-Friendly Packaging Boxes for E-commerce\",\n      quantity: \"50,000 boxes\",\n      budget: \"$0.50-1.00 per box\",\n      location: \"Canada\",\n      timeRemaining: \"6 days left\",\n      quotations: 10,\n      category: \"Packaging\",\n    },\n    {\n      id: \"5\",\n      title: \"LED Strip Lights for Commercial Use\",\n      quantity: \"1,000 rolls\",\n      budget: \"$20-30 per roll\",\n      location: \"Australia\",\n      timeRemaining: \"4 days left\",\n      quotations: 7,\n      category: \"Lighting\",\n    },\n    {\n      id: \"6\",\n      title: \"Automotive Parts - Brake Pads Wholesale\",\n      quantity: \"5,000 sets\",\n      location: \"United States\",\n      timeRemaining: \"2 days left\",\n      quotations: 20,\n      category: \"Automotive\",\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-8\">\n          <div className=\"flex gap-4 sm:gap-8\">\n            <aside className=\"hidden lg:block w-64 flex-shrink-0\">\n              <div className=\"sticky top-24 space-y-6\">\n                <div>\n                  <h3 className=\"font-semibold mb-4\">Category</h3>\n                  <div className=\"space-y-2\">\n                    {[\"Electronics\", \"Apparel\", \"Construction\", \"Packaging\", \"Automotive\"].map((cat) => (\n                      <div key={cat} className=\"flex items-center space-x-2\">\n                        <Checkbox id={`cat-${cat}`} data-testid={`checkbox-category-${cat.toLowerCase()}`} />\n                        <Label htmlFor={`cat-${cat}`} className=\"text-sm cursor-pointer\">{cat}</Label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"font-semibold mb-4\">Location</h3>\n                  <div className=\"space-y-2\">\n                    {[\"United States\", \"United Kingdom\", \"Germany\", \"Canada\"].map((loc) => (\n                      <div key={loc} className=\"flex items-center space-x-2\">\n                        <Checkbox id={`loc-${loc}`} data-testid={`checkbox-location-${loc.toLowerCase()}`} />\n                        <Label htmlFor={`loc-${loc}`} className=\"text-sm cursor-pointer\">{loc}</Label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"font-semibold mb-4\">Quantity Range</h3>\n                  <div className=\"space-y-2\">\n                    {[\"< 1,000\", \"1,000 - 10,000\", \"10,000 - 50,000\", \"> 50,000\"].map((range) => (\n                      <div key={range} className=\"flex items-center space-x-2\">\n                        <Checkbox id={`qty-${range}`} data-testid={`checkbox-quantity-${range}`} />\n                        <Label htmlFor={`qty-${range}`} className=\"text-sm cursor-pointer\">{range}</Label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </aside>\n\n            <div className=\"flex-1 min-w-0\">\n              <div className=\"flex flex-col sm:flex-row sm:items-center justify-between mb-4 sm:mb-6 gap-3 sm:gap-4\">\n                <div>\n                  <h1 className=\"text-xl sm:text-2xl font-bold mb-1\">Browse RFQs</h1>\n                  <p className=\"text-xs sm:text-sm text-muted-foreground\">Find buyers looking for your products</p>\n                </div>\n                <div className=\"flex items-center gap-4\">\n                  <Select defaultValue=\"newest\">\n                    <SelectTrigger className=\"w-full sm:w-48\" data-testid=\"select-sort\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"newest\">Newest First</SelectItem>\n                      <SelectItem value=\"ending-soon\">Ending Soon</SelectItem>\n                      <SelectItem value=\"most-quoted\">Most Quoted</SelectItem>\n                      <SelectItem value=\"budget-high\">Highest Budget</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              <div className=\"space-y-3 sm:space-y-4\">\n                {rfqs.map((rfq) => (\n                  <RFQCard key={rfq.id} {...rfq} />\n                ))}\n              </div>\n\n              <div className=\"mt-6 sm:mt-8 flex justify-center\">\n                <div className=\"flex flex-wrap gap-2 justify-center\">\n                  <Button variant=\"outline\" size=\"sm\" className=\"text-xs sm:text-sm\" data-testid=\"button-prev-page\">Previous</Button>\n                  <Button size=\"sm\" className=\"text-xs sm:text-sm\" data-testid=\"button-page-1\">1</Button>\n                  <Button variant=\"outline\" size=\"sm\" className=\"text-xs sm:text-sm\" data-testid=\"button-page-2\">2</Button>\n                  <Button variant=\"outline\" size=\"sm\" className=\"text-xs sm:text-sm\" data-testid=\"button-page-3\">3</Button>\n                  <Button variant=\"outline\" size=\"sm\" className=\"text-xs sm:text-sm\" data-testid=\"button-next-page\">Next</Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":6614},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* LIGHT MODE */\n:root {\n  --button-outline: rgba(0,0,0, .10);\n  --badge-outline: rgba(0,0,0, .05);\n\n  /* Automatic computation of border around primary / danger buttons */\n  --opaque-button-border-intensity: -8; /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(0,0,0, .03);\n  --elevate-2: rgba(0,0,0, .08);\n\n  --background: 0 0% 100%;\n\n  --foreground: 220 13% 20%;\n\n  --border: 220 13% 85%;\n\n  --card: 220 13% 97%;\n\n  --card-foreground: 220 13% 20%;\n\n  --card-border: 220 13% 91%;\n\n  --sidebar: 220 13% 95%;\n\n  --sidebar-foreground: 220 13% 20%;\n\n  --sidebar-border: 220 13% 88%;\n\n  --sidebar-primary: 220 13% 35%;\n\n  --sidebar-primary-foreground: 0 0% 100%;\n\n  --sidebar-accent: 220 13% 89%;\n\n  --sidebar-accent-foreground: 220 13% 20%;\n\n  --sidebar-ring: 220 13% 35%;\n\n  --popover: 220 13% 93%;\n\n  --popover-foreground: 220 13% 20%;\n\n  --popover-border: 220 13% 86%;\n\n  --primary: 220 13% 35%;\n\n  --primary-foreground: 0 0% 100%;\n  \n  --blue-gradient-start: 220 13% 35%;\n  --blue-gradient-end: 220 13% 45%;\n  --accent-gradient-start: 220 13% 35%;\n  --accent-gradient-end: 220 13% 45%;\n\n  --secondary: 220 13% 91%;\n\n  --secondary-foreground: 220 13% 20%;\n\n  --muted: 220 9% 90%;\n\n  --muted-foreground: 220 9% 46%;\n\n  --accent: 220 10% 88%;\n\n  --accent-foreground: 220 13% 20%;\n\n  --destructive: 0 84% 48%;\n\n  --destructive-foreground: 0 0% 100%;\n\n  --input: 220 13% 75%;\n  --ring: 220 13% 35%;\n  --chart-1: 220 13% 35%;\n  --chart-2: 142 76% 36%;\n  --chart-3: 220 13% 50%;\n  --chart-4: 280 50% 55%;\n  --chart-5: 142 76% 36%;\n\n  --font-sans: Inter, system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: 'DM Sans', monospace;\n  --radius: .5rem; /* 8px */\n  --shadow-2xs: 0px 1px 2px 0px hsl(220 13% 20% / 0.05);\n  --shadow-xs: 0px 1px 2px 0px hsl(220 13% 20% / 0.06);\n  --shadow-sm: 0px 1px 2px 0px hsl(220 13% 20% / 0.06), 0px 1px 3px 0px hsl(220 13% 20% / 0.10);\n  --shadow: 0px 1px 2px 0px hsl(220 13% 20% / 0.06), 0px 1px 3px 0px hsl(220 13% 20% / 0.10);\n  --shadow-md: 0px 2px 4px -1px hsl(220 13% 20% / 0.06), 0px 4px 6px -1px hsl(220 13% 20% / 0.10);\n  --shadow-lg: 0px 4px 6px -2px hsl(220 13% 20% / 0.05), 0px 10px 15px -3px hsl(220 13% 20% / 0.10);\n  --shadow-xl: 0px 10px 10px -5px hsl(220 13% 20% / 0.04), 0px 20px 25px -5px hsl(220 13% 20% / 0.10);\n  --shadow-2xl: 0px 25px 50px -12px hsl(220 13% 20% / 0.25);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n.dark {\n  --button-outline: rgba(255,255,255, .10);\n  --badge-outline: rgba(255,255,255, .05);\n\n  --opaque-button-border-intensity: 9;  /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(255,255,255, .04);\n  --elevate-2: rgba(255,255,255, .09);\n\n  --background: 222 47% 11%;\n\n  --foreground: 210 20% 98%;\n\n  --border: 217 33% 25%;\n\n  --card: 217 33% 17%;\n\n  --card-foreground: 210 20% 98%;\n\n  --card-border: 217 33% 22%;\n\n  --sidebar: 217 33% 15%;\n\n  --sidebar-foreground: 210 20% 98%;\n\n  --sidebar-border: 217 33% 20%;\n\n  --sidebar-primary: 220 13% 45%;\n\n  --sidebar-primary-foreground: 0 0% 100%;\n\n  --sidebar-accent: 217 33% 20%;\n\n  --sidebar-accent-foreground: 210 20% 98%;\n\n  --sidebar-ring: 220 13% 45%;\n\n  --popover: 217 33% 19%;\n\n  --popover-foreground: 210 20% 98%;\n\n  --popover-border: 217 33% 24%;\n\n  --primary: 220 13% 45%;\n\n  --primary-foreground: 0 0% 100%;\n\n  --secondary: 217 33% 22%;\n\n  --secondary-foreground: 210 20% 98%;\n\n  --muted: 217 20% 21%;\n\n  --muted-foreground: 217 20% 65%;\n\n  --accent: 217 20% 23%;\n\n  --accent-foreground: 210 20% 98%;\n\n  --destructive: 0 84% 48%;\n\n  --destructive-foreground: 0 0% 100%;\n\n  --input: 217 33% 35%;\n  --ring: 220 13% 45%;\n  --chart-1: 220 13% 55%;\n  --chart-2: 142 76% 55%;\n  --chart-3: 220 13% 75%;\n  --chart-4: 280 50% 65%;\n  --chart-5: 142 76% 55%;\n\n  --shadow-2xs: 0px 1px 2px 0px hsl(222 47% 5% / 0.30);\n  --shadow-xs: 0px 1px 2px 0px hsl(222 47% 5% / 0.40);\n  --shadow-sm: 0px 1px 2px 0px hsl(222 47% 5% / 0.40), 0px 1px 3px 0px hsl(222 47% 5% / 0.50);\n  --shadow: 0px 1px 2px 0px hsl(222 47% 5% / 0.40), 0px 1px 3px 0px hsl(222 47% 5% / 0.50);\n  --shadow-md: 0px 2px 4px -1px hsl(222 47% 5% / 0.40), 0px 4px 6px -1px hsl(222 47% 5% / 0.50);\n  --shadow-lg: 0px 4px 6px -2px hsl(222 47% 5% / 0.30), 0px 10px 15px -3px hsl(222 47% 5% / 0.50);\n  --shadow-xl: 0px 10px 10px -5px hsl(222 47% 5% / 0.30), 0px 20px 25px -5px hsl(222 47% 5% / 0.50);\n  --shadow-2xl: 0px 25px 50px -12px hsl(222 47% 5% / 0.60);\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n  \n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n/**\n * Using the elevate system.\n * Automatic contrast adjustment.\n *\n * <element className=\"hover-elevate\" />\n * <element className=\"active-elevate-2\" />\n *\n * // Using the tailwind utility when a data attribute is \"on\"\n * <element className=\"toggle-elevate data-[state=on]:toggle-elevated\" />\n * // Or manually controlling the toggle state\n * <element className=\"toggle-elevate toggle-elevated\" />\n *\n * Elevation systems have to handle many states.\n * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)\n * - toggled or not\n * - focused or not (this is not handled with these utilities)\n *\n * Even without handling focused or not, this is six possible combinations that\n * need to be distinguished from eachother visually.\n */\n@layer utilities {\n\n  /* Hide ugly search cancel button in Chrome until we can style it properly */\n  input[type=\"search\"]::-webkit-search-cancel-button {\n    @apply hidden;\n  }\n\n  /* Placeholder styling for contentEditable div */\n  [contenteditable][data-placeholder]:empty::before {\n    content: attr(data-placeholder);\n    color: hsl(var(--muted-foreground));\n    pointer-events: none;\n  }\n\n  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of\n   * buttons/badges can remove the automatic brightness adjustment on interactions\n   * and program their own. */\n  .no-default-hover-elevate {}\n\n  .no-default-active-elevate {}\n\n\n  /**\n   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.\n   * This way they can stack/compound. Both will overlap the parent's borders!\n   * So borders will be automatically adjusted both on toggle, and hover/active,\n   * and they will be compounded.\n   */\n  .toggle-elevate::before,\n  .toggle-elevate-2::before {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: -1;\n    /* sits behind content but above backdrop */\n  }\n\n  .toggle-elevate.toggle-elevated::before {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.toggle-elevate::before {\n    inset: -1px;\n  }\n\n  /* Does not work on elements with overflow:hidden! */\n  .hover-elevate:not(.no-default-hover-elevate),\n  .active-elevate:not(.no-default-active-elevate),\n  .hover-elevate-2:not(.no-default-hover-elevate),\n  .active-elevate-2:not(.no-default-active-elevate) {\n    position: relative;\n    z-index: 0;\n  }\n\n  .hover-elevate:not(.no-default-hover-elevate)::after,\n  .active-elevate:not(.no-default-active-elevate)::after,\n  .hover-elevate-2:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:not(.no-default-active-elevate)::after {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: 999;\n    /* sits in front of content */\n  }\n\n  .hover-elevate:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-1);\n  }\n\n  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {\n    inset: -1px;\n  }\n  \n  .gradient-blue {\n    background: linear-gradient(135deg, hsl(var(--blue-gradient-start)), hsl(var(--blue-gradient-end)));\n  }\n  \n  .gradient-accent {\n    background: linear-gradient(135deg, hsl(var(--accent-gradient-start)), hsl(var(--accent-gradient-end)));\n  }\n  \n  .gradient-text {\n    background: linear-gradient(135deg, hsl(var(--blue-gradient-start)), hsl(var(--blue-gradient-end)));\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n  \n  .glass-card {\n    background: rgba(255, 255, 255, 0.9);\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n  }\n  \n  .dark .glass-card {\n    background: rgba(30, 41, 59, 0.8);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n  }\n  \n  /* Chatbot specific styles */\n  .chatbot-button {\n    position: fixed !important;\n    bottom: 1.5rem !important;\n    right: 1.5rem !important;\n    z-index: 9999 !important;\n    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25) !important;\n  }\n  \n  .chatbot-widget {\n    position: fixed !important;\n    bottom: 1.5rem !important;\n    right: 1.5rem !important;\n    z-index: 9999 !important;\n    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25) !important;\n  }\n}","size_bytes":12791},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ChatbotWidget.tsx":{"content":"import { useState } from \"react\";\nimport { Bot, X, Send } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card } from \"@/components/ui/card\";\n\nexport default function ChatbotWidget() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState<Array<{ from: string; message: string; time: string }>>([\n    {\n      from: \"bot\",\n      message: \"Hi! I'm your B2B assistant. I can help you find products, suppliers, or answer questions about our platform. How can I help you today?\",\n      time: \"Just now\"\n    }\n  ]);\n\n  const botResponses = [\n    \"I can help you find suppliers for your business needs. What product are you looking for?\",\n    \"Would you like me to show you our top-rated suppliers or help you post an RFQ?\",\n    \"You can browse products by category, or I can help you find specific items. What interests you?\",\n    \"I'm here to assist! Feel free to ask about MOQs, pricing, or shipping options.\",\n    \"Our platform connects you with verified suppliers worldwide. What industry are you in?\"\n  ];\n\n  const handleSendMessage = () => {\n    if (!message.trim()) return;\n\n    setChatHistory([\n      ...chatHistory,\n      {\n        from: \"user\",\n        message: message,\n        time: \"Just now\"\n      }\n    ]);\n    setMessage(\"\");\n\n    setTimeout(() => {\n      const randomResponse = botResponses[Math.floor(Math.random() * botResponses.length)];\n      setChatHistory(prev => [\n        ...prev,\n        {\n          from: \"bot\",\n          message: randomResponse,\n          time: \"Just now\"\n        }\n      ]);\n    }, 800);\n  };\n\n  return (\n    <>\n      {!isOpen && (\n        <Button\n          onClick={() => setIsOpen(true)}\n          className=\"chatbot-button h-16 w-16 rounded-full bg-primary hover:bg-primary/90 text-white shadow-2xl hover:shadow-3xl transition-all animate-pulse hover:scale-110 no-default-hover-elevate no-default-active-elevate\"\n          size=\"icon\"\n          data-testid=\"button-open-chatbot\"\n        >\n          <Bot className=\"h-7 w-7\" />\n        </Button>\n      )}\n\n      {isOpen && (\n        <Card className=\"chatbot-widget w-96 h-[500px] flex flex-col shadow-2xl overflow-hidden\">\n          <div className=\"bg-primary text-white p-4 flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"h-10 w-10 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center\">\n                <Bot className=\"h-5 w-5\" />\n              </div>\n              <div>\n                <h3 className=\"font-semibold\">B2B Assistant</h3>\n                <p className=\"text-xs text-white/80\">Always Online</p>\n              </div>\n            </div>\n            <Button\n              onClick={() => setIsOpen(false)}\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"text-white hover:bg-white/20 no-default-hover-elevate\"\n              data-testid=\"button-close-chatbot\"\n            >\n              <X className=\"h-5 w-5\" />\n            </Button>\n          </div>\n\n          <div className=\"flex-1 overflow-y-auto p-4 space-y-3 bg-muted/30\">\n            {chatHistory.map((chat, index) => (\n              <div\n                key={index}\n                className={`flex ${chat.from === \"user\" ? \"justify-end\" : \"justify-start\"}`}\n              >\n                <div\n                  className={`max-w-[80%] rounded-lg p-3 ${\n                    chat.from === \"user\"\n                      ? \"bg-primary text-white\"\n                      : \"bg-card border border-border\"\n                  }`}\n                >\n                  <p className=\"text-sm\">{chat.message}</p>\n                  <p className={`text-xs mt-1 ${chat.from === \"user\" ? \"text-white/80\" : \"text-muted-foreground\"}`}>\n                    {chat.time}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"p-4 border-t border-border bg-background\">\n            <div className=\"flex gap-2\">\n              <Textarea\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                placeholder=\"Ask me anything...\"\n                className=\"resize-none flex-1\"\n                rows={2}\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\" && !e.shiftKey) {\n                    e.preventDefault();\n                    handleSendMessage();\n                  }\n                }}\n                data-testid=\"textarea-chatbot-message\"\n              />\n              <Button\n                onClick={handleSendMessage}\n                className=\"self-end\"\n                size=\"icon\"\n                data-testid=\"button-send-chatbot-message\"\n              >\n                <Send className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </div>\n        </Card>\n      )}\n    </>\n  );\n}\n","size_bytes":4994},"client/src/components/examples/HeroSection.tsx":{"content":"import HeroSection from '../HeroSection';\n\nexport default function HeroSectionExample() {\n  return <HeroSection />;\n}\n","size_bytes":118},"client/src/pages/Signup.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Mail, Lock, Eye, EyeOff, Building2, User, Phone } from \"lucide-react\";\nimport { SiGoogle, SiFacebook, SiLinkedin } from \"react-icons/si\";\n\nexport default function Signup() {\n  const [showPassword, setShowPassword] = useState(false);\n  const [accountType, setAccountType] = useState(\"buyer\");\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(\"Signup attempt for:\", accountType);\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1 flex items-center justify-center py-8 sm:py-12 px-4 sm:px-6\">\n        <div className=\"w-full max-w-2xl\">\n          <Card>\n            <CardHeader className=\"space-y-2 text-center px-4 sm:px-6\">\n              <CardTitle className=\"text-2xl sm:text-3xl font-bold\">Create Your Account</CardTitle>\n              <CardDescription className=\"text-sm sm:text-base\">\n                Join thousands of businesses trading globally\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"px-4 sm:px-6\">\n              <Tabs value={accountType} onValueChange={setAccountType} className=\"mb-4 sm:mb-6\">\n                <TabsList className=\"grid w-full grid-cols-2\">\n                  <TabsTrigger value=\"buyer\" className=\"text-sm sm:text-base\" data-testid=\"tab-buyer\">I'm a Buyer</TabsTrigger>\n                  <TabsTrigger value=\"supplier\" className=\"text-sm sm:text-base\" data-testid=\"tab-supplier\">I'm a Supplier</TabsTrigger>\n                </TabsList>\n\n                <TabsContent value=\"buyer\" className=\"mt-4 sm:mt-6\">\n                  <form onSubmit={handleSubmit} className=\"space-y-3 sm:space-y-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <Label htmlFor=\"buyer-first-name\">First Name *</Label>\n                        <div className=\"relative mt-2\">\n                          <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n                          <Input\n                            id=\"buyer-first-name\"\n                            placeholder=\"John\"\n                            className=\"pl-10\"\n                            required\n                            data-testid=\"input-buyer-first-name\"\n                          />\n                        </div>\n                      </div>\n                      <div>\n                        <Label htmlFor=\"buyer-last-name\">Last Name *</Label>\n                        <div className=\"relative mt-2\">\n                          <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n                          <Input\n                            id=\"buyer-last-name\"\n                            placeholder=\"Doe\"\n                            className=\"pl-10\"\n                            required\n                            data-testid=\"input-buyer-last-name\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"buyer-email\">Business Email *</Label>\n                      <div className=\"relative mt-2\">\n                        <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n                        <Input\n                          id=\"buyer-email\"\n                          type=\"email\"\n                          placeholder=\"you@company.com\"\n                          className=\"pl-10\"\n                          required\n                          data-testid=\"input-buyer-email\"\n                        />\n                      </div>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"buyer-company\">Company Name *</Label>\n                      <div className=\"relative mt-2\">\n                        <Building2 className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n                        <Input\n                          id=\"buyer-company\"\n                          placeholder=\"Your Company Ltd.\"\n                          className=\"pl-10\"\n                          required\n                          data-testid=\"input-buyer-company\"\n                        />\n                      </div>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"buyer-phone\">Phone Number</Label>\n                      <div className=\"relative mt-2\">\n                        <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n                        <Input\n                          id=\"buyer-phone\"\n                          type=\"tel\"\n                          placeholder=\"+1 (234) 567-8900\"\n                          className=\"pl-10\"\n                          data-testid=\"input-buyer-phone\"\n                        />\n                      </div>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"buyer-password\">Password *</Label>\n                      <div className=\"relative mt-2\">\n                        <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n                        <Input\n                          id=\"buyer-password\"\n                          type={showPassword ? \"text\" : \"password\"}\n                          placeholder=\"Create a strong password\"\n                          className=\"pl-10 pr-10\"\n                          required\n                          data-testid=\"input-buyer-password\"\n                        />\n                        <button\n                          type=\"button\"\n                          onClick={() => setShowPassword(!showPassword)}\n                          className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-muted-foreground hover:text-foreground\"\n                          data-testid=\"button-toggle-password\"\n                        >\n                          {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                        </button>\n                      </div>\n                      <p className=\"text-xs text-muted-foreground mt-1\">\n                        Must be at least 8 characters with uppercase, lowercase, and numbers\n                      </p>\n                    </div>\n\n                    <div className=\"flex items-start space-x-2\">\n                      <Checkbox id=\"buyer-terms\" required data-testid=\"checkbox-buyer-terms\" />\n                      <Label htmlFor=\"buyer-terms\" className=\"text-sm cursor-pointer leading-relaxed\">\n                        I agree to the <Link href=\"/terms\"><a className=\"text-primary hover:underline\">Terms of Service</a></Link> and <Link href=\"/privacy\"><a className=\"text-primary hover:underline\">Privacy Policy</a></Link>\n                      </Label>\n                    </div>\n\n                    <Button type=\"submit\" className=\"w-full\" size=\"lg\" data-testid=\"button-buyer-signup\">\n                      Create Buyer Account\n                    </Button>\n                  </form>\n                </TabsContent>\n\n                <TabsContent value=\"supplier\" className=\"mt-4 sm:mt-6\">\n                  <form onSubmit={handleSubmit} className=\"space-y-3 sm:space-y-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <Label htmlFor=\"supplier-first-name\">First Name *</Label>\n                        <div className=\"relative mt-2\">\n                          <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n                          <Input\n                            id=\"supplier-first-name\"\n                            placeholder=\"John\"\n                            className=\"pl-10\"\n                            required\n                            data-testid=\"input-supplier-first-name\"\n                          />\n                        </div>\n                      </div>\n                      <div>\n                        <Label htmlFor=\"supplier-last-name\">Last Name *</Label>\n                        <div className=\"relative mt-2\">\n                          <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n                          <Input\n                            id=\"supplier-last-name\"\n                            placeholder=\"Doe\"\n                            className=\"pl-10\"\n                            required\n                            data-testid=\"input-supplier-last-name\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"supplier-email\">Business Email *</Label>\n                      <div className=\"relative mt-2\">\n                        <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n                        <Input\n                          id=\"supplier-email\"\n                          type=\"email\"\n                          placeholder=\"sales@company.com\"\n                          className=\"pl-10\"\n                          required\n                          data-testid=\"input-supplier-email\"\n                        />\n                      </div>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"supplier-company\">Company Name *</Label>\n                      <div className=\"relative mt-2\">\n                        <Building2 className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n                        <Input\n                          id=\"supplier-company\"\n                          placeholder=\"Manufacturing Co. Ltd.\"\n                          className=\"pl-10\"\n                          required\n                          data-testid=\"input-supplier-company\"\n                        />\n                      </div>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"supplier-phone\">Phone Number *</Label>\n                      <div className=\"relative mt-2\">\n                        <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n                        <Input\n                          id=\"supplier-phone\"\n                          type=\"tel\"\n                          placeholder=\"+86 123 4567 8900\"\n                          className=\"pl-10\"\n                          required\n                          data-testid=\"input-supplier-phone\"\n                        />\n                      </div>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"supplier-password\">Password *</Label>\n                      <div className=\"relative mt-2\">\n                        <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n                        <Input\n                          id=\"supplier-password\"\n                          type={showPassword ? \"text\" : \"password\"}\n                          placeholder=\"Create a strong password\"\n                          className=\"pl-10 pr-10\"\n                          required\n                          data-testid=\"input-supplier-password\"\n                        />\n                        <button\n                          type=\"button\"\n                          onClick={() => setShowPassword(!showPassword)}\n                          className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-muted-foreground hover:text-foreground\"\n                          data-testid=\"button-toggle-password-supplier\"\n                        >\n                          {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                        </button>\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-start space-x-2\">\n                      <Checkbox id=\"supplier-terms\" required data-testid=\"checkbox-supplier-terms\" />\n                      <Label htmlFor=\"supplier-terms\" className=\"text-sm cursor-pointer leading-relaxed\">\n                        I agree to the <Link href=\"/terms\"><a className=\"text-primary hover:underline\">Terms of Service</a></Link> and <Link href=\"/privacy\"><a className=\"text-primary hover:underline\">Privacy Policy</a></Link>\n                      </Label>\n                    </div>\n\n                    <Button type=\"submit\" className=\"w-full\" size=\"lg\" data-testid=\"button-supplier-signup\">\n                      Create Supplier Account\n                    </Button>\n                  </form>\n                </TabsContent>\n              </Tabs>\n\n              <div className=\"mt-4 sm:mt-6\">\n                <div className=\"relative\">\n                  <div className=\"absolute inset-0 flex items-center\">\n                    <Separator />\n                  </div>\n                  <div className=\"relative flex justify-center text-xs uppercase\">\n                    <span className=\"bg-background px-2 text-muted-foreground\">Or sign up with</span>\n                  </div>\n                </div>\n\n                <div className=\"mt-4 sm:mt-6 grid grid-cols-3 gap-2 sm:gap-3\">\n                  <Button variant=\"outline\" className=\"w-full\" data-testid=\"button-google-signup\">\n                    <SiGoogle className=\"w-4 h-4 sm:w-5 sm:h-5\" />\n                  </Button>\n                  <Button variant=\"outline\" className=\"w-full\" data-testid=\"button-facebook-signup\">\n                    <SiFacebook className=\"w-4 h-4 sm:w-5 sm:h-5\" />\n                  </Button>\n                  <Button variant=\"outline\" className=\"w-full\" data-testid=\"button-linkedin-signup\">\n                    <SiLinkedin className=\"w-4 h-4 sm:w-5 sm:h-5\" />\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"mt-4 sm:mt-6 text-center text-xs sm:text-sm\">\n                <span className=\"text-muted-foreground\">Already have an account? </span>\n                <Link href=\"/login\">\n                  <a className=\"text-primary font-semibold hover:underline\" data-testid=\"link-login\">\n                    Sign in\n                  </a>\n                </Link>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":15180},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, decimal, boolean, timestamp, json } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n\n// Categories\nexport const categories = pgTable(\"categories\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  description: text(\"description\"),\n  parentId: varchar(\"parent_id\"),\n  imageUrl: text(\"image_url\"),\n  displayOrder: integer(\"display_order\").default(0),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const insertCategorySchema = createInsertSchema(categories).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertCategory = z.infer<typeof insertCategorySchema>;\nexport type Category = typeof categories.$inferSelect;\n\n// Products\nexport const products = pgTable(\"products\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  externalId: text(\"external_id\"), // For imported products\n  type: text(\"type\").default(\"simple\"), // simple, variable, etc.\n  sku: text(\"sku\").unique(),\n  gtin: text(\"gtin\"), // GTIN, UPC, EAN, or ISBN\n  name: text(\"name\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  shortDescription: text(\"short_description\"),\n  description: text(\"description\"),\n  categoryId: varchar(\"category_id\"),\n  tags: text(\"tags\").array(),\n  images: text(\"images\").array(), // Array of image URLs\n  regularPrice: decimal(\"regular_price\", { precision: 10, scale: 2 }),\n  salePrice: decimal(\"sale_price\", { precision: 10, scale: 2 }),\n  salePriceStartDate: timestamp(\"sale_price_start_date\"),\n  salePriceEndDate: timestamp(\"sale_price_end_date\"),\n  taxStatus: text(\"tax_status\").default(\"taxable\"),\n  taxClass: text(\"tax_class\"),\n  inStock: boolean(\"in_stock\").default(true),\n  stockQuantity: integer(\"stock_quantity\").default(0),\n  lowStockAmount: integer(\"low_stock_amount\"),\n  backordersAllowed: boolean(\"backorders_allowed\").default(false),\n  soldIndividually: boolean(\"sold_individually\").default(false),\n  weight: decimal(\"weight\", { precision: 10, scale: 2 }), // kg\n  length: decimal(\"length\", { precision: 10, scale: 2 }), // cm\n  width: decimal(\"width\", { precision: 10, scale: 2 }), // cm\n  height: decimal(\"height\", { precision: 10, scale: 2 }), // cm\n  shippingClass: text(\"shipping_class\"),\n  allowReviews: boolean(\"allow_reviews\").default(true),\n  isFeatured: boolean(\"is_featured\").default(false),\n  isPublished: boolean(\"is_published\").default(true),\n  visibility: text(\"visibility\").default(\"visible\"),\n  purchaseNote: text(\"purchase_note\"),\n  downloadLimit: integer(\"download_limit\"),\n  downloadExpiryDays: integer(\"download_expiry_days\"),\n  metaData: json(\"meta_data\"), // For additional custom fields\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const insertProductSchema = createInsertSchema(products).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport type InsertProduct = z.infer<typeof insertProductSchema>;\nexport type Product = typeof products.$inferSelect;\n\n// Customers\nexport const customers = pgTable(\"customers\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: text(\"email\").notNull().unique(),\n  firstName: text(\"first_name\"),\n  lastName: text(\"last_name\"),\n  company: text(\"company\"),\n  phone: text(\"phone\"),\n  country: text(\"country\"),\n  address: text(\"address\"),\n  city: text(\"city\"),\n  state: text(\"state\"),\n  postalCode: text(\"postal_code\"),\n  isVerified: boolean(\"is_verified\").default(false),\n  accountType: text(\"account_type\").default(\"buyer\"), // buyer, supplier, both\n  notes: text(\"notes\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const insertCustomerSchema = createInsertSchema(customers).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertCustomer = z.infer<typeof insertCustomerSchema>;\nexport type Customer = typeof customers.$inferSelect;\n\n// Suppliers\nexport const suppliers = pgTable(\"suppliers\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull().unique(),\n  phone: text(\"phone\"),\n  country: text(\"country\"),\n  city: text(\"city\"),\n  address: text(\"address\"),\n  website: text(\"website\"),\n  logoUrl: text(\"logo_url\"),\n  description: text(\"description\"),\n  productsOffered: text(\"products_offered\").array(),\n  isVerified: boolean(\"is_verified\").default(false),\n  rating: decimal(\"rating\", { precision: 3, scale: 2 }).default(\"0\"),\n  totalOrders: integer(\"total_orders\").default(0),\n  responseTime: text(\"response_time\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const insertSupplierSchema = createInsertSchema(suppliers).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertSupplier = z.infer<typeof insertSupplierSchema>;\nexport type Supplier = typeof suppliers.$inferSelect;\n\n// Orders\nexport const orders = pgTable(\"orders\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  orderNumber: text(\"order_number\").notNull().unique(),\n  customerId: varchar(\"customer_id\"),\n  supplierId: varchar(\"supplier_id\"),\n  status: text(\"status\").default(\"pending\"), // pending, processing, shipped, delivered, cancelled\n  totalAmount: decimal(\"total_amount\", { precision: 10, scale: 2 }).notNull(),\n  shippingAmount: decimal(\"shipping_amount\", { precision: 10, scale: 2 }).default(\"0\"),\n  taxAmount: decimal(\"tax_amount\", { precision: 10, scale: 2 }).default(\"0\"),\n  items: json(\"items\").notNull(), // Array of order items\n  shippingAddress: json(\"shipping_address\"),\n  billingAddress: json(\"billing_address\"),\n  paymentMethod: text(\"payment_method\"),\n  paymentStatus: text(\"payment_status\").default(\"pending\"),\n  trackingNumber: text(\"tracking_number\"),\n  notes: text(\"notes\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const insertOrderSchema = createInsertSchema(orders).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport type InsertOrder = z.infer<typeof insertOrderSchema>;\nexport type Order = typeof orders.$inferSelect;\n","size_bytes":6668},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/pages/StartOrder.tsx":{"content":"import { useState } from \"react\";\nimport { useRoute } from \"wouter\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Card } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { ShoppingCart, Package, Truck, DollarSign, Calendar, FileText } from \"lucide-react\";\n\nexport default function StartOrder() {\n  const [, params] = useRoute(\"/start-order/:productId\");\n  const [quantity, setQuantity] = useState(\"1000\");\n  const [customization, setCustomization] = useState(\"\");\n  const [deliveryDate, setDeliveryDate] = useState(\"\");\n  const [paymentTerms, setPaymentTerms] = useState(\"\");\n\n  const product = {\n    id: params?.productId || \"1\",\n    name: \"Industrial Metal Parts\",\n    supplier: \"Shanghai Manufacturing Co.\",\n    image: \"/placeholder.svg\",\n    priceRanges: [\n      { min: 100, max: 499, price: 5.00 },\n      { min: 500, max: 999, price: 4.50 },\n      { min: 1000, max: 4999, price: 4.00 },\n      { min: 5000, max: null, price: 3.50 }\n    ],\n    moq: 100,\n    leadTime: \"15-30 days\",\n    port: \"Shanghai/Ningbo\"\n  };\n\n  const getPrice = (qty: number) => {\n    const range = product.priceRanges.find(r => \n      qty >= r.min && (r.max === null || qty <= r.max)\n    );\n    return range ? range.price : product.priceRanges[0].price;\n  };\n\n  const unitPrice = getPrice(parseInt(quantity) || 0);\n  const totalPrice = unitPrice * (parseInt(quantity) || 0);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(\"Order submitted\");\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1 bg-gray-50 dark:bg-gray-900\">\n        <div className=\"gradient-blue text-white py-12\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <h1 className=\"text-4xl font-bold mb-2\">Start Bulk Order</h1>\n            <p className=\"text-gray-200\">Configure your bulk purchase</p>\n          </div>\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            <div className=\"lg:col-span-2\">\n              <Card className=\"p-6 glass-card mb-6\">\n                <h2 className=\"text-2xl font-bold mb-6\">Order Details</h2>\n                \n                <div className=\"flex gap-4 mb-6 pb-6 border-b border-gray-200 dark:border-gray-700\">\n                  <img\n                    src={product.image}\n                    alt={product.name}\n                    className=\"w-24 h-24 rounded-lg object-cover\"\n                  />\n                  <div>\n                    <h3 className=\"font-semibold text-lg\">{product.name}</h3>\n                    <p className=\"text-gray-600 dark:text-gray-400\">{product.supplier}</p>\n                    <Badge className=\"mt-2\">MOQ: {product.moq} pieces</Badge>\n                  </div>\n                </div>\n\n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                  <div>\n                    <Label htmlFor=\"quantity\">Order Quantity *</Label>\n                    <Input\n                      id=\"quantity\"\n                      type=\"number\"\n                      min={product.moq}\n                      value={quantity}\n                      onChange={(e) => setQuantity(e.target.value)}\n                      required\n                      data-testid=\"input-quantity\"\n                    />\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                      Minimum order quantity: {product.moq} pieces\n                    </p>\n                  </div>\n\n                  <div>\n                    <Label>Price Tier</Label>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 mt-2\">\n                      {product.priceRanges.map((range, index) => (\n                        <div key={index} className=\"p-3 border rounded-lg\">\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                            {range.min} - {range.max ? range.max : '∞'} pieces\n                          </p>\n                          <p className=\"font-semibold text-lg\">${range.price}/piece</p>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"customization\">Customization Requirements</Label>\n                    <Textarea\n                      id=\"customization\"\n                      rows={4}\n                      placeholder=\"Describe any customization needs (color, size, logo, packaging, etc.)\"\n                      value={customization}\n                      onChange={(e) => setCustomization(e.target.value)}\n                    />\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"deliveryDate\">Expected Delivery Date</Label>\n                      <Input\n                        id=\"deliveryDate\"\n                        type=\"date\"\n                        value={deliveryDate}\n                        onChange={(e) => setDeliveryDate(e.target.value)}\n                      />\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                        Standard lead time: {product.leadTime}\n                      </p>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"paymentTerms\">Preferred Payment Terms</Label>\n                      <Select value={paymentTerms} onValueChange={setPaymentTerms}>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select payment terms\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"tt\">T/T (Telegraphic Transfer)</SelectItem>\n                          <SelectItem value=\"lc\">L/C (Letter of Credit)</SelectItem>\n                          <SelectItem value=\"western-union\">Western Union</SelectItem>\n                          <SelectItem value=\"paypal\">PayPal</SelectItem>\n                          <SelectItem value=\"escrow\">Trade Assurance/Escrow</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"notes\">Additional Notes</Label>\n                    <Textarea\n                      id=\"notes\"\n                      rows={3}\n                      placeholder=\"Any additional requirements or questions...\"\n                    />\n                  </div>\n                </form>\n              </Card>\n            </div>\n\n            <div className=\"lg:col-span-1\">\n              <Card className=\"p-6 glass-card sticky top-24\">\n                <h3 className=\"text-xl font-bold mb-4\">Order Summary</h3>\n                \n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-3 pb-4 border-b border-gray-200 dark:border-gray-700\">\n                    <Package className=\"h-5 w-5 text-gray-400\" />\n                    <div className=\"flex-1\">\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Quantity</p>\n                      <p className=\"font-semibold\">{parseInt(quantity).toLocaleString()} pieces</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center gap-3 pb-4 border-b border-gray-200 dark:border-gray-700\">\n                    <DollarSign className=\"h-5 w-5 text-gray-400\" />\n                    <div className=\"flex-1\">\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Unit Price</p>\n                      <p className=\"font-semibold\">${unitPrice.toFixed(2)}/piece</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center gap-3 pb-4 border-b border-gray-200 dark:border-gray-700\">\n                    <FileText className=\"h-5 w-5 text-gray-400\" />\n                    <div className=\"flex-1\">\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Subtotal</p>\n                      <p className=\"font-semibold text-lg\">${totalPrice.toLocaleString()}</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center gap-3 pb-4 border-b border-gray-200 dark:border-gray-700\">\n                    <Truck className=\"h-5 w-5 text-gray-400\" />\n                    <div className=\"flex-1\">\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Shipping Port</p>\n                      <p className=\"font-semibold\">{product.port}</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center gap-3 pb-4\">\n                    <Calendar className=\"h-5 w-5 text-gray-400\" />\n                    <div className=\"flex-1\">\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Lead Time</p>\n                      <p className=\"font-semibold\">{product.leadTime}</p>\n                    </div>\n                  </div>\n\n                  <div className=\"pt-4 border-t-2 border-gray-300 dark:border-gray-600\">\n                    <div className=\"flex justify-between items-center mb-4\">\n                      <span className=\"text-lg font-semibold\">Estimated Total</span>\n                      <span className=\"text-2xl font-bold text-gray-800 dark:text-gray-200\">\n                        ${totalPrice.toLocaleString()}\n                      </span>\n                    </div>\n                    <p className=\"text-xs text-gray-500 mb-4\">\n                      *Shipping costs calculated separately\n                    </p>\n                  </div>\n\n                  <Button \n                    onClick={handleSubmit}\n                    className=\"w-full gradient-blue text-white\" \n                    size=\"lg\"\n                    data-testid=\"button-submit-order\"\n                  >\n                    <ShoppingCart className=\"h-5 w-5 mr-2\" />\n                    Submit Order Request\n                  </Button>\n\n                  <p className=\"text-xs text-center text-gray-500\">\n                    Supplier will confirm pricing and availability\n                  </p>\n                </div>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":10833},"client/src/pages/Dashboard.tsx":{"content":"import Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { \n  MessageSquare, \n  FileText, \n  Heart, \n  Package,\n  TrendingUp,\n  Clock\n} from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function Dashboard() {\n  //todo: remove mock functionality\n  const stats = [\n    { label: \"Active RFQs\", value: \"5\", icon: FileText, color: \"text-primary\" },\n    { label: \"Pending Inquiries\", value: \"12\", icon: MessageSquare, color: \"text-amber-600\" },\n    { label: \"Unread Messages\", value: \"8\", icon: MessageSquare, color: \"text-gray-600\" },\n    { label: \"Favorite Suppliers\", value: \"23\", icon: Heart, color: \"text-red-600\" },\n  ];\n\n  const recentRFQs = [\n    { id: 1, title: \"Wireless Earbuds Bulk Order\", quotations: 12, status: \"Active\" },\n    { id: 2, title: \"Custom T-Shirts with Logo\", quotations: 8, status: \"Active\" },\n    { id: 3, title: \"LED Strip Lights\", quotations: 5, status: \"Closed\" },\n  ];\n\n  const recentInquiries = [\n    { id: 1, product: \"Bluetooth Headphones\", supplier: \"AudioTech Pro\", status: \"Replied\" },\n    { id: 2, product: \"Smart Watch\", supplier: \"TechGear Ltd\", status: \"Pending\" },\n    { id: 3, product: \"Laptop Bag\", supplier: \"Leather Crafts\", status: \"Negotiating\" },\n  ];\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-8\">\n          <div className=\"mb-6 sm:mb-8\">\n            <h1 className=\"text-2xl sm:text-3xl font-bold mb-2\">Buyer Dashboard</h1>\n            <p className=\"text-sm sm:text-base text-muted-foreground\">Welcome back! Here's what's happening with your business.</p>\n          </div>\n\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-3 sm:gap-6 mb-6 sm:mb-8\">\n            {stats.map((stat, index) => {\n              const Icon = stat.icon;\n              return (\n                <Card key={index} data-testid={`card-stat-${index}`}>\n                  <CardContent className=\"p-4 sm:p-6\">\n                    <div className=\"flex flex-col sm:flex-row items-start sm:items-center sm:justify-between gap-3\">\n                      <div className=\"w-full sm:w-auto\">\n                        <p className=\"text-xs sm:text-sm text-muted-foreground mb-1\">{stat.label}</p>\n                        <p className=\"text-2xl sm:text-3xl font-bold\" data-testid={`text-stat-value-${index}`}>{stat.value}</p>\n                      </div>\n                      <div className={`w-10 h-10 sm:w-12 sm:h-12 rounded-full bg-muted flex items-center justify-center ${stat.color} self-end sm:self-auto`}>\n                        <Icon className=\"w-5 h-5 sm:w-6 sm:h-6\" />\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n\n          <Tabs defaultValue=\"rfqs\" className=\"space-y-4 sm:space-y-6\">\n            <TabsList className=\"w-full sm:w-auto grid grid-cols-3\">\n              <TabsTrigger value=\"rfqs\" className=\"text-xs sm:text-sm\" data-testid=\"tab-rfqs\">My RFQs</TabsTrigger>\n              <TabsTrigger value=\"inquiries\" className=\"text-xs sm:text-sm\" data-testid=\"tab-inquiries\">Inquiries</TabsTrigger>\n              <TabsTrigger value=\"favorites\" className=\"text-xs sm:text-sm\" data-testid=\"tab-favorites\">Favorites</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"rfqs\">\n              <Card>\n                <CardHeader className=\"px-4 sm:px-6\">\n                  <CardTitle className=\"text-lg sm:text-xl\">Recent RFQs</CardTitle>\n                </CardHeader>\n                <CardContent className=\"px-4 sm:px-6\">\n                  <div className=\"space-y-3 sm:space-y-4\">\n                    {recentRFQs.map((rfq) => (\n                      <div key={rfq.id} className=\"flex flex-col sm:flex-row sm:items-center justify-between p-3 sm:p-4 border rounded-lg hover:bg-muted/50 transition-colors gap-3 sm:gap-0\" data-testid={`rfq-item-${rfq.id}`}>\n                        <div className=\"flex-1\">\n                          <h4 className=\"font-medium mb-1 text-sm sm:text-base\">{rfq.title}</h4>\n                          <p className=\"text-xs sm:text-sm text-muted-foreground\">{rfq.quotations} quotations received</p>\n                        </div>\n                        <div className=\"flex items-center gap-2 sm:gap-4\">\n                          <Badge variant={rfq.status === \"Active\" ? \"default\" : \"secondary\"} className=\"text-xs\">\n                            {rfq.status}\n                          </Badge>\n                          <Button variant=\"outline\" size=\"sm\" className=\"text-xs sm:text-sm h-8\" data-testid={`button-view-rfq-${rfq.id}`}>View</Button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  <Button className=\"w-full mt-3 sm:mt-4\" variant=\"outline\" size=\"sm\" data-testid=\"button-view-all-rfqs\">View All RFQs</Button>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"inquiries\">\n              <Card>\n                <CardHeader className=\"px-4 sm:px-6\">\n                  <CardTitle className=\"text-lg sm:text-xl\">Recent Inquiries</CardTitle>\n                </CardHeader>\n                <CardContent className=\"px-4 sm:px-6\">\n                  <div className=\"space-y-3 sm:space-y-4\">\n                    {recentInquiries.map((inquiry) => (\n                      <div key={inquiry.id} className=\"flex flex-col sm:flex-row sm:items-center justify-between p-3 sm:p-4 border rounded-lg hover:bg-muted/50 transition-colors gap-3 sm:gap-0\" data-testid={`inquiry-item-${inquiry.id}`}>\n                        <div className=\"flex-1\">\n                          <h4 className=\"font-medium mb-1 text-sm sm:text-base\">{inquiry.product}</h4>\n                          <p className=\"text-xs sm:text-sm text-muted-foreground\">{inquiry.supplier}</p>\n                        </div>\n                        <div className=\"flex items-center gap-2 sm:gap-4\">\n                          <Badge \n                            variant={inquiry.status === \"Replied\" ? \"default\" : inquiry.status === \"Negotiating\" ? \"secondary\" : \"outline\"}\n                            className=\"text-xs\"\n                          >\n                            {inquiry.status}\n                          </Badge>\n                          <Button variant=\"outline\" size=\"sm\" className=\"text-xs sm:text-sm h-8\" data-testid={`button-view-inquiry-${inquiry.id}`}>View</Button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  <Button className=\"w-full mt-3 sm:mt-4\" variant=\"outline\" size=\"sm\" data-testid=\"button-view-all-inquiries\">View All Inquiries</Button>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"favorites\">\n              <Card>\n                <CardHeader className=\"px-4 sm:px-6\">\n                  <CardTitle className=\"text-lg sm:text-xl\">Favorite Suppliers & Products</CardTitle>\n                </CardHeader>\n                <CardContent className=\"px-4 sm:px-6\">\n                  <div className=\"text-center py-8 sm:py-12\">\n                    <Heart className=\"w-12 h-12 sm:w-16 sm:h-16 mx-auto text-muted-foreground mb-4\" />\n                    <h3 className=\"font-semibold mb-2 text-sm sm:text-base\">No favorites yet</h3>\n                    <p className=\"text-xs sm:text-sm text-muted-foreground mb-4\">Start adding suppliers and products to your favorites</p>\n                    <Button data-testid=\"button-browse-products\">Browse Products</Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":8113},"client/src/pages/TradeShows.tsx":{"content":"import Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { \n  Calendar, \n  MapPin, \n  Users, \n  Building2,\n  Search,\n  Star,\n  TrendingUp\n} from \"lucide-react\";\n\nexport default function TradeShows() {\n  //todo: remove mock functionality\n  const upcomingShows = [\n    {\n      id: 1,\n      name: \"International Electronics & Technology Expo 2024\",\n      date: \"March 15-18, 2024\",\n      location: \"Las Vegas Convention Center, USA\",\n      category: \"Electronics\",\n      exhibitors: \"2,500+\",\n      visitors: \"80,000+\",\n      featured: true,\n      image: \"https://images.unsplash.com/photo-1540575467063-178a50c2df87?w=800&h=400&fit=crop\"\n    },\n    {\n      id: 2,\n      name: \"Global Fashion & Apparel Trade Fair\",\n      date: \"April 10-13, 2024\",\n      location: \"ExCeL London, UK\",\n      category: \"Fashion\",\n      exhibitors: \"1,800+\",\n      visitors: \"65,000+\",\n      featured: true,\n      image: \"https://images.unsplash.com/photo-1556761175-b413da4baf72?w=800&h=400&fit=crop\"\n    },\n    {\n      id: 3,\n      name: \"Industrial Machinery Summit\",\n      date: \"May 5-8, 2024\",\n      location: \"Messe Frankfurt, Germany\",\n      category: \"Machinery\",\n      exhibitors: \"3,200+\",\n      visitors: \"120,000+\",\n      featured: false,\n      image: \"https://images.unsplash.com/photo-1581094794329-c8112a89af12?w=800&h=400&fit=crop\"\n    },\n    {\n      id: 4,\n      name: \"Asia Pacific Home & Living Expo\",\n      date: \"June 20-23, 2024\",\n      location: \"Singapore Expo, Singapore\",\n      category: \"Home & Garden\",\n      exhibitors: \"1,500+\",\n      visitors: \"55,000+\",\n      featured: false,\n      image: \"https://images.unsplash.com/photo-1524758631624-e2822e304c36?w=800&h=400&fit=crop\"\n    },\n    {\n      id: 5,\n      name: \"Medical & Healthcare Innovation Conference\",\n      date: \"July 8-11, 2024\",\n      location: \"Shanghai International Expo Center, China\",\n      category: \"Medical\",\n      exhibitors: \"2,100+\",\n      visitors: \"75,000+\",\n      featured: false,\n      image: \"https://images.unsplash.com/photo-1576091160399-112ba8d25d1d?w=800&h=400&fit=crop\"\n    },\n    {\n      id: 6,\n      name: \"Automotive Parts & Accessories Show\",\n      date: \"August 15-18, 2024\",\n      location: \"Dubai World Trade Centre, UAE\",\n      category: \"Automotive\",\n      exhibitors: \"1,900+\",\n      visitors: \"60,000+\",\n      featured: false,\n      image: \"https://images.unsplash.com/photo-1492144534655-ae79c964c9d7?w=800&h=400&fit=crop\"\n    },\n  ];\n\n  const pastShows = [\n    {\n      id: 101,\n      name: \"Canton Fair 2023\",\n      date: \"Oct 15-19, 2023\",\n      location: \"Guangzhou, China\",\n      category: \"Multi-industry\",\n      highlights: \"25,000+ exhibitors, 200,000+ buyers from 200+ countries\"\n    },\n    {\n      id: 102,\n      name: \"CES 2024\",\n      date: \"Jan 9-12, 2024\",\n      location: \"Las Vegas, USA\",\n      category: \"Technology\",\n      highlights: \"4,000+ exhibitors, latest tech innovations showcased\"\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <div className=\"bg-gradient-to-r from-primary/10 to-primary/5 py-12 mb-8\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <Building2 className=\"w-10 h-10 text-primary\" />\n              <h1 className=\"text-4xl font-bold\">Trade Shows & Events</h1>\n            </div>\n            <p className=\"text-lg text-muted-foreground mb-6\">\n              Connect with suppliers and buyers at global trade shows\n            </p>\n\n            <div className=\"relative max-w-2xl\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n              <Input\n                placeholder=\"Search by event name, location, or industry...\"\n                className=\"pl-10 bg-background\"\n                data-testid=\"input-search-events\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-12\">\n          <div className=\"mb-12\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <h2 className=\"text-2xl font-bold\">Featured Events</h2>\n              <Button variant=\"outline\" data-testid=\"button-view-calendar\">\n                <Calendar className=\"w-4 h-4 mr-2\" />\n                View Calendar\n              </Button>\n            </div>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n              {upcomingShows.filter(show => show.featured).map((show) => (\n                <Card key={show.id} className=\"overflow-hidden hover:shadow-lg transition-shadow\" data-testid={`event-${show.id}`}>\n                  <div className=\"aspect-video relative overflow-hidden\">\n                    <img \n                      src={show.image} \n                      alt={show.name}\n                      className=\"w-full h-full object-cover\"\n                    />\n                    <Badge className=\"absolute top-4 right-4 bg-primary gap-1\">\n                      <Star className=\"w-3 h-3\" />\n                      Featured\n                    </Badge>\n                  </div>\n                  <CardHeader>\n                    <div className=\"flex items-start justify-between gap-4\">\n                      <CardTitle className=\"text-xl\">{show.name}</CardTitle>\n                      <Badge variant=\"outline\">{show.category}</Badge>\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div className=\"flex items-center gap-2 text-muted-foreground\">\n                      <Calendar className=\"w-4 h-4\" />\n                      <span>{show.date}</span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-muted-foreground\">\n                      <MapPin className=\"w-4 h-4\" />\n                      <span>{show.location}</span>\n                    </div>\n                    <div className=\"flex gap-6 pt-2\">\n                      <div className=\"flex items-center gap-2\">\n                        <Building2 className=\"w-4 h-4 text-primary\" />\n                        <div>\n                          <div className=\"font-semibold\">{show.exhibitors}</div>\n                          <div className=\"text-xs text-muted-foreground\">Exhibitors</div>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <Users className=\"w-4 h-4 text-primary\" />\n                        <div>\n                          <div className=\"font-semibold\">{show.visitors}</div>\n                          <div className=\"text-xs text-muted-foreground\">Visitors</div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"flex gap-2 pt-2\">\n                      <Button className=\"flex-1\" data-testid={`button-register-${show.id}`}>Register Now</Button>\n                      <Button variant=\"outline\" className=\"flex-1\" data-testid={`button-details-${show.id}`}>View Details</Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"mb-12\">\n            <h2 className=\"text-2xl font-bold mb-6\">Upcoming Events</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {upcomingShows.filter(show => !show.featured).map((show) => (\n                <Card key={show.id} className=\"hover:shadow-lg transition-shadow\" data-testid={`event-${show.id}`}>\n                  <div className=\"aspect-video relative overflow-hidden\">\n                    <img \n                      src={show.image} \n                      alt={show.name}\n                      className=\"w-full h-full object-cover\"\n                    />\n                  </div>\n                  <CardHeader>\n                    <div className=\"flex items-start justify-between gap-2\">\n                      <CardTitle className=\"text-lg line-clamp-2\">{show.name}</CardTitle>\n                      <Badge variant=\"outline\" className=\"shrink-0\">{show.category}</Badge>\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"space-y-3\">\n                    <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                      <Calendar className=\"w-4 h-4\" />\n                      <span>{show.date}</span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                      <MapPin className=\"w-4 h-4\" />\n                      <span className=\"line-clamp-1\">{show.location}</span>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-2 pt-2 text-sm\">\n                      <div>\n                        <div className=\"font-semibold\">{show.exhibitors}</div>\n                        <div className=\"text-xs text-muted-foreground\">Exhibitors</div>\n                      </div>\n                      <div>\n                        <div className=\"font-semibold\">{show.visitors}</div>\n                        <div className=\"text-xs text-muted-foreground\">Visitors</div>\n                      </div>\n                    </div>\n                    <Button className=\"w-full\" variant=\"outline\" data-testid={`button-learn-more-${show.id}`}>\n                      Learn More\n                    </Button>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n\n          <div>\n            <h2 className=\"text-2xl font-bold mb-6\">Past Events</h2>\n            <div className=\"space-y-4\">\n              {pastShows.map((show) => (\n                <Card key={show.id} data-testid={`past-event-${show.id}`}>\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex flex-col md:flex-row md:items-center justify-between gap-4\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-start gap-3 mb-2\">\n                          <TrendingUp className=\"w-5 h-5 text-primary mt-1\" />\n                          <div>\n                            <h3 className=\"font-semibold text-lg mb-1\">{show.name}</h3>\n                            <div className=\"flex flex-wrap gap-3 text-sm text-muted-foreground\">\n                              <div className=\"flex items-center gap-1\">\n                                <Calendar className=\"w-3 h-3\" />\n                                {show.date}\n                              </div>\n                              <div className=\"flex items-center gap-1\">\n                                <MapPin className=\"w-3 h-3\" />\n                                {show.location}\n                              </div>\n                              <Badge variant=\"outline\" className=\"text-xs\">{show.category}</Badge>\n                            </div>\n                            <p className=\"text-sm text-muted-foreground mt-2\">{show.highlights}</p>\n                          </div>\n                        </div>\n                      </div>\n                      <Button variant=\"outline\" data-testid={`button-view-recap-${show.id}`}>\n                        View Recap\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":11851},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/CategoryGrid.tsx":{"content":"import { \n  Laptop, \n  Shirt, \n  Cog, \n  Car, \n  Home, \n  Hammer,\n  Package,\n  Lightbulb,\n  ArrowRight\n} from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\n\nconst categories = [\n  { name: \"Electronics\", icon: Laptop, count: \"2.5M+ products\", color: \"from-gray-500 to-gray-600\", href: \"/category/electronics\" },\n  { name: \"Fashion\", icon: Shirt, count: \"1.8M+ products\", color: \"from-pink-500 to-rose-500\", href: \"/category/apparel\" },\n  { name: \"Machinery\", icon: Cog, count: \"950K+ products\", color: \"from-gray-500 to-slate-500\", href: \"/category/machinery\" },\n  { name: \"Automotive\", icon: Car, count: \"1.2M+ products\", color: \"from-red-500 to-red-600\", href: \"/category/automotive\" },\n  { name: \"Home & Garden\", icon: Home, count: \"3.1M+ products\", color: \"from-green-500 to-emerald-500\", href: \"/category/home\" },\n  { name: \"Construction\", icon: Hammer, count: \"720K+ products\", color: \"from-yellow-500 to-yellow-600\", href: \"/category/construction\" },\n  { name: \"Packaging\", icon: Package, count: \"890K+ products\", color: \"from-purple-500 to-indigo-500\", href: \"/category/packaging\" },\n  { name: \"Lighting\", icon: Lightbulb, count: \"650K+ products\", color: \"from-gray-600 to-gray-700\", href: \"/category/lighting\" },\n];\n\nexport default function CategoryGrid() {\n  return (\n    <section className=\"py-20 bg-muted/30\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl md:text-5xl font-bold mb-4 text-foreground\">\n            Shop by Category\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n            Explore millions of products across all major industries from verified suppliers worldwide\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-4 gap-6 md:gap-8\">\n          {categories.map((category, index) => {\n            const Icon = category.icon;\n            return (\n              <Link key={index} href={category.href}>\n                <Card className=\"group relative overflow-hidden hover-elevate transition-all duration-300 cursor-pointer hover:-translate-y-1\" data-testid={`card-category-${category.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                  <CardContent className=\"p-6 sm:p-8\">\n                    <div className=\"flex flex-col items-center text-center space-y-4\">\n                      <div className={`w-16 h-16 sm:w-20 sm:h-20 rounded-lg bg-gradient-to-r ${category.color} flex items-center justify-center group-hover:scale-110 transition-transform duration-300`}>\n                        <Icon className=\"w-8 h-8 sm:w-10 sm:h-10 text-white\" />\n                      </div>\n                      <div className=\"space-y-1\">\n                        <h3 className=\"font-bold text-base sm:text-lg text-foreground group-hover:text-primary transition-colors\">\n                          {category.name}\n                        </h3>\n                        <p className=\"text-xs sm:text-sm text-muted-foreground font-medium\">\n                          {category.count}\n                        </p>\n                      </div>\n                      <div className=\"opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                        <ArrowRight className=\"w-5 h-5 text-primary\" />\n                      </div>\n                    </div>\n                  </CardContent>\n                  \n                  {/* Hover Gradient Overlay */}\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-primary/5 to-gray-400/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n                </Card>\n              </Link>\n            );\n          })}\n        </div>\n\n        {/* View All Categories Button */}\n        <div className=\"text-center mt-12\">\n          <Link href=\"/categories\">\n            <Button size=\"lg\" variant=\"outline\" className=\"group h-12 px-8 border-2\">\n              View All Categories\n              <ArrowRight className=\"w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform\" />\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4282},"dev-frontend.sh":{"content":"#!/bin/bash\nexec vite --host 0.0.0.0 --port 5000\n","size_bytes":49},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/pages/admin/AdminProducts.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Plus, Search, Edit, Trash2, Eye } from \"lucide-react\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { insertProductSchema, type Product } from \"@shared/schema\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Switch } from \"@/components/ui/switch\";\nimport type { z } from \"zod\";\n\nexport default function AdminProducts() {\n  const [search, setSearch] = useState(\"\");\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const { toast } = useToast();\n\n  const { data: products, isLoading } = useQuery<Product[]>({\n    queryKey: [\"/api/products\", search],\n  });\n\n  const deleteProductMutation = useMutation({\n    mutationFn: async (id: string) => {\n      await apiRequest(\"DELETE\", `/api/products/${id}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/products\"] });\n      toast({\n        title: \"Success\",\n        description: \"Product deleted successfully\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to delete product\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleEdit = (product: Product) => {\n    setSelectedProduct(product);\n    setIsDialogOpen(true);\n  };\n\n  const handleDelete = async (id: string) => {\n    if (confirm(\"Are you sure you want to delete this product?\")) {\n      deleteProductMutation.mutate(id);\n    }\n  };\n\n  return (\n    <div className=\"p-8\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-3xl font-bold\" data-testid=\"text-products-title\">Products</h1>\n        <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n          <DialogTrigger asChild>\n            <Button onClick={() => setSelectedProduct(null)} data-testid=\"button-add-product\">\n              <Plus className=\"mr-2 h-4 w-4\" />\n              Add Product\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"max-w-3xl max-h-[90vh] overflow-y-auto\">\n            <DialogHeader>\n              <DialogTitle>{selectedProduct ? \"Edit Product\" : \"Add Product\"}</DialogTitle>\n            </DialogHeader>\n            <ProductForm product={selectedProduct} onSuccess={() => setIsDialogOpen(false)} />\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-4\">\n            <div className=\"relative flex-1\">\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder=\"Search products...\"\n                className=\"pl-10\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n                data-testid=\"input-search-products\"\n              />\n            </div>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {isLoading ? (\n            <div className=\"text-center py-8\">Loading...</div>\n          ) : products && products.length > 0 ? (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>SKU</TableHead>\n                  <TableHead>Name</TableHead>\n                  <TableHead>Price</TableHead>\n                  <TableHead>Stock</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead className=\"text-right\">Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {products.map((product) => (\n                  <TableRow key={product.id} data-testid={`row-product-${product.id}`}>\n                    <TableCell className=\"font-medium\" data-testid={`text-sku-${product.id}`}>\n                      {product.sku || \"N/A\"}\n                    </TableCell>\n                    <TableCell data-testid={`text-name-${product.id}`}>{product.name}</TableCell>\n                    <TableCell data-testid={`text-price-${product.id}`}>\n                      ${parseFloat(product.regularPrice as any || 0).toFixed(2)}\n                    </TableCell>\n                    <TableCell data-testid={`text-stock-${product.id}`}>\n                      {product.inStock ? product.stockQuantity : \"Out of stock\"}\n                    </TableCell>\n                    <TableCell>\n                      <Badge variant={product.isPublished ? \"default\" : \"secondary\"} data-testid={`badge-status-${product.id}`}>\n                        {product.isPublished ? \"Published\" : \"Draft\"}\n                      </Badge>\n                    </TableCell>\n                    <TableCell className=\"text-right\">\n                      <div className=\"flex justify-end gap-2\">\n                        <Button\n                          size=\"icon\"\n                          variant=\"ghost\"\n                          onClick={() => handleEdit(product)}\n                          data-testid={`button-edit-${product.id}`}\n                        >\n                          <Edit className=\"h-4 w-4\" />\n                        </Button>\n                        <Button\n                          size=\"icon\"\n                          variant=\"ghost\"\n                          onClick={() => handleDelete(product.id)}\n                          data-testid={`button-delete-${product.id}`}\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          ) : (\n            <div className=\"text-center py-8 text-muted-foreground\" data-testid=\"text-no-products\">\n              No products found\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nfunction ProductForm({ product, onSuccess }: { product: Product | null; onSuccess: () => void }) {\n  const { toast } = useToast();\n  \n  const form = useForm<z.infer<typeof insertProductSchema>>({\n    resolver: zodResolver(insertProductSchema),\n    defaultValues: product || {\n      name: \"\",\n      slug: \"\",\n      sku: \"\",\n      description: \"\",\n      shortDescription: \"\",\n      regularPrice: \"\",\n      stockQuantity: 0,\n      inStock: true,\n      isPublished: true,\n      allowReviews: true,\n      isFeatured: false,\n      visibility: \"visible\",\n    },\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: z.infer<typeof insertProductSchema>) => {\n      if (product) {\n        return await apiRequest(\"PATCH\", `/api/products/${product.id}`, data);\n      } else {\n        return await apiRequest(\"POST\", \"/api/products\", data);\n      }\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/products\"] });\n      toast({\n        title: \"Success\",\n        description: product ? \"Product updated successfully\" : \"Product created successfully\",\n      });\n      onSuccess();\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to save product\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: z.infer<typeof insertProductSchema>) => {\n    // Generate slug from name if not provided\n    if (!data.slug) {\n      data.slug = data.name.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n    }\n    \n    // Parse images string into array if provided as comma-separated\n    if (typeof data.images === 'string') {\n      data.images = (data.images as any).split(',').map((img: string) => img.trim()).filter(Boolean);\n    }\n    \n    createMutation.mutate(data);\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <div className=\"grid grid-cols-2 gap-4\">\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Product Name *</FormLabel>\n                <FormControl>\n                  <Input {...field} placeholder=\"Product name\" data-testid=\"input-product-name\" />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          \n          <FormField\n            control={form.control}\n            name=\"sku\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>SKU</FormLabel>\n                <FormControl>\n                  <Input {...field} value={field.value || \"\"} placeholder=\"SKU\" data-testid=\"input-product-sku\" />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <FormField\n          control={form.control}\n          name=\"shortDescription\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Short Description</FormLabel>\n              <FormControl>\n                <Input {...field} value={field.value || \"\"} placeholder=\"Short description\" data-testid=\"input-product-short-desc\" />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"description\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Description</FormLabel>\n              <FormControl>\n                <Textarea {...field} value={field.value || \"\"} rows={4} placeholder=\"Product description\" data-testid=\"textarea-product-desc\" />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"images\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Images (comma-separated URLs)</FormLabel>\n              <FormControl>\n                <Textarea \n                  {...field} \n                  value={Array.isArray(field.value) ? field.value.join(', ') : field.value || \"\"} \n                  rows={3} \n                  placeholder=\"https://example.com/image1.jpg, https://example.com/image2.jpg\" \n                  data-testid=\"textarea-product-images\"\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <div className=\"grid grid-cols-3 gap-4\">\n          <FormField\n            control={form.control}\n            name=\"regularPrice\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Regular Price</FormLabel>\n                <FormControl>\n                  <Input {...field} value={field.value || \"\"} type=\"number\" step=\"0.01\" placeholder=\"0.00\" data-testid=\"input-product-price\" />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"salePrice\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Sale Price</FormLabel>\n                <FormControl>\n                  <Input {...field} value={field.value || \"\"} type=\"number\" step=\"0.01\" placeholder=\"0.00\" data-testid=\"input-product-sale-price\" />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"stockQuantity\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Stock Quantity</FormLabel>\n                <FormControl>\n                  <Input {...field} value={field.value || 0} type=\"number\" placeholder=\"0\" data-testid=\"input-product-stock\" />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <div className=\"flex gap-6\">\n          <FormField\n            control={form.control}\n            name=\"inStock\"\n            render={({ field }) => (\n              <FormItem className=\"flex items-center gap-2\">\n                <FormControl>\n                  <Switch checked={field.value || false} onCheckedChange={field.onChange} data-testid=\"switch-in-stock\" />\n                </FormControl>\n                <FormLabel className=\"!mt-0\">In Stock</FormLabel>\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"isPublished\"\n            render={({ field }) => (\n              <FormItem className=\"flex items-center gap-2\">\n                <FormControl>\n                  <Switch checked={field.value || false} onCheckedChange={field.onChange} data-testid=\"switch-published\" />\n                </FormControl>\n                <FormLabel className=\"!mt-0\">Published</FormLabel>\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"isFeatured\"\n            render={({ field }) => (\n              <FormItem className=\"flex items-center gap-2\">\n                <FormControl>\n                  <Switch checked={field.value || false} onCheckedChange={field.onChange} data-testid=\"switch-featured\" />\n                </FormControl>\n                <FormLabel className=\"!mt-0\">Featured</FormLabel>\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <div className=\"flex justify-end gap-2\">\n          <Button type=\"submit\" disabled={createMutation.isPending} data-testid=\"button-save-product\">\n            {createMutation.isPending ? \"Saving...\" : \"Save Product\"}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  );\n}\n","size_bytes":14489},"client/src/components/SupplierCard.tsx":{"content":"import { MapPin, ShieldCheck, Star, TrendingUp } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\n\ninterface SupplierCardProps {\n  id: string;\n  logo: string;\n  name: string;\n  location: string;\n  yearsInBusiness: number;\n  rating: number;\n  responseRate: string;\n  mainProducts: string[];\n  verified?: boolean;\n  goldSupplier?: boolean;\n}\n\nexport default function SupplierCard({\n  id,\n  logo,\n  name,\n  location,\n  yearsInBusiness,\n  rating,\n  responseRate,\n  mainProducts,\n  verified = false,\n  goldSupplier = false,\n}: SupplierCardProps) {\n  return (\n    <Card className=\"group hover-elevate transition-all duration-300 hover:shadow-xl\" data-testid={`card-supplier-${id}`}>\n      <CardContent className=\"p-6\">\n        <div className=\"flex gap-4 mb-4\">\n          <div className=\"w-20 h-20 bg-muted rounded-lg flex items-center justify-center overflow-hidden border border-border group-hover:border-primary transition-colors\">\n            <img src={logo} alt={name} className=\"w-full h-full object-cover\" />\n          </div>\n          <div className=\"flex-1\">\n            <Link href={`/supplier/${id}`}>\n              <h3 className=\"font-semibold text-lg mb-2 hover:text-primary transition-colors line-clamp-1\" data-testid={`text-supplier-name-${id}`}>\n                {name}\n              </h3>\n            </Link>\n            <div className=\"flex flex-wrap gap-1.5 mb-2\">\n              {verified && (\n                <Badge className=\"bg-green-600 text-white text-xs border-0\" data-testid={`badge-verified-${id}`}>\n                  <ShieldCheck className=\"w-3 h-3 mr-1\" />\n                  Verified\n                </Badge>\n              )}\n              {goldSupplier && (\n                <Badge className=\"bg-gradient-to-r from-amber-500 to-yellow-500 text-white text-xs border-0\" data-testid={`badge-gold-${id}`}>\n                  <Star className=\"w-3 h-3 mr-1 fill-white\" />\n                  Gold\n                </Badge>\n              )}\n            </div>\n            <div className=\"flex items-center gap-1.5 text-sm text-muted-foreground\">\n              <MapPin className=\"w-4 h-4 flex-shrink-0\" />\n              <span className=\"truncate\" data-testid={`text-location-${id}`}>{location}</span>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-3 gap-4 mb-4 py-3 px-2 bg-muted/30 rounded-lg text-center text-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"flex items-center gap-1 font-bold text-base\" data-testid={`text-years-${id}`}>\n              <TrendingUp className=\"w-4 h-4 text-primary\" />\n              {yearsInBusiness}Y\n            </div>\n            <div className=\"text-muted-foreground text-xs\">Experience</div>\n          </div>\n          <div className=\"flex flex-col items-center border-x border-border\">\n            <div className=\"font-bold text-base flex items-center justify-center gap-1\" data-testid={`text-rating-${id}`}>\n              {rating} <Star className=\"w-4 h-4 fill-amber-400 text-amber-400\" />\n            </div>\n            <div className=\"text-muted-foreground text-xs\">Rating</div>\n          </div>\n          <div className=\"flex flex-col items-center\">\n            <div className=\"font-bold text-base text-primary\" data-testid={`text-response-${id}`}>{responseRate}</div>\n            <div className=\"text-muted-foreground text-xs\">Response</div>\n          </div>\n        </div>\n        \n        <div className=\"mb-4 pb-4 border-b border-border\">\n          <p className=\"text-sm font-medium text-muted-foreground mb-2\">Main Products:</p>\n          <div className=\"flex flex-wrap gap-1.5\">\n            {mainProducts.slice(0, 3).map((product, index) => (\n              <Badge key={index} variant=\"secondary\" className=\"text-xs\" data-testid={`badge-product-${id}-${index}`}>\n                {product}\n              </Badge>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\" size=\"sm\" className=\"flex-1\" data-testid={`button-view-${id}`}>\n            View Profile\n          </Button>\n          <Button size=\"sm\" className=\"flex-1\" data-testid={`button-contact-${id}`}>\n            Contact\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":4434}},"version":2}